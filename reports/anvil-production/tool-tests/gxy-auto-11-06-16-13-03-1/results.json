{"version": "0.1", "suitename": "Ephemeris tool tests targeting http://35.227.41.172:8000/galaxy/", "results": {"total": 103, "errors": 29, "failures": 0, "skips": 0}, "tests": [{"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 0, "time_seconds": 56.65113019943237, "inputs": {"reads": {"src": "hda", "id": "2e22062b7e175b43"}, "overlaps": {"src": "hda", "id": "ca9a2dc61a856392"}, "corrected_reads": {"src": "hda", "id": "8b0014595482a722"}, "u": true, "f": true, "w": "800", "e": "0.2"}, "job": {"model_class": "Job", "id": "05909f52733e7170", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:10:12.112645", "create_time": "2021-11-06T18:09:46.460728", "galaxy_version": "21.05", "command_version": "v1.4.13\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "1787f5936be7ca45", "external_id": "gxy-r9v7s", "command_line": "ln -s '/galaxy/server/database/objects/9/9/e/dataset_99e21ebd-9029-4917-81c6-0ae014dad5be.dat' reads.fasta && ln -s '/galaxy/server/database/objects/e/1/4/dataset_e1437dac-05a9-4b51-8fde-7c899f80f151.dat' overlaps.sam && ln -s '/galaxy/server/database/objects/8/c/4/dataset_8c44a91a-ece1-4bbd-8474-c727c360fa0d.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.sam corrected_reads.fasta -t ${GALAXY_SLOTS:-4} -u -f -w 800 -q 10.0 -e 0.2 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.2\"", "q": "\"10.0\"", "w": "\"800\"", "f": "\"true\"", "u": "\"true\""}, "inputs": {"reads": {"id": "2e22062b7e175b43", "src": "hda", "uuid": "99e21ebd-9029-4917-81c6-0ae014dad5be"}, "overlaps": {"id": "ca9a2dc61a856392", "src": "hda", "uuid": "e1437dac-05a9-4b51-8fde-7c899f80f151"}, "corrected_reads": {"id": "8b0014595482a722", "src": "hda", "uuid": "8c44a91a-ece1-4bbd-8474-c727c360fa0d"}}, "outputs": {"consensus": {"id": "6974b0b7bf334c6e", "src": "hda", "uuid": "6686f7fd-ce8a-4d19-94b6-14cb1ea40a13"}}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.001224 s\n[racon::Polisher::initialize] loaded sequences 0.013811 s\n[racon::Polisher::initialize] loaded overlaps 0.013978 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.012519 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.013018 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.013719 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.015265 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.015286 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.015299 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.015957 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.018729 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.018755 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.018773 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.018792 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.018809 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.019700 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.021310 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.021335 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.022754 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.022779 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.024161 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.024281 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.025159 s\n[racon::Polisher::initialize] transformed data into windows 0.000409 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.168952 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.326436 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.461218 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.543814 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.613681 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.696954 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.793886 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.917179 s\r[racon::Polisher::polish] generating consensus [=========>          ] 1.116112 s\r[racon::Polisher::polish] generating consensus [==========>         ] 1.348831 s\r[racon::Polisher::polish] generating consensus [===========>        ] 1.714108 s\r[racon::Polisher::polish] generating consensus [============>       ] 2.016149 s\r[racon::Polisher::polish] generating consensus [=============>      ] 2.267148 s\r[racon::Polisher::polish] generating consensus [==============>     ] 2.508269 s\r[racon::Polisher::polish] generating consensus [===============>    ] 2.642344 s\r[racon::Polisher::polish] generating consensus [================>   ] 2.836640 s\r[racon::Polisher::polish] generating consensus [=================>  ] 2.911146 s\r[racon::Polisher::polish] generating consensus [==================> ] 3.149881 s\r[racon::Polisher::polish] generating consensus [===================>] 3.376086 s\r[racon::Polisher::polish] generating consensus [====================] 3.552001 s\n[racon::Polisher::] total = 3.612214 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.001224 s\n[racon::Polisher::initialize] loaded sequences 0.013811 s\n[racon::Polisher::initialize] loaded overlaps 0.013978 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.012519 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.013018 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.013719 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.015265 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.015286 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.015299 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.015957 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.018729 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.018755 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.018773 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.018792 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.018809 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.019700 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.021310 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.021335 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.022754 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.022779 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.024161 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.024281 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.025159 s\n[racon::Polisher::initialize] transformed data into windows 0.000409 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.168952 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.326436 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.461218 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.543814 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.613681 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.696954 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.793886 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.917179 s\r[racon::Polisher::polish] generating consensus [=========>          ] 1.116112 s\r[racon::Polisher::polish] generating consensus [==========>         ] 1.348831 s\r[racon::Polisher::polish] generating consensus [===========>        ] 1.714108 s\r[racon::Polisher::polish] generating consensus [============>       ] 2.016149 s\r[racon::Polisher::polish] generating consensus [=============>      ] 2.267148 s\r[racon::Polisher::polish] generating consensus [==============>     ] 2.508269 s\r[racon::Polisher::polish] generating consensus [===============>    ] 2.642344 s\r[racon::Polisher::polish] generating consensus [================>   ] 2.836640 s\r[racon::Polisher::polish] generating consensus [=================>  ] 2.911146 s\r[racon::Polisher::polish] generating consensus [==================> ] 3.149881 s\r[racon::Polisher::polish] generating consensus [===================>] 3.376086 s\r[racon::Polisher::polish] generating consensus [====================] 3.552001 s\n[racon::Polisher::] total = 3.612214 s\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:10:10", "plugin": "core", "name": "end_epoch", "raw_value": "1636222210.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636222206.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 1, "time_seconds": 54.3278386592865, "inputs": {"reads": {"src": "hda", "id": "2e22062b7e175b43"}, "overlaps": {"src": "hda", "id": "4770104a25deb31f"}, "corrected_reads": {"src": "hda", "id": "8b0014595482a722"}}, "job": {"model_class": "Job", "id": "d4fa4671d25e09ee", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:10:11.068337", "create_time": "2021-11-06T18:09:51.008775", "galaxy_version": "21.05", "command_version": "v1.4.13\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "1787f5936be7ca45", "external_id": "gxy-mhsfv", "command_line": "ln -s '/galaxy/server/database/objects/9/9/e/dataset_99e21ebd-9029-4917-81c6-0ae014dad5be.dat' reads.fasta && ln -s '/galaxy/server/database/objects/a/3/3/dataset_a33ceb82-220b-4480-a5a9-71aa55780e0a.dat' overlaps.paf && ln -s '/galaxy/server/database/objects/8/c/4/dataset_8c44a91a-ece1-4bbd-8474-c727c360fa0d.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.paf corrected_reads.fasta -t ${GALAXY_SLOTS:-4}   -w 500 -q 10.0 -e 0.3 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.3\"", "q": "\"10.0\"", "w": "\"500\"", "f": "\"false\"", "u": "\"false\""}, "inputs": {"reads": {"id": "2e22062b7e175b43", "src": "hda", "uuid": "99e21ebd-9029-4917-81c6-0ae014dad5be"}, "overlaps": {"id": "4770104a25deb31f", "src": "hda", "uuid": "a33ceb82-220b-4480-a5a9-71aa55780e0a"}, "corrected_reads": {"id": "8b0014595482a722", "src": "hda", "uuid": "8c44a91a-ece1-4bbd-8474-c727c360fa0d"}}, "outputs": {"consensus": {"id": "42bde9c6c2b05391", "src": "hda", "uuid": "0eb6cc23-0575-4f40-88f1-a3d70e62fb17"}}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.000410 s\n[racon::Polisher::initialize] loaded sequences 0.013351 s\n[racon::Polisher::initialize] loaded overlaps 0.000738 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.065650 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.105556 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.145512 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.169146 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.212986 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.238644 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.272796 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.309640 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.366108 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.419847 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.448809 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.499845 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.551456 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.592390 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.637243 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.698424 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.755102 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.791893 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.833953 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.958652 s\n[racon::Polisher::initialize] transformed data into windows 0.000310 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.082646 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.179388 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.263254 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.317391 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.358157 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.390264 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.429000 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.471691 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.515249 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.583403 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.686635 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.802978 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.956445 s\r[racon::Polisher::polish] generating consensus [==============>     ] 1.126416 s\r[racon::Polisher::polish] generating consensus [===============>    ] 1.257785 s\r[racon::Polisher::polish] generating consensus [================>   ] 1.378434 s\r[racon::Polisher::polish] generating consensus [=================>  ] 1.486265 s\r[racon::Polisher::polish] generating consensus [==================> ] 1.555195 s\r[racon::Polisher::polish] generating consensus [===================>] 1.647819 s\r[racon::Polisher::polish] generating consensus [====================] 2.185091 s\n[racon::Polisher::] total = 3.159360 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.000410 s\n[racon::Polisher::initialize] loaded sequences 0.013351 s\n[racon::Polisher::initialize] loaded overlaps 0.000738 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.065650 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.105556 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.145512 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.169146 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.212986 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.238644 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.272796 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.309640 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.366108 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.419847 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.448809 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.499845 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.551456 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.592390 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.637243 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.698424 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.755102 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.791893 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.833953 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.958652 s\n[racon::Polisher::initialize] transformed data into windows 0.000310 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.082646 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.179388 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.263254 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.317391 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.358157 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.390264 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.429000 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.471691 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.515249 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.583403 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.686635 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.802978 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.956445 s\r[racon::Polisher::polish] generating consensus [==============>     ] 1.126416 s\r[racon::Polisher::polish] generating consensus [===============>    ] 1.257785 s\r[racon::Polisher::polish] generating consensus [================>   ] 1.378434 s\r[racon::Polisher::polish] generating consensus [=================>  ] 1.486265 s\r[racon::Polisher::polish] generating consensus [==================> ] 1.555195 s\r[racon::Polisher::polish] generating consensus [===================>] 1.647819 s\r[racon::Polisher::polish] generating consensus [====================] 2.185091 s\n[racon::Polisher::] total = 3.159360 s\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:10:10", "plugin": "core", "name": "end_epoch", "raw_value": "1636222210.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636222206.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 0, "time_seconds": 68.89745712280273, "inputs": {"library|input_1": {"src": "hda", "id": "eac91155db74af62"}, "library|input_2": {"src": "hda", "id": "8c4fdc067711ba0d"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "00bd3642de19a7f0"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "6c68aa16000aeb50", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:33:17.624780", "create_time": "2021-11-06T16:32:33.948784", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-tbh5j", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome && ln -s -f '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/c/b/2/dataset_cb26a9ff-4f50-4c8a-8f4a-6778056cdc51.dat' input_f.fastq &&  ln -f -s '/galaxy/server/database/objects/7/a/0/dataset_7a0402d1-4dc4-437f-b906-e182ded891e4.dat' input_r.fastq &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq' -2 'input_r.fastq'                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/8/6/b/dataset_86b9b4c1-fe7d-44e2-ad2d-abaa5de732d1.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "eac91155db74af62", "src": "hda", "uuid": "cb26a9ff-4f50-4c8a-8f4a-6778056cdc51"}, "input_2": {"id": "8c4fdc067711ba0d", "src": "hda", "uuid": "7a0402d1-4dc4-437f-b906-e182ded891e4"}, "own_file": {"id": "00bd3642de19a7f0", "src": "hda", "uuid": "b8ebfb4f-ab11-4c43-8798-b254877b7010"}}, "outputs": {"output": {"id": "455fc12d28a479b6", "src": "hda", "uuid": "86b9b4c1-fe7d-44e2-ad2d-abaa5de732d1"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 3: 50%\n  bucket 4: 40%\n  bucket 3: 60%\n  bucket 4: 50%\n  bucket 3: 70%\n  bucket 4: 60%\n  bucket 3: 80%\n  bucket 4: 70%\n  bucket 3: 90%\n  bucket 4: 80%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 4: 30%\n  bucket 3: 60%\n  bucket 4: 40%\n  bucket 3: 70%\n  bucket 4: 50%\n  bucket 3: 80%\n  bucket 4: 60%\n  bucket 3: 90%\n  bucket 4: 70%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\nGetting block 6 of 15\n  bucket 5: 30%\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 40%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 50%\n  bucket 6: 10%\n  bucket 5: 60%\n  bucket 6: 20%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 6: 30%\n  bucket 5: 90%\n  bucket 5: 100%\n  bucket 6: 40%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 8: 10%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 8: 40%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 7: 100%\n  bucket 8: 80%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 10: 20%\n  bucket 9: 50%\n  bucket 10: 30%\n  bucket 9: 60%\n  bucket 10: 40%\n  bucket 9: 70%\n  bucket 10: 50%\n  bucket 9: 80%\n  bucket 10: 60%\n  bucket 9: 90%\n  bucket 10: 70%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 11: 50%\n  bucket 12: 40%\n  bucket 11: 60%\n  bucket 12: 50%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 12: 60%\n  bucket 11: 90%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 3: 50%\n  bucket 4: 40%\n  bucket 3: 60%\n  bucket 4: 50%\n  bucket 3: 70%\n  bucket 4: 60%\n  bucket 3: 80%\n  bucket 4: 70%\n  bucket 3: 90%\n  bucket 4: 80%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 4: 30%\n  bucket 3: 60%\n  bucket 4: 40%\n  bucket 3: 70%\n  bucket 4: 50%\n  bucket 3: 80%\n  bucket 4: 60%\n  bucket 3: 90%\n  bucket 4: 70%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\nGetting block 6 of 15\n  bucket 5: 30%\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 40%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 50%\n  bucket 6: 10%\n  bucket 5: 60%\n  bucket 6: 20%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 6: 30%\n  bucket 5: 90%\n  bucket 5: 100%\n  bucket 6: 40%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 8: 10%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 8: 40%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 7: 100%\n  bucket 8: 80%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 10: 20%\n  bucket 9: 50%\n  bucket 10: 30%\n  bucket 9: 60%\n  bucket 10: 40%\n  bucket 9: 70%\n  bucket 10: 50%\n  bucket 9: 80%\n  bucket 10: 60%\n  bucket 9: 90%\n  bucket 10: 70%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 11: 50%\n  bucket 12: 40%\n  bucket 11: 60%\n  bucket 12: 50%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 12: 60%\n  bucket 11: 90%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:33:15", "plugin": "core", "name": "end_epoch", "raw_value": "1636216395.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:33:14", "plugin": "core", "name": "start_epoch", "raw_value": "1636216394.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_f_sfhyrm.sam v. /tmp/history_bam_converted_to_sam_s_zrm4uk.sam )\n--- local_file\n+++ history_data\n@@ -1,30 +1,31 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/121/tmp -O bam -o /galaxy/server/database/objects/8/6/b/dataset_86b9b4c1-fe7d-44e2-ad2d-abaa5de732d1.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:7756:4776\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\tCCCCCCFFFFFFGGGGGGGEEFHHHHGHGHHHHHHGGHHHGGGGGGHHGHHHHHGHHGHHHGGFHHHHHHHHGHHHFHHGHHGFGGGGHHHHHHHHGHGHFFHFHHHHHHGGHGFGFHHHGHG?FGHHHHHHHHHHHHHHGHGHHGHGGCDGFFHHHHGHHHHHGHHHGFHGHFHGHGHGH/@CABFFFFFFFACAFF?BBFFBFD-@-.D>FFAF.F.:9---;AADFFFFFBEFFF:9FFFFBBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t-247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n********\n*SNIP *\n********\n M01368:8:000000000-A3GHV:1:1108:11059:23181\t165\tchrM\t2\t0\t*\t=\t2\t0\tAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACC\tCCCCCFFFFFCCGGGGGGGGGGHHHHHHHHHHHGHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHHHHHHHHHHHHHGHGHEHHGFCGGGHHHHHHHHHHHHHHHFGHHHHHGHGHGHHGGGBFGFFFFEAFFFA.BFFFEFDDFFFFFFFFFFEEFF;D;EFFFFFF0BFFFADDFFFFFBFBFFFFFBB0FFFF0::0BF000BFFFBBF0EDFF@\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1108:25084:18127\t161\tchrM\t2\t8\t4M24I223M\t=\t1\t-238\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tCCCCCFFFFFFFGGGGGGGGGGGGHHHHHHHHFHHHHHHHHHHHHHHGGHHGHHHHHGGGGFHHHHHFHHHHHHHHHGGHHHHHCGGHGHHGGGGGGGHHGGGGGGGGHHHGHHGGGGGGGGGGGGGGGG@CDE?EFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFE;DFBFFFFFFFFFFFFFFFFFFFAFFFFFFFBFFE0BBBFFFFFFFFFFBFFFF9BB0:0:B;\tAS:i:-97\tXN:i:0\tXM:i:4\tXO:i:1\tXG:i:24\tNM:i:28\tMD:Z:0A0T1A67A155\tYS:i:-65\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M2I15M\t=\t1\t-246\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tCCCCCFFFFFFCGGGGGGGGGGHHHHHHHHHFFHHHHGGGGGHFFFHHFHHHHHHHHHHHHHHHGFEGGGHGEDFCDFHGHFG@@DGGHHHHHHGGGGCGGGGGEHGGCGBB?CF99EGFGGFGG?D9CFFFF/BBFFFFFEF9BFFAFFFFEFFFFFFFFFFFFFFFFFFFFF.FFBBFFFFFFFFFFFF-9;;;BFFFFFB9BFBFBFABFFEFFFFFFFFFF::BFFBFFFF.9//;FFFFF/BFFB/\tAS:i:-78\tXN:i:0\tXM:i:12\tXO:i:2\tXG:i:6\tNM:i:18\tMD:Z:2C0A67A115A42A0T0A0A1A3A0C0A3\tYS:i:-78\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1110:23303:11846\t101\tchrM\t2\t0\t*\t=\t2\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGTGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTC\t3ABB?FAB?DAAGGGFBGGBB5AFFFGFHHGGGEGHHHFHHF3EGFHHHHEFHHGGHHHGH3EFHHHHHBDGHHE?ECHGHGHHHHHHFHHHGHHHHHHHGGHGGFHHHFHHGFFHHFEGFHHHHHHEHHFDAGHHHH/BDDFGGH1FDBGHHHHHHHCGHHHFH?0CGCF>CC=@--AFBFFB?=BFDFFF//FDB;-9A-AD-.A.A=?-9-:B/AEB/BFF.A;DDFFFBBFFFF/BBFFFFBFF9B;\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:14287:20817\t97\tchrM\t2\t8\t2M36I213M\t=\t1\t-250\tGCCAACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTCATCGCACCTACGTTCACTATTACAGGCGAACATACTTATTAAAGTGTGTTAATTAAT\t>>A3>AAAACFFFGFGFGGGGGHGHHHHHHHGGGGGHGHFFCGHHGBGHFHHHHAGHHHHEHHAGFFEHEAE?GHHHHEGFFFDGHGHBFFHFHHHGHGHGHBECG@@@EHGGEGCGGGGFFGGGG?BGGGGGG.-C.FEDCFFFEFFFAF/99BEFA.:9BFB/9FFFEFFFFFFEFFF/FBBFFFFFFFFFFFB//;.@@//;DFFFF//BBFFFBF;A;DF=>B//;9B//B/;/;9//9//;B/:B9\tAS:i:-137\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:36\tNM:i:42\tMD:Z:0A0T69A85T16A21C18\tYS:i:-32\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1111:23624:14516\t165\tchrM\t2\t0\t*\t=\t2\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACCCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tBBBBABFFFFFFGGGGGGGGGGHHCGHHHHHHHGHHHHHHHHHHHGDGEHHHHHHGHHHHHHHHHHHHHHHGGEFGHHHHHHHHBGFHHHHHHHHHHHHHHGHGGGGCEFGGCGHHHHFHHHHGHHHHFGHHHHHHGHGHGHHBCA?B-9FGFG?D;BD?9BFFFFFFF;DFFFF-.A;ADF-@=EF??A.BFFFEF>FDFFFFFFFFFFFBFFFFFFFFFFF/FFF/BFFFFFFFBA.?@;FFBDFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M2I15M\t=\t1\t-246\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tCCCCCFFFFFFCGGGGGGGGGGHHHHHHHHHFFHHHHGGGGGHFFFHHFHHHHHHHHHHHHHHHGFEGGGHGEDFCDFHGHFG@@DGGHHHHHHGGGGCGGGGGEHGGCGBB?CF99EGFGGFGG?D9CFFFF/BBFFFFFEF9BFFAFFFFEFFFFFFFFFFFFFFFFFFFFF.FFBBFFFFFFFFFFFF-9;;;BFFFFFB9BFBFBFABFFEFFFFFFFFFF::BFFBFFFF.9//;FFFFF/BFFB/\tAS:i:-78\tXN:i:0\tXM:i:12\tXO:i:2\tXG:i:6\tNM:i:18\tMD:Z:2C0A67A115A42A0T0A0A1A3A0C0A3\tYS:i:-78\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t83\tchrM\t2\t40\t1M10I240M\t=\t1\t-242\tATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAAC\t//A:D9/FBFFFFFB;//FFBA@:..BFFFFFA0A;;D;:.GGFBFEC//BAGFBEGGGFFGHFHCDC@CC.ACGCCDCGF1.?GDCA/HHHGHGGGCGGHGGDGGGHGDGDCGGHHGEGHFHFGGGGEGHHHHHHGHHHHGFHHGHFGGGGHHBFHHHHHHHHGGGFHEEGB5EFHFGHHGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHGCGHHHHHHHGHHHHGGHGGGGGGGGGGFFFFFFFAAAAA\tAS:i:-41\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:14A56A169\tYS:i:-45\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:5446:12248\t89\tchrM\t2\t0\t4M39I208M\t=\t2\t0\tATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATT\tFFFEFFFFFEFFFFFFBFFFFFFFFFFBFFFFFFFFFGGFFFFGGGGGGGF?;/GGGGGEGE;EF:GGGGGGHHHHGGGHFHHHHHHHHHHHHHGGGGGGHGGGGGGGHHGHGGGGGGHHHHHHGGGGHHGGFGHHHGGGGGGHHHGFFHHHHGGGGGHHHHHHHHHGHHHHHHHHGGGGGHGHGHHHHHHHHHHGGHGGHGBGHHHHHHHHHHHHHHHHGGGGHHHHHGFGGGGGGGGFCCFFFFDCCCC\tAS:i:-137\tXN:i:0\tXM:i:3\tXO:i:1\tXG:i:39\tNM:i:42\tMD:Z:2C0A67A140\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1102:18842:24844\t153\tchrM\t2\t3\t4M24I223M\t=\t2\t0\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tFB:/BFFBFF;////FA9.FFFBFFFFFFFF9FBB/.A/FEF09FGEC?C9DEGFGEFEGGGFFFGFFGGHFCHHHFFHFDD@-EA?CFGGGGHHHHGDACDFEHHHHHGGGGHHGGGGHHHGGGGGGHGGCEFGHHHGGGGGHHHHHHHHHHHGFHHHFHGGGGGHHGHHHHHHGHHHHGGHGGHHHGHGHHHHHFHHHHHHHHGGGGHHHHHHHHHHHHHHHHGHHHGGGGGGGGGGFFFFBFFBCCCC\tAS:i:-95\tXN:i:0\tXM:i:4\tXO:i:1\tXG:i:24\tNM:i:28\tMD:Z:0A0T1A67A155\tYT:Z:UP\n@@ -179,6 +180,8 @@\n M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D>CFDDFFFB?AF?B;-@>.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000<00<BFBB0<00000<99.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A<GFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.<ADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/>99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG>0<0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n@@ -199,5 +202,3 @@\n M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH<1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 1, "time_seconds": 66.7578821182251, "inputs": {"library|input_1": {"src": "hdca", "id": "b863d4c9a5e2e45f"}, "library|unaligned_file": true, "library|paired_options|paired_options_selector": "no", "library|type": "paired_collection", "reference_genome|own_file": {"src": "hda", "id": "00bd3642de19a7f0"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "cb6b4b9245a70b27", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:33:17.691124", "create_time": "2021-11-06T16:32:40.023930", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-q8sdt", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome && ln -s -f '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome.fa &&   ln -s '/galaxy/server/database/objects/c/b/2/dataset_cb26a9ff-4f50-4c8a-8f4a-6778056cdc51.dat' input_f.fastq &&  ln -s '/galaxy/server/database/objects/7/a/0/dataset_7a0402d1-4dc4-437f-b906-e182ded891e4.dat' input_r.fastq &&    bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq' -2 'input_r.fastq' --un-conc '/galaxy/server/database/objects/d/b/f/dataset_dbf42f20-fa34-4589-a28a-87ace666a8d1.dat'                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/b/f/2/dataset_bf271de2-f311-4afd-b1dc-7674fd02e953.dat'  && mv '/galaxy/server/database/objects/d/b/f/dataset_dbf42f20-fa34-4589-a28a-87ace666a8d1.1.dat' '/galaxy/server/database/objects/d/b/f/dataset_dbf42f20-fa34-4589-a28a-87ace666a8d1.dat' && mv '/galaxy/server/database/objects/d/b/f/dataset_dbf42f20-fa34-4589-a28a-87ace666a8d1.2.dat' '/galaxy/server/database/objects/1/e/9/dataset_1e932b03-7847-47d1-8c8d-c5c8e798b7c2.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 2, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 2, \"src\": \"hdca\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_collection\", \"unaligned_file\": \"true\"}"}, "inputs": {"input_11": {"id": "eac91155db74af62", "src": "hda", "uuid": "cb26a9ff-4f50-4c8a-8f4a-6778056cdc51"}, "input_12": {"id": "8c4fdc067711ba0d", "src": "hda", "uuid": "7a0402d1-4dc4-437f-b906-e182ded891e4"}, "own_file": {"id": "00bd3642de19a7f0", "src": "hda", "uuid": "b8ebfb4f-ab11-4c43-8798-b254877b7010"}}, "outputs": {"output": {"id": "66ba5753375baf85", "src": "hda", "uuid": "bf271de2-f311-4afd-b1dc-7674fd02e953"}, "output_unaligned_reads_r": {"id": "9b80596ecc49d00c", "src": "hda", "uuid": "1e932b03-7847-47d1-8c8d-c5c8e798b7c2"}, "output_unaligned_reads_l": {"id": "0365b179cd5c7d10", "src": "hda", "uuid": "dbf42f20-fa34-4589-a28a-87ace666a8d1"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 40%\n  bucket 3: 70%\n  bucket 4: 50%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 4: 60%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 9: 40%\n  bucket 10: 50%\n  bucket 9: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 9: 60%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  bucket 9: 80%\n  bucket 9: 90%\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 12: 20%\n  bucket 11: 60%\n  bucket 12: 30%\n  bucket 11: 70%\n  bucket 12: 40%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 12: 50%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 1: 50%\n  bucket 2: 50%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 1: 70%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 80%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  bucket 3: 10%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 3: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 40%\n  bucket 3: 70%\n  bucket 4: 50%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 4: 60%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 9: 40%\n  bucket 10: 50%\n  bucket 9: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 9: 60%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  bucket 9: 80%\n  bucket 9: 90%\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 12: 20%\n  bucket 11: 60%\n  bucket 12: 30%\n  bucket 11: 70%\n  bucket 12: 40%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 12: 50%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 1: 50%\n  bucket 2: 50%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 1: 70%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 80%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  bucket 3: 10%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 4: 20%\n  bucket 3: 40%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 3: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:33:15", "plugin": "core", "name": "end_epoch", "raw_value": "1636216395.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:33:14", "plugin": "core", "name": "start_epoch", "raw_value": "1636216394.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_x6_rrz1z.sam v. /tmp/history_bam_converted_to_sam_bluw83fq.sam )\n--- local_file\n+++ history_data\n@@ -1,74 +1,75 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome --passthrough -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/122/tmp -O bam -o /galaxy/server/database/objects/b/f/2/dataset_bf271de2-f311-4afd-b1dc-7674fd02e953.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1104:7756:4776\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\tCCCCCCFFFFFFGGGGGGGEEFHHHHGHGHHHHHHGGHHHGGGGGGHHGHHHHHGHHGHHHGGFHHHHHHHHGHHHFHHGHHGFGGGGHHHHHHHHGHGHFFHFHHHHHHGGHGFGFHHHGHG?FGHHHHHHHHHHHHHHGHGHHGHGGCDGFFHHHHGHHHHHGHHHGFHGHFHGHGHGH/@CABFFFFFFFACAFF?BBFFBFD-@-.D>FFAF.F.:9---;AADFFFFFBEFFF:9FFFFBBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t-247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n********\n*SNIP *\n********\n M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D>CFDDFFFB?AF?B;-@>.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000<00<BFBB0<00000<99.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A<GFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.<ADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/>99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG>0<0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-<CCBGHHHGEFFFFHH.C/<AEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1>>1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG<GDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB>--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB>FFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF->@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@>EAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF<..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C<EGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@<FGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0<C;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t>A33>FFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH<1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 2, "time_seconds": 56.39177846908569, "inputs": {"library|input_1": {"src": "hda", "id": "eac91155db74af62"}, "library|input_2": {"src": "hda", "id": "8c4fdc067711ba0d"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "00bd3642de19a7f0"}, "reference_genome|source": "history", "rg|read_group_id_conditional|ID": "rg1", "rg|PL": "CAPILLARY", "rg|rg_selector": "set", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "6f71b1660c287d7b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:33:23.940602", "create_time": "2021-11-06T16:32:54.020556", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-8p6tt", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome && ln -s -f '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/c/b/2/dataset_cb26a9ff-4f50-4c8a-8f4a-6778056cdc51.dat' input_f.fastq &&  ln -f -s '/galaxy/server/database/objects/7/a/0/dataset_7a0402d1-4dc4-437f-b906-e182ded891e4.dat' input_r.fastq &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq' -2 'input_r.fastq'                        --rg-id \"rg1\"  --rg \"PL:CAPILLARY\"              | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/2/1/f/dataset_21f0207d-a0e9-4e23-90a9-b167984c3807.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": null, \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "eac91155db74af62", "src": "hda", "uuid": "cb26a9ff-4f50-4c8a-8f4a-6778056cdc51"}, "input_2": {"id": "8c4fdc067711ba0d", "src": "hda", "uuid": "7a0402d1-4dc4-437f-b906-e182ded891e4"}, "own_file": {"id": "00bd3642de19a7f0", "src": "hda", "uuid": "b8ebfb4f-ab11-4c43-8798-b254877b7010"}}, "outputs": {"output": {"id": "b76e93b8f71346c7", "src": "hda", "uuid": "21f0207d-a0e9-4e23-90a9-b167984c3807"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 2: 20%\n  bucket 1: 30%\n  bucket 2: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  bucket 4: 90%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  bucket 5: 10%\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 6: 10%\n  bucket 5: 40%\n  bucket 6: 20%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  bucket 6: 90%\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 2: 20%\n  bucket 1: 30%\n  bucket 2: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  bucket 4: 90%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  bucket 5: 10%\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 6: 10%\n  bucket 5: 40%\n  bucket 6: 20%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  bucket 6: 90%\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:33:21", "plugin": "core", "name": "end_epoch", "raw_value": "1636216401.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:33:20", "plugin": "core", "name": "start_epoch", "raw_value": "1636216400.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_nsy8ez62.sam v. /tmp/history_bam_converted_to_sam_25z1wlae.sam )\n--- local_file\n+++ history_data\n@@ -1,30 +1,31 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n @RG\tID:rg1\tPL:CAPILLARY\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome --rg-id rg1 --rg PL:CAPILLARY -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome --rg-id rg1 --rg PL:CAPILLARY -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/123/tmp -O bam -o /galaxy/server/database/objects/2/1/f/dataset_21f0207d-a0e9-4e23-90a9-b167984c3807.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\tRG:Z:rg1\n********\n*SNIP *\n********\n@@ -108,24 +127,6 @@\n M01368:8:000000000-A3GHV:1:1104:13832:4398\t141\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGATCTCGGGGGGTGCCGGCTCATTAAAAAAAGAAGATGTCGAGATGTCAGTGCGTGAGTGGAAGTG\tBBCCCFFFFFFFGGGGGGGGGGGGGHGGGGGGGHHHGFGGHHFGGGHGHHGHGFGECGHHHHGGGGGGGHEGFGGGHHGHFHHHHFGHFHHHHGHHHHFGGFGG3FFGGHHHHHHH2?FFGHFHHHHHHHHHBGHDGC0FGHHGHHGHHHHHHHHHHFGHHGGGGGHG-:@?FAGA:.:09CB0000;9B0.9-;---:./----.0;B00;:0;;.../90009..-..00000000-...90:.00/00\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t77\t*\t0\t0\t*\t*\t0\t0\tAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTAT\tAAA?AFFF3DFFFGGBGFF3EAEEEHFHHFHHHGHHHHDGHHGAEFGHHHGFCHHGHHHBGHHHAEGGHGGFHFBFHHHHHHHHHHFHH1EEHEEHH1FFDEEFCGHBGHHFHEHHHHHH1FCGHHHHEEFGEEGFFCHHH11>GHHF/FG2DGGCGAGGHGGGG@@@BEFFF?@@@FFEFFFFFF?@@FB@BB@FFFE=;==---A9EFBBB/;E;A9B/B/FFFEF/B///;/;9/A/;/9BFFFBFBB\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t141\t*\t0\t0\t*\t*\t0\t0\tGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGGGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACGAG\tAABBBFFFFFFFGAFGG5GGGGHDGHHHHHHHHHHHHFHCFGC2F3BFGFGHBGHHFHEDHFGGGGGHHHG3F?GHHGGC/EFEHFGAEFFHGGAEHGGGG3EEGEEDHFHAAD@DGGGHG/<C/CHHHHHHEDHFHGHHG0>AC1>GED-<<-.;C0:0C:C;GH:::::0B90;FFGEGFBFF0C.;9F0;0090;900;00FA9D.A...-9=BBFFFE/FE9;9E//BBBB.BBB///B/9/B..;.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTT\tCCCCBFFFFFFFGGGGGGGGGGGHHHHHHHHHHHHGHHHHHGGGGGHHHHHGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHGHHHGHHHGHGHHGHHHHGGHGGG=FFGEHHHHHGHFGGHHGHHHHHFHHHHHHHGGHHHHHHHGHEHHGHHHHHGGGGF9AGE?DEGFFGGGGGGGGGGGGGGFFFF/9FFBFFFFFFFEFFFBFFFFFFFFFFFFEFFF0\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t141\t*\t0\t0\t*\t*\t0\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCTCC\tBCCCCFCCCCCCGGGGGGGGGGHHHHHHHHGGGGGHHHHHHHHGHHHHHHHHHGHHHHHHHHGHHHHHHHHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHGHHHDGHHHHHHHHHHHHHHHHHGHHHHHGGGGGGHHHHHGHHHHHHHHFFHHHHHCCAHFHHGGFFFFFFFFFAA;BDDFFFF00.-=D.ABDA-.::AAF;F@.AAD./0000.9-;.9:00009:F090;FF000900;\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t77\t*\t0\t0\t*\t*\t0\t0\tATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTC\tCDDDDFFFBFFCGGGGGGGGGGHHHHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHGGGGGHHHHFGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHHHHHHHHHHHHHGHHHHGGGGGGHGGHGHHHHHHH;CHHHHHHHHHHHHHHHGHGGGGFGGGFGGGGGGGGGGGGFGGGEGGFFFFFFFFFFFFFFFFFFFFFFFFF/FFFFFFFFFFFFFFFF0\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t141\t*\t0\t0\t*\t*\t0\t0\tGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGT\tCCBCCCBBCCCCGGGGGGGGGGHGGGGGHHHHHHHGHHHHGHHHHHFFFGGHGHHHHHHHHHHHHHHHHFGHHHHHHHGHHGHFHFGHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHDGGCGHHHHHHHHHHHHHFF<GGHHHHGFGHGEHGGA=A=DFFFFAFAFF?FFFFFFFFFADFAAD;FFFA:BBBAE.A.EBFFFFEF-..0BFFF9\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t77\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGTTCCCGTGAGTGGTTAATAGGGTGATAGGCCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tAA1A1DFFFFFBGG3A111FFAEGDDBGFDHF00F01BBA00BFGEHFBFFA1FABB0FAE?CFHF1BGFHFB0011F121E//>>1F10>B?EFHGCC/?/BFG/EEGFFEE//BCFDE0?E@@B/?11</?//<@?/F<<<A-<FBGH0.00=G0<<C//./0;;GC....<C.=.00;;BB./:.900////.C000;0090;..//000;C/;;/B/9BA9A9-AEEFF?B---;B99//9/;A//9\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t141\t*\t0\t0\t*\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTGGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTAACTATTACAG\tAA>>ABFDCFFFFFDGFGFDGDEG1EGEFFBFHFGHA0E00A0CAAC0FFDFFAGHFEHHFDH/EAFCFFHACGHHAFFEF2DFFG/FGHHHHGHGH0C@/E@GGC0FG10>GGFGHHGHFFBGFGB2>F<EEF0@C@9:AAF00;9@-9.;FBBBBB->@;-A@FF<-;---@-;-----;-BFF/;---9//BBFFFF//B;FF///9BF///;/;B/BBFBFFBB/;-9--///;9/:-;BFFBBB9F\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t77\t*\t0\t0\t*\t*\t0\t0\tTATGCTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAA\tEDCCDFFCEEDCGGGGGGGGGGHHHHHGFGHGGHGGHHHHHHHHGHHEHHGGGGGHHHHHHHHHGHHHGHHHHGGGGGHHHHFFGHHHGGGGGGHHHGGGGGHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHFEHHHHHHHHHHGHHGHGGHGGGCGGGGHHH1FGGGFGGFGGGGGGGGGGEFGGGGGGGGGGGGGGGGGFFFFFFFFFFAEFFFFFFFFFFBBFBBFFFFFE1:BFFB0\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t141\t*\t0\t0\t*\t*\t0\t0\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCCCCCCCCFFFGGGGGGGGGGHHHHGHHGHHHHHHGHHHHHHFHHHHGGGGHHGHFHHHHHHHFHHHHHHHGHGGHGGHGHHHHFHFHHGHHHHHHHHHHHHHEHGHHHHHGGGGGHHHHGEHHGHHHHHHGHFGHFHGGAHGGHGGGCCBDFGFFAFDBDDFFFFFBDA;AAD-ADC?AFEFB-@@AAEFEFFFFF..-:.B0:FFFFFFEF0BFF09FF.0;9BFFFFF0BFFFFFF?.::-909;.9\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t77\t*\t0\t0\t*\t*\t0\t0\tTAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACAC\tCCCCCFBFFFFFGGGGGGGGGGHHHHHHHHHHHHHGGGGGGFHHHBFGHHHGGGGGGHHGGGGGHHGFGGHHHHHHGGGGGGHGHFGGGGGGDGEGEFGCHHHHHHHHHHGHHHHGEDHHHGGGCDGGGGFHFHGHHHGHHGHFGHHHFHHGFHHHFHHGGHFHFHHGB0CGHGFHCBGGGGEDEE9ADFEFFFGFBFGFFGGFFFFFGGFGFFFFFFFF/A?FEFFFFFEF-A.B//;BFFEF//BB///\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTACTGTCTCTTATACAC\tCBBCCFCCCCCFGGGGGGGGGGHHGHHHHFHHHHHHFHGHHHHFHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHGHHHHGHFHGHHGHHHHHHGHHHHHHGHHHHHGGGGGHHHHHHHHGHHHHHGFGHHHHHGHDHGHHGCA;?AAFGFEFDFFF.FFFFEBDFFFFFFFFBFFFFFFFFFEFEFFFEFFFFFFF.:BFFF0BFFFFFFFFFFFF;0FF0;BFFFFFFFFBFFFBFEFFFF0\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTT\tABBBBFFFFFFFGGGGGGGGGGHHGHGHHHGHHHFGHGFGHFEHGGHGGHHHGHHHHFGHGGFGFFHHFHHHHEGHFHHHHHFGGGGGHGGGHGFHGHGGGGGGHHHGGGGHHGGGGHHHGGHGGGGGGHHHHGGGGGCFHGGGCDGHGHHHFHEHHHHHHHHHEEFHHGG:C:?0<EFGBFGGGGGFE.BFGEFFFGFFGGGGGGFDEF/FFGFFFFFFF;BBFA;.:EFFE:AAFEF.BFFFFF;9FF.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTAT\tBBBBAFFFFFFFGGGGGGGFGGHHHHHHHHFHHHFHHHHGHHHHHHHHGHHHGHHEGHHHGDGCHHHHHHHHHGEHEHHHHHHHFHGGEGGHHHHHHHGEGHGHHDHHHHHHHHEHFHGHGHHHGEGCEHHFHHHGHHHHHHHF?GHHHFEFFAFFHHGG?;@DDFFB?@B;BDAFFFEBBD>D>D9@DDCFFFFFFCFDFE.AA;/BB/.;-.;BFBBBFFBFFFFFFF/9FF?/;/BBFFFFF/;FFB/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t77\t*\t0\t0\t*\t*\t0\t0\tCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGGCTTTGATTC\t3>>A@FFFFFFFGGGFEECFGGFFB5GBHH5DFH5GBEEAEFHFHHF3F3GHFHHHEF3GAEHBGFHFFEFFHHHHFFB31FGGEGFHGEHHHHHHHHHHHHHHHHHEEEEGHHHFFF3GF3FGF44BBGEHHHHGG2B/BGGHE</ECDFHHBF1DGBFBFGFH<1GHGDGGFDFE0/<--;-9./BBED;BFBD/BF9BFFFDBFDADD;FFF?->;B=.9.;.BBFFF..;A;/B/;B//;;//BBF/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t141\t*\t0\t0\t*\t*\t0\t0\tGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTCTTTAGGGTTTATGACCCTGA\tBBCCCFFFCBCCGGGGGGGGGGHGHGHHGFGFGFHGGHHGHHHHHHHHFHHGGGGAGFBGHHHFBBGH5GDHH5EEEGEHEGFBF1DGFDGFGGGBBCEEGEHFEFDDHFBFHFD/@BGDGDHHGDCCFCD/C<->.ADDGE1GA<DBGFGHBG/..DGFCDGD.:0:.;CFGHEHBF.A-99CFGGFF0C0C0BF0;CA9/B:///;//BF/9B9?-..:;.;9.9A././;B//F.B?A////9;:/:/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGACTTCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAA\tA>ABAFA?D@AFGGGGFGGGFGFHHHFFH4BCBGHHHHGFFF3G5BF3322EEAFHHHHHHAB5GHFHEHFHHH3BEEHFGF5@13FDF3GDGFHHFGHHHGHHHGFGGHHFCG//?/EGHHHG3F4BFFGHHHEDGFHHB/B/?FBF<@-9?BDEFFF?B--?DFFFB9FA>B;A.BFDB?AB.--@;-.FFAEFFFF9AE;DDFFFFB/9BFFFFFFFB:BF/BB/BFF//FFF-=--.99=--.9///\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t141\t*\t0\t0\t*\t*\t0\t0\tAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGG\tAAAAAFFFFFFFGGGGGGFGGGHHGGHHHGGGGGGHGHGDFGHFGGGGFHHHHHGGGGGGGGFHGDFGGGGHGG?@EFHGEFEHEGFHHHHHF2FEHHGHGDCEAD?GFDFGGHBGHHFEHHHHHHHHHDFGHGHHGBDFG0FFHFGGFHHH=GGBF-AACEHEHHGGGHHHGHHFHCCFEBB0FFFFFF/;0;;FFFBFE.AA0BF0??-AD/////;:BFFBFFBBBFFFFFB/.9ADDAD-D;-;=A-\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t77\t*\t0\t0\t*\t*\t0\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTA\t@?AAAFFBFBFFFGGFGFGGGEFCGGHHHHFGHGHFHGHHHHGGFGGFGHHGHGHHHHGHGFFHHGGGGGHHHHHHHHHBFHHEFHHHHHHGF?FAGHGFHHHGDGFHHGGGHGHFHHHGHHHGHHFHHGFFGFHHHGHHHHFFHHHHH/FGHHHHGHGHG<C???B=@ABBFEF@=-AFFFFFFBFAFFDFFFFA?AFFCFFABEFFFFFFFFF?FFFDFFBFF;FFEFFEFFFFFFFAF///9FF/BB/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGGGTGGGCTATTTAGGTTT\tBBBBBFFFFFFFEGGGGGGGGGGHHHHHHHHGHGGHHHHGFGGG?HGGHHHHHHHGGHGFGHGEEGFHHHHHHHHHHHFHHFHHGGCGGGHHHHBFGFFHGGGEFGHHGFFEEFHGGDGEHFHHHGGGCCCGHHG?EGFGGGFED@D?CEDFHEHGHFFHFHHGCGG.:CGGD:AEDCG?C?BFFFGGG/CEFBFEFFF/;:BBB;CFGD.:/:B:BB/BFFFBBFBFFAA9A..9-9@:/./;B/9/:/;\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t77\t*\t0\t0\t*\t*\t0\t0\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATATCGTATGCCGTCTTCTGCTTGA\tABBAAFFF@FFFGGGGGGGGGGHHHHHHGHHHHHGGGGGHHHHHHHHGHGHHHHHHHHHHHGHGHFHFGE?CGDGGHHGGGGGGGHHHHGHGGGGGGFGGGHGHGGGGGGGGGGGGGGGGGGDGAFFGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFB/9FFBFFFFFFFFFFFFFD@D=BEFFF;FDDB////B=CF-.;BAFFFFFF;;BFE/BFFFFB:\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t141\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGACCTAGTGGTGATATAGGGGTGTCCCGCGTT\tBBBBBFFFFFDFGGGGGGGFGGGGHGGHHHHHHHGFFHHCHGGGGGHHHHHHFHFFGFGHHHHHG0EEEHHGHFFGFFHGGGCFGEFHGGGGGHGFEEGEFHGHFFGFGGGGFGDGGGG?DCCCCCDDFGHHFHCGHGHHGHHFBAFGGHE.<DCDD<CD;GFFEFHH.@?A//B0F0/;09CFFBBCF0;;F;B0;009FBFFB9.9ADDFFFFAACAC;-9;BB/B././9//;//...-;///---;9\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1106:27607:15990\t77\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGACTTCTGCTTGAAAAAAAAAAACTACAACCCACGGACGCA\tBBBBBFFFFFFFGGGGGGGGGGGGHHHGGGGGGHHHGGGGGFCEGGHHHGHHGGGEGGHHHAFGGGGGGAFG//EGHHHHCGEHHHHEEHHFHGHFHHGGEF/FGGC?FDFH2DHHFFGGFGHHHHGGHHFGHHGHGHHGFHDHBGBBGHHFHHGGCCDC<=D<DGHHC;CGFCCFBECDG?FGGA-;EB9FBGFFBBF>DFFFE?FFF/--;;9/:BFFFBA///9----;B.//////;...---9---\tYT:Z:UP\tRG:Z:rg1\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 3, "time_seconds": 55.57722067832947, "inputs": {"library|input_1": {"src": "hda", "id": "eac91155db74af62"}, "library|input_2": {"src": "hda", "id": "8c4fdc067711ba0d"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "00bd3642de19a7f0"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple", "save_mapping_stats": true}, "job": {"model_class": "Job", "id": "7221a99692ef4a1b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:33:26.237199", "create_time": "2021-11-06T16:32:57.295518", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-rbnln", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome && ln -s -f '/galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/c/b/2/dataset_cb26a9ff-4f50-4c8a-8f4a-6778056cdc51.dat' input_f.fastq &&  ln -f -s '/galaxy/server/database/objects/7/a/0/dataset_7a0402d1-4dc4-437f-b906-e182ded891e4.dat' input_r.fastq &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq' -2 'input_r.fastq'                2> '/galaxy/server/database/objects/5/b/8/dataset_5b847443-101b-46cf-bc03-8141cec952f7.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/2/6/a/dataset_26a0c60f-ce6d-41aa-83f7-78340914ba0b.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"true\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "eac91155db74af62", "src": "hda", "uuid": "cb26a9ff-4f50-4c8a-8f4a-6778056cdc51"}, "input_2": {"id": "8c4fdc067711ba0d", "src": "hda", "uuid": "7a0402d1-4dc4-437f-b906-e182ded891e4"}, "own_file": {"id": "00bd3642de19a7f0", "src": "hda", "uuid": "b8ebfb4f-ab11-4c43-8798-b254877b7010"}}, "outputs": {"mapping_stats": {"id": "4c394714551f9eaf", "src": "hda", "uuid": "5b847443-101b-46cf-bc03-8141cec952f7"}, "output": {"id": "8e8d075f2f6a5caf", "src": "hda", "uuid": "26a0c60f-ce6d-41aa-83f7-78340914ba0b"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 2: 80%\nReturning block of 1408 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\nGetting block 5 of 15\n  Entering block accumulator loop for bucket 4:\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 4: 20%\n  bucket 5: 20%\n  bucket 4: 30%\n  bucket 5: 30%\n  bucket 4: 40%\n  bucket 5: 40%\n  bucket 4: 50%\n  bucket 5: 50%\n  bucket 4: 60%\n  bucket 5: 60%\n  bucket 4: 70%\n  bucket 5: 70%\n  bucket 4: 80%\n  bucket 5: 80%\n  bucket 4: 90%\n  bucket 5: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\nGetting block 9 of 15\n  bucket 8: 10%\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  bucket 8: 20%\n  Entering block accumulator loop for bucket 9:\n  bucket 8: 30%\n  bucket 9: 10%\n  bucket 8: 40%\n  bucket 9: 20%\n  bucket 8: 50%\n  bucket 9: 30%\n  bucket 8: 60%\n  bucket 9: 40%\n  bucket 8: 70%\n  bucket 9: 50%\n  bucket 8: 80%\n  bucket 9: 60%\n  bucket 8: 90%\n  bucket 9: 70%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 10%\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 12: 20%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 12: 40%\n  bucket 13: 50%\n  bucket 12: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 12: 60%\n  bucket 13: 80%\n  bucket 12: 70%\n  bucket 13: 90%\n  bucket 12: 80%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\nGetting block 15 of 15\n  bucket 14: 50%\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 60%\n  bucket 15: 10%\n  bucket 14: 70%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 14: 80%\n  bucket 15: 40%\n  bucket 14: 90%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/8/e/dataset_b8ebfb4f-ab11-4c43-8798-b254877b7010.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 2: 80%\nReturning block of 1408 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\nGetting block 5 of 15\n  Entering block accumulator loop for bucket 4:\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 4: 20%\n  bucket 5: 20%\n  bucket 4: 30%\n  bucket 5: 30%\n  bucket 4: 40%\n  bucket 5: 40%\n  bucket 4: 50%\n  bucket 5: 50%\n  bucket 4: 60%\n  bucket 5: 60%\n  bucket 4: 70%\n  bucket 5: 70%\n  bucket 4: 80%\n  bucket 5: 80%\n  bucket 4: 90%\n  bucket 5: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\nGetting block 9 of 15\n  bucket 8: 10%\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  bucket 8: 20%\n  Entering block accumulator loop for bucket 9:\n  bucket 8: 30%\n  bucket 9: 10%\n  bucket 8: 40%\n  bucket 9: 20%\n  bucket 8: 50%\n  bucket 9: 30%\n  bucket 8: 60%\n  bucket 9: 40%\n  bucket 8: 70%\n  bucket 9: 50%\n  bucket 8: 80%\n  bucket 9: 60%\n  bucket 8: 90%\n  bucket 9: 70%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 10%\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 12: 20%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 12: 40%\n  bucket 13: 50%\n  bucket 12: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 12: 60%\n  bucket 13: 80%\n  bucket 12: 70%\n  bucket 13: 90%\n  bucket 12: 80%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\nGetting block 15 of 15\n  bucket 14: 50%\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 60%\n  bucket 15: 10%\n  bucket 14: 70%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 14: 80%\n  bucket 15: 40%\n  bucket 14: 90%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:33:23", "plugin": "core", "name": "end_epoch", "raw_value": "1636216403.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:33:23", "plugin": "core", "name": "start_epoch", "raw_value": "1636216403.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ha8vgt_h.sam v. /tmp/history_bam_converted_to_sam_wuhduipt.sam )\n--- local_file\n+++ history_data\n@@ -1,29 +1,30 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/124/tmp -O bam -o /galaxy/server/database/objects/2/6/a/dataset_26a0c60f-ce6d-41aa-83f7-78340914ba0b.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n@@ -107,24 +126,6 @@\n M01368:8:000000000-A3GHV:1:1104:13832:4398\t141\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGATCTCGGGGGGTGCCGGCTCATTAAAAAAAGAAGATGTCGAGATGTCAGTGCGTGAGTGGAAGTG\tBBCCCFFFFFFFGGGGGGGGGGGGGHGGGGGGGHHHGFGGHHFGGGHGHHGHGFGECGHHHHGGGGGGGHEGFGGGHHGHFHHHHFGHFHHHHGHHHHFGGFGG3FFGGHHHHHHH2?FFGHFHHHHHHHHHBGHDGC0FGHHGHHGHHHHHHHHHHFGHHGGGGGHG-:@?FAGA:.:09CB0000;9B0.9-;---:./----.0;B00;:0;;.../90009..-..00000000-...90:.00/00\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t77\t*\t0\t0\t*\t*\t0\t0\tAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTAT\tAAA?AFFF3DFFFGGBGFF3EAEEEHFHHFHHHGHHHHDGHHGAEFGHHHGFCHHGHHHBGHHHAEGGHGGFHFBFHHHHHHHHHHFHH1EEHEEHH1FFDEEFCGHBGHHFHEHHHHHH1FCGHHHHEEFGEEGFFCHHH11>GHHF/FG2DGGCGAGGHGGGG@@@BEFFF?@@@FFEFFFFFF?@@FB@BB@FFFE=;==---A9EFBBB/;E;A9B/B/FFFEF/B///;/;9/A/;/9BFFFBFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t141\t*\t0\t0\t*\t*\t0\t0\tGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGGGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACGAG\tAABBBFFFFFFFGAFGG5GGGGHDGHHHHHHHHHHHHFHCFGC2F3BFGFGHBGHHFHEDHFGGGGGHHHG3F?GHHGGC/EFEHFGAEFFHGGAEHGGGG3EEGEEDHFHAAD@DGGGHG/<C/CHHHHHHEDHFHGHHG0>AC1>GED-<<-.;C0:0C:C;GH:::::0B90;FFGEGFBFF0C.;9F0;0090;900;00FA9D.A...-9=BBFFFE/FE9;9E//BBBB.BBB///B/9/B..;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTT\tCCCCBFFFFFFFGGGGGGGGGGGHHHHHHHHHHHHGHHHHHGGGGGHHHHHGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHGHHHGHHHGHGHHGHHHHGGHGGG=FFGEHHHHHGHFGGHHGHHHHHFHHHHHHHGGHHHHHHHGHEHHGHHHHHGGGGF9AGE?DEGFFGGGGGGGGGGGGGGFFFF/9FFBFFFFFFFEFFFBFFFFFFFFFFFFEFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t141\t*\t0\t0\t*\t*\t0\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCTCC\tBCCCCFCCCCCCGGGGGGGGGGHHHHHHHHGGGGGHHHHHHHHGHHHHHHHHHGHHHHHHHHGHHHHHHHHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHGHHHDGHHHHHHHHHHHHHHHHHGHHHHHGGGGGGHHHHHGHHHHHHHHFFHHHHHCCAHFHHGGFFFFFFFFFAA;BDDFFFF00.-=D.ABDA-.::AAF;F@.AAD./0000.9-;.9:00009:F090;FF000900;\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t77\t*\t0\t0\t*\t*\t0\t0\tATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTC\tCDDDDFFFBFFCGGGGGGGGGGHHHHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHGGGGGHHHHFGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHHHHHHHHHHHHHGHHHHGGGGGGHGGHGHHHHHHH;CHHHHHHHHHHHHHHHGHGGGGFGGGFGGGGGGGGGGGGFGGGEGGFFFFFFFFFFFFFFFFFFFFFFFFF/FFFFFFFFFFFFFFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t141\t*\t0\t0\t*\t*\t0\t0\tGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGT\tCCBCCCBBCCCCGGGGGGGGGGHGGGGGHHHHHHHGHHHHGHHHHHFFFGGHGHHHHHHHHHHHHHHHHFGHHHHHHHGHHGHFHFGHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHDGGCGHHHHHHHHHHHHHFF<GGHHHHGFGHGEHGGA=A=DFFFFAFAFF?FFFFFFFFFADFAAD;FFFA:BBBAE.A.EBFFFFEF-..0BFFF9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t77\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGTTCCCGTGAGTGGTTAATAGGGTGATAGGCCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tAA1A1DFFFFFBGG3A111FFAEGDDBGFDHF00F01BBA00BFGEHFBFFA1FABB0FAE?CFHF1BGFHFB0011F121E//>>1F10>B?EFHGCC/?/BFG/EEGFFEE//BCFDE0?E@@B/?11</?//<@?/F<<<A-<FBGH0.00=G0<<C//./0;;GC....<C.=.00;;BB./:.900////.C000;0090;..//000;C/;;/B/9BA9A9-AEEFF?B---;B99//9/;A//9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t141\t*\t0\t0\t*\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTGGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTAACTATTACAG\tAA>>ABFDCFFFFFDGFGFDGDEG1EGEFFBFHFGHA0E00A0CAAC0FFDFFAGHFEHHFDH/EAFCFFHACGHHAFFEF2DFFG/FGHHHHGHGH0C@/E@GGC0FG10>GGFGHHGHFFBGFGB2>F<EEF0@C@9:AAF00;9@-9.;FBBBBB->@;-A@FF<-;---@-;-----;-BFF/;---9//BBFFFF//B;FF///9BF///;/;B/BBFBFFBB/;-9--///;9/:-;BFFBBB9F\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t77\t*\t0\t0\t*\t*\t0\t0\tTATGCTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAA\tEDCCDFFCEEDCGGGGGGGGGGHHHHHGFGHGGHGGHHHHHHHHGHHEHHGGGGGHHHHHHHHHGHHHGHHHHGGGGGHHHHFFGHHHGGGGGGHHHGGGGGHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHFEHHHHHHHHHHGHHGHGGHGGGCGGGGHHH1FGGGFGGFGGGGGGGGGGEFGGGGGGGGGGGGGGGGGFFFFFFFFFFAEFFFFFFFFFFBBFBBFFFFFE1:BFFB0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t141\t*\t0\t0\t*\t*\t0\t0\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCCCCCCCCFFFGGGGGGGGGGHHHHGHHGHHHHHHGHHHHHHFHHHHGGGGHHGHFHHHHHHHFHHHHHHHGHGGHGGHGHHHHFHFHHGHHHHHHHHHHHHHEHGHHHHHGGGGGHHHHGEHHGHHHHHHGHFGHFHGGAHGGHGGGCCBDFGFFAFDBDDFFFFFBDA;AAD-ADC?AFEFB-@@AAEFEFFFFF..-:.B0:FFFFFFEF0BFF09FF.0;9BFFFFF0BFFFFFF?.::-909;.9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t77\t*\t0\t0\t*\t*\t0\t0\tTAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACAC\tCCCCCFBFFFFFGGGGGGGGGGHHHHHHHHHHHHHGGGGGGFHHHBFGHHHGGGGGGHHGGGGGHHGFGGHHHHHHGGGGGGHGHFGGGGGGDGEGEFGCHHHHHHHHHHGHHHHGEDHHHGGGCDGGGGFHFHGHHHGHHGHFGHHHFHHGFHHHFHHGGHFHFHHGB0CGHGFHCBGGGGEDEE9ADFEFFFGFBFGFFGGFFFFFGGFGFFFFFFFF/A?FEFFFFFEF-A.B//;BFFEF//BB///\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTACTGTCTCTTATACAC\tCBBCCFCCCCCFGGGGGGGGGGHHGHHHHFHHHHHHFHGHHHHFHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHGHHHHGHFHGHHGHHHHHHGHHHHHHGHHHHHGGGGGHHHHHHHHGHHHHHGFGHHHHHGHDHGHHGCA;?AAFGFEFDFFF.FFFFEBDFFFFFFFFBFFFFFFFFFEFEFFFEFFFFFFF.:BFFF0BFFFFFFFFFFFF;0FF0;BFFFFFFFFBFFFBFEFFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTT\tABBBBFFFFFFFGGGGGGGGGGHHGHGHHHGHHHFGHGFGHFEHGGHGGHHHGHHHHFGHGGFGFFHHFHHHHEGHFHHHHHFGGGGGHGGGHGFHGHGGGGGGHHHGGGGHHGGGGHHHGGHGGGGGGHHHHGGGGGCFHGGGCDGHGHHHFHEHHHHHHHHHEEFHHGG:C:?0<EFGBFGGGGGFE.BFGEFFFGFFGGGGGGFDEF/FFGFFFFFFF;BBFA;.:EFFE:AAFEF.BFFFFF;9FF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTAT\tBBBBAFFFFFFFGGGGGGGFGGHHHHHHHHFHHHFHHHHGHHHHHHHHGHHHGHHEGHHHGDGCHHHHHHHHHGEHEHHHHHHHFHGGEGGHHHHHHHGEGHGHHDHHHHHHHHEHFHGHGHHHGEGCEHHFHHHGHHHHHHHF?GHHHFEFFAFFHHGG?;@DDFFB?@B;BDAFFFEBBD>D>D9@DDCFFFFFFCFDFE.AA;/BB/.;-.;BFBBBFFBFFFFFFF/9FF?/;/BBFFFFF/;FFB/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t77\t*\t0\t0\t*\t*\t0\t0\tCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGGCTTTGATTC\t3>>A@FFFFFFFGGGFEECFGGFFB5GBHH5DFH5GBEEAEFHFHHF3F3GHFHHHEF3GAEHBGFHFFEFFHHHHFFB31FGGEGFHGEHHHHHHHHHHHHHHHHHEEEEGHHHFFF3GF3FGF44BBGEHHHHGG2B/BGGHE</ECDFHHBF1DGBFBFGFH<1GHGDGGFDFE0/<--;-9./BBED;BFBD/BF9BFFFDBFDADD;FFF?->;B=.9.;.BBFFF..;A;/B/;B//;;//BBF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t141\t*\t0\t0\t*\t*\t0\t0\tGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTCTTTAGGGTTTATGACCCTGA\tBBCCCFFFCBCCGGGGGGGGGGHGHGHHGFGFGFHGGHHGHHHHHHHHFHHGGGGAGFBGHHHFBBGH5GDHH5EEEGEHEGFBF1DGFDGFGGGBBCEEGEHFEFDDHFBFHFD/@BGDGDHHGDCCFCD/C<->.ADDGE1GA<DBGFGHBG/..DGFCDGD.:0:.;CFGHEHBF.A-99CFGGFF0C0C0BF0;CA9/B:///;//BF/9B9?-..:;.;9.9A././;B//F.B?A////9;:/:/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGACTTCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAA\tA>ABAFA?D@AFGGGGFGGGFGFHHHFFH4BCBGHHHHGFFF3G5BF3322EEAFHHHHHHAB5GHFHEHFHHH3BEEHFGF5@13FDF3GDGFHHFGHHHGHHHGFGGHHFCG//?/EGHHHG3F4BFFGHHHEDGFHHB/B/?FBF<@-9?BDEFFF?B--?DFFFB9FA>B;A.BFDB?AB.--@;-.FFAEFFFF9AE;DDFFFFB/9BFFFFFFFB:BF/BB/BFF//FFF-=--.99=--.9///\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t141\t*\t0\t0\t*\t*\t0\t0\tAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGG\tAAAAAFFFFFFFGGGGGGFGGGHHGGHHHGGGGGGHGHGDFGHFGGGGFHHHHHGGGGGGGGFHGDFGGGGHGG?@EFHGEFEHEGFHHHHHF2FEHHGHGDCEAD?GFDFGGHBGHHFEHHHHHHHHHDFGHGHHGBDFG0FFHFGGFHHH=GGBF-AACEHEHHGGGHHHGHHFHCCFEBB0FFFFFF/;0;;FFFBFE.AA0BF0??-AD/////;:BFFBFFBBBFFFFFB/.9ADDAD-D;-;=A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t77\t*\t0\t0\t*\t*\t0\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTA\t@?AAAFFBFBFFFGGFGFGGGEFCGGHHHHFGHGHFHGHHHHGGFGGFGHHGHGHHHHGHGFFHHGGGGGHHHHHHHHHBFHHEFHHHHHHGF?FAGHGFHHHGDGFHHGGGHGHFHHHGHHHGHHFHHGFFGFHHHGHHHHFFHHHHH/FGHHHHGHGHG<C???B=@ABBFEF@=-AFFFFFFBFAFFDFFFFA?AFFCFFABEFFFFFFFFF?FFFDFFBFF;FFEFFEFFFFFFFAF///9FF/BB/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGGGTGGGCTATTTAGGTTT\tBBBBBFFFFFFFEGGGGGGGGGGHHHHHHHHGHGGHHHHGFGGG?HGGHHHHHHHGGHGFGHGEEGFHHHHHHHHHHHFHHFHHGGCGGGHHHHBFGFFHGGGEFGHHGFFEEFHGGDGEHFHHHGGGCCCGHHG?EGFGGGFED@D?CEDFHEHGHFFHFHHGCGG.:CGGD:AEDCG?C?BFFFGGG/CEFBFEFFF/;:BBB;CFGD.:/:B:BB/BFFFBBFBFFAA9A..9-9@:/./;B/9/:/;\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t77\t*\t0\t0\t*\t*\t0\t0\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATATCGTATGCCGTCTTCTGCTTGA\tABBAAFFF@FFFGGGGGGGGGGHHHHHHGHHHHHGGGGGHHHHHHHHGHGHHHHHHHHHHHGHGHFHFGE?CGDGGHHGGGGGGGHHHHGHGGGGGGFGGGHGHGGGGGGGGGGGGGGGGGGDGAFFGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFB/9FFBFFFFFFFFFFFFFD@D=BEFFF;FDDB////B=CF-.;BAFFFFFF;;BFE/BFFFFB:\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t141\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGACCTAGTGGTGATATAGGGGTGTCCCGCGTT\tBBBBBFFFFFDFGGGGGGGFGGGGHGGHHHHHHHGFFHHCHGGGGGHHHHHHFHFFGFGHHHHHG0EEEHHGHFFGFFHGGGCFGEFHGGGGGHGFEEGEFHGHFFGFGGGGFGDGGGG?DCCCCCDDFGHHFHCGHGHHGHHFBAFGGHE.<DCDD<CD;GFFEFHH.@?A//B0F0/;09CFFBBCF0;;F;B0;009FBFFB9.9ADDFFFFAACAC;-9;BB/B././9//;//...-;///---;9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:27607:15990\t77\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGACTTCTGCTTGAAAAAAAAAAACTACAACCCACGGACGCA\tBBBBBFFFFFFFGGGGGGGGGGGGHHHGGGGGGHHHGGGGGFCEGGHHHGHHGGGEGGHHHAFGGGGGGAFG//EGHHHHCGEHHHHEEHHFHGHFHHGGEF/FGGC?FDFH2DHHFFGGFGHHHHGGHHFGHHGHGHHGFHDHBGBBGHHFHHGGCCDC<=D<DGHHC;CGFCCFBECDG?FGGA-;EB9FBGFFBBF>DFFFE?FFF/--;;9/:BFFFBA///9----;B.//////;...---9---\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 4, "time_seconds": 48.34949469566345, "inputs": {"library|input_1": {"src": "hda", "id": "4c4391f21432e331"}, "library|unaligned_file": false, "library|type": "paired_interleaved", "reference_genome|own_file": {"src": "hda", "id": "9528f64239134bbe"}, "reference_genome|source": "history", "rg|read_group_id_conditional|ID": "rg1", "rg|PL": "CAPILLARY", "rg|rg_selector": "set", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "72a62f78ff35bb17", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:06.078020", "create_time": "2021-11-06T16:33:34.305888", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-trch6", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome && ln -s -f '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome.fa &&   ln -s '/galaxy/server/database/objects/3/0/6/dataset_30618e72-16de-4a62-930a-d99f6db5a5ed.dat' input_il.fastq &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   --interleaved 'input_il.fastq'                        --rg-id \"rg1\"  --rg \"PL:CAPILLARY\"              | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/6/5/d/dataset_65da9060-3484-4a44-9663-00476e5f830a.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": null, \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 3, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_interleaved\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "4c4391f21432e331", "src": "hda", "uuid": "30618e72-16de-4a62-930a-d99f6db5a5ed"}, "own_file": {"id": "9528f64239134bbe", "src": "hda", "uuid": "bc4b3fac-aaf0-473e-b5a4-0e79a03f0669"}}, "outputs": {"output": {"id": "9a63f73b9541db08", "src": "hda", "uuid": "65da9060-3484-4a44-9663-00476e5f830a"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 10%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 6: 30%\n  bucket 5: 50%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 20%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 30%\n  bucket 8: 10%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 8: 40%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\nGetting block 10 of 15\n  Calculating Z arrays for bucket 9\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 9: 30%\n  bucket 10: 40%\n  bucket 9: 40%\n  bucket 10: 50%\n  bucket 9: 50%\n  bucket 10: 60%\n  bucket 9: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 9: 80%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 60%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 30%\n  bucket 4: 50%\n  bucket 3: 40%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 50%\n  bucket 4: 80%\n  bucket 3: 60%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\nGetting block 8 of 15\n  Entering block accumulator loop for bucket 7:\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 8: 10%\n  bucket 7: 30%\n  bucket 8: 20%\n  bucket 7: 40%\n  bucket 8: 30%\n  bucket 7: 50%\n  bucket 8: 40%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n50.00% overall alignment rate\n", "stderr": "\nBuilding a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n50.00% overall alignment rate\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 10%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 6: 30%\n  bucket 5: 50%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 20%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 30%\n  bucket 8: 10%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 8: 40%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\nGetting block 10 of 15\n  Calculating Z arrays for bucket 9\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 9: 30%\n  bucket 10: 40%\n  bucket 9: 40%\n  bucket 10: 50%\n  bucket 9: 50%\n  bucket 10: 60%\n  bucket 9: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 9: 80%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 60%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 30%\n  bucket 4: 50%\n  bucket 3: 40%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 50%\n  bucket 4: 80%\n  bucket 3: 60%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\nGetting block 8 of 15\n  Entering block accumulator loop for bucket 7:\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 8: 10%\n  bucket 7: 30%\n  bucket 8: 20%\n  bucket 7: 40%\n  bucket 8: 30%\n  bucket 7: 50%\n  bucket 8: 40%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 50%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 7: 90%\n  bucket 8: 70%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:04", "plugin": "core", "name": "end_epoch", "raw_value": "1636216444.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:03", "plugin": "core", "name": "start_epoch", "raw_value": "1636216443.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_jq22up3x.sam v. /tmp/history_bam_converted_to_sam_s7i7u09u.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,8 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n @RG\tID:rg1\tPL:CAPILLARY\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome --interleaved input_il.fastq --rg-id rg1 --rg PL:CAPILLARY\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome --rg-id rg1 --rg PL:CAPILLARY --interleaved input_il.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/136/tmp -O bam -o /galaxy/server/database/objects/6/5/d/dataset_65da9060-3484-4a44-9663-00476e5f830a.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t153\tchrM\t1\t3\t4M23I224M\t=\t1\t0\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tFB099BFFFBFBBFEF?EFFFB090FFFFFFFFFFD;;.GFFGFGFA0FGFFEFEGGGFBCE;BGHHFFGHGEHFHHHHGFE@ECCDCGGGGGEHFFFGGGGGBHHGFGGGCGHHGGGGGGHGGGGGGHHHDGCFFBHGGGGGHHHHHFHFHGGGHHHHGHGGGGGHHHGGHGHHHHHHHGGHGGHHGGHHHHHHHEHHHHHHHHGGGGHHHHHHHHHHHHHHHHGHHHGGGGGGGGGGFFFFCFFCCCCB\tAS:i:-99\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:23\tNM:i:29\tMD:Z:0G0A0T0C11A56A155\tYT:Z:UP\tRG:Z:rg1\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 5, "time_seconds": 49.465826988220215, "inputs": {"library|input_1": {"src": "hda", "id": "7324f2d3ed5ee031"}, "library|input_2": {"src": "hda", "id": "c2901cb9c8fd9062"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "9528f64239134bbe"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "722f48e736c6a3a8", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:07.152789", "create_time": "2021-11-06T16:33:47.743165", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-qfrxb", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome && ln -s -f '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/b/a/6/dataset_ba610e60-6701-490d-b652-8f47db7bea92.dat' input_f.fastq.gz &&  ln -f -s '/galaxy/server/database/objects/5/d/b/dataset_5db080d9-b8bd-414e-95c7-bc800abd26e0.dat' input_r.fastq.gz &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq.gz' -2 'input_r.fastq.gz'                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/3/7/0/dataset_370fef90-e8db-4e4e-87a0-602d77f0b2aa.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 166, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 168, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "7324f2d3ed5ee031", "src": "hda", "uuid": "ba610e60-6701-490d-b652-8f47db7bea92"}, "input_2": {"id": "c2901cb9c8fd9062", "src": "hda", "uuid": "5db080d9-b8bd-414e-95c7-bc800abd26e0"}, "own_file": {"id": "9528f64239134bbe", "src": "hda", "uuid": "bc4b3fac-aaf0-473e-b5a4-0e79a03f0669"}}, "outputs": {"output": {"id": "9362d8b4ee903922", "src": "hda", "uuid": "370fef90-e8db-4e4e-87a0-602d77f0b2aa"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 30%\n  bucket 2: 40%\n  bucket 1: 40%\n  bucket 2: 50%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 1: 70%\n  bucket 2: 70%\n  bucket 1: 80%\n  bucket 2: 80%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 20%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 30%\n  bucket 6: 10%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 20%\n  bucket 5: 60%\n  bucket 6: 30%\n  bucket 5: 70%\n  bucket 6: 40%\n  bucket 5: 80%\n  bucket 6: 50%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 8: 20%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 40%\n  bucket 7: 80%\n  bucket 8: 50%\n  bucket 7: 90%\n  bucket 8: 60%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  bucket 9: 10%\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 10: 20%\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 10: 40%\n  bucket 9: 60%\n  bucket 10: 50%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 11: 50%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 11: 60%\n  bucket 12: 50%\n  bucket 11: 70%\n  bucket 12: 60%\n  bucket 11: 80%\n  bucket 12: 70%\n  bucket 11: 90%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 13:\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 10%\n  bucket 14: 10%\n  bucket 13: 20%\n  bucket 14: 20%\n  bucket 13: 30%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 13: 70%\n  bucket 14: 90%\n  bucket 13: 80%\n  bucket 14: 100%\n  bucket 13: 90%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 80%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 40%\n  bucket 3: 90%\n  bucket 3: 100%\n  bucket 4: 50%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block time: 00:00:00\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 5: 60%\n  bucket 6: 40%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 6: 50%\n  bucket 5: 90%\n  bucket 6: 60%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:01\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 30%\n  bucket 2: 40%\n  bucket 1: 40%\n  bucket 2: 50%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 1: 70%\n  bucket 2: 70%\n  bucket 1: 80%\n  bucket 2: 80%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 20%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 30%\n  bucket 6: 10%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 20%\n  bucket 5: 60%\n  bucket 6: 30%\n  bucket 5: 70%\n  bucket 6: 40%\n  bucket 5: 80%\n  bucket 6: 50%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 8: 20%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 40%\n  bucket 7: 80%\n  bucket 8: 50%\n  bucket 7: 90%\n  bucket 8: 60%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  bucket 9: 10%\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 10: 20%\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 10: 40%\n  bucket 9: 60%\n  bucket 10: 50%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 11: 50%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 11: 60%\n  bucket 12: 50%\n  bucket 11: 70%\n  bucket 12: 60%\n  bucket 11: 80%\n  bucket 12: 70%\n  bucket 11: 90%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 13:\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 10%\n  bucket 14: 10%\n  bucket 13: 20%\n  bucket 14: 20%\n  bucket 13: 30%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 13: 70%\n  bucket 14: 90%\n  bucket 13: 80%\n  bucket 14: 100%\n  bucket 13: 90%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 80%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 40%\n  bucket 3: 90%\n  bucket 3: 100%\n  bucket 4: 50%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block time: 00:00:00\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 5: 60%\n  bucket 6: 40%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 6: 50%\n  bucket 5: 90%\n  bucket 6: 60%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:01\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216446.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:05", "plugin": "core", "name": "start_epoch", "raw_value": "1636216445.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_6fsrk2cq.sam v. /tmp/history_bam_converted_to_sam_bamz2u2a.sam )\n--- local_file\n+++ history_data\n@@ -1,30 +1,31 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome -1 input_f.fastq.gz -2 input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/137/tmp -O bam -o /galaxy/server/database/objects/3/7/0/dataset_370fef90-e8db-4e4e-87a0-602d77f0b2aa.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:7756:4776\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\tCCCCCCFFFFFFGGGGGGGEEFHHHHGHGHHHHHHGGHHHGGGGGGHHGHHHHHGHHGHHHGGFHHHHHHHHGHHHFHHGHHGFGGGGHHHHHHHHGHGHFFHFHHHHHHGGHGFGFHHHGHG?FGHHHHHHHHHHHHHHGHGHHGHGGCDGFFHHHHGHHHHHGHHHGFHGHFHGHGHGH/@CABFFFFFFFACAFF?BBFFBFD-@-.D>FFAF.F.:9---;AADFFFFFBEFFF:9FFFFBBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t-247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n********\n*SNIP *\n********\n M01368:8:000000000-A3GHV:1:1108:11059:23181\t165\tchrM\t2\t0\t*\t=\t2\t0\tAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACC\tCCCCCFFFFFCCGGGGGGGGGGHHHHHHHHHHHGHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHHHHHHHHHHHHHGHGHEHHGFCGGGHHHHHHHHHHHHHHHFGHHHHHGHGHGHHGGGBFGFFFFEAFFFA.BFFFEFDDFFFFFFFFFFEEFF;D;EFFFFFF0BFFFADDFFFFFBFBFFFFFBB0FFFF0::0BF000BFFFBBF0EDFF@\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1108:25084:18127\t161\tchrM\t2\t8\t4M24I223M\t=\t1\t-238\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tCCCCCFFFFFFFGGGGGGGGGGGGHHHHHHHHFHHHHHHHHHHHHHHGGHHGHHHHHGGGGFHHHHHFHHHHHHHHHGGHHHHHCGGHGHHGGGGGGGHHGGGGGGGGHHHGHHGGGGGGGGGGGGGGGG@CDE?EFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFE;DFBFFFFFFFFFFFFFFFFFFFAFFFFFFFBFFE0BBBFFFFFFFFFFBFFFF9BB0:0:B;\tAS:i:-97\tXN:i:0\tXM:i:4\tXO:i:1\tXG:i:24\tNM:i:28\tMD:Z:0A0T1A67A155\tYS:i:-65\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M2I15M\t=\t1\t-246\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tCCCCCFFFFFFCGGGGGGGGGGHHHHHHHHHFFHHHHGGGGGHFFFHHFHHHHHHHHHHHHHHHGFEGGGHGEDFCDFHGHFG@@DGGHHHHHHGGGGCGGGGGEHGGCGBB?CF99EGFGGFGG?D9CFFFF/BBFFFFFEF9BFFAFFFFEFFFFFFFFFFFFFFFFFFFFF.FFBBFFFFFFFFFFFF-9;;;BFFFFFB9BFBFBFABFFEFFFFFFFFFF::BFFBFFFF.9//;FFFFF/BFFB/\tAS:i:-78\tXN:i:0\tXM:i:12\tXO:i:2\tXG:i:6\tNM:i:18\tMD:Z:2C0A67A115A42A0T0A0A1A3A0C0A3\tYS:i:-78\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1110:23303:11846\t101\tchrM\t2\t0\t*\t=\t2\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGTGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTC\t3ABB?FAB?DAAGGGFBGGBB5AFFFGFHHGGGEGHHHFHHF3EGFHHHHEFHHGGHHHGH3EFHHHHHBDGHHE?ECHGHGHHHHHHFHHHGHHHHHHHGGHGGFHHHFHHGFFHHFEGFHHHHHHEHHFDAGHHHH/BDDFGGH1FDBGHHHHHHHCGHHHFH?0CGCF>CC=@--AFBFFB?=BFDFFF//FDB;-9A-AD-.A.A=?-9-:B/AEB/BFF.A;DDFFFBBFFFF/BBFFFFBFF9B;\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:14287:20817\t97\tchrM\t2\t8\t2M36I213M\t=\t1\t-250\tGCCAACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTCATCGCACCTACGTTCACTATTACAGGCGAACATACTTATTAAAGTGTGTTAATTAAT\t>>A3>AAAACFFFGFGFGGGGGHGHHHHHHHGGGGGHGHFFCGHHGBGHFHHHHAGHHHHEHHAGFFEHEAE?GHHHHEGFFFDGHGHBFFHFHHHGHGHGHBECG@@@EHGGEGCGGGGFFGGGG?BGGGGGG.-C.FEDCFFFEFFFAF/99BEFA.:9BFB/9FFFEFFFFFFEFFF/FBBFFFFFFFFFFFB//;.@@//;DFFFF//BBFFFBF;A;DF=>B//;9B//B/;/;9//9//;B/:B9\tAS:i:-137\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:36\tNM:i:42\tMD:Z:0A0T69A85T16A21C18\tYS:i:-32\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1111:23624:14516\t165\tchrM\t2\t0\t*\t=\t2\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACCCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tBBBBABFFFFFFGGGGGGGGGGHHCGHHHHHHHGHHHHHHHHHHHGDGEHHHHHHGHHHHHHHHHHHHHHHGGEFGHHHHHHHHBGFHHHHHHHHHHHHHHGHGGGGCEFGGCGHHHHFHHHHGHHHHFGHHHHHHGHGHGHHBCA?B-9FGFG?D;BD?9BFFFFFFF;DFFFF-.A;ADF-@=EF??A.BFFFEF>FDFFFFFFFFFFFBFFFFFFFFFFF/FFF/BFFFFFFFBA.?@;FFBDFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M2I15M\t=\t1\t-246\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tCCCCCFFFFFFCGGGGGGGGGGHHHHHHHHHFFHHHHGGGGGHFFFHHFHHHHHHHHHHHHHHHGFEGGGHGEDFCDFHGHFG@@DGGHHHHHHGGGGCGGGGGEHGGCGBB?CF99EGFGGFGG?D9CFFFF/BBFFFFFEF9BFFAFFFFEFFFFFFFFFFFFFFFFFFFFF.FFBBFFFFFFFFFFFF-9;;;BFFFFFB9BFBFBFABFFEFFFFFFFFFF::BFFBFFFF.9//;FFFFF/BFFB/\tAS:i:-78\tXN:i:0\tXM:i:12\tXO:i:2\tXG:i:6\tNM:i:18\tMD:Z:2C0A67A115A42A0T0A0A1A3A0C0A3\tYS:i:-78\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t83\tchrM\t2\t40\t1M10I240M\t=\t1\t-242\tATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAAC\t//A:D9/FBFFFFFB;//FFBA@:..BFFFFFA0A;;D;:.GGFBFEC//BAGFBEGGGFFGHFHCDC@CC.ACGCCDCGF1.?GDCA/HHHGHGGGCGGHGGDGGGHGDGDCGGHHGEGHFHFGGGGEGHHHHHHGHHHHGFHHGHFGGGGHHBFHHHHHHHHGGGFHEEGB5EFHFGHHGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHGCGHHHHHHHGHHHHGGHGGGGGGGGGGFFFFFFFAAAAA\tAS:i:-41\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:14A56A169\tYS:i:-45\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:5446:12248\t89\tchrM\t2\t0\t4M39I208M\t=\t2\t0\tATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATT\tFFFEFFFFFEFFFFFFBFFFFFFFFFFBFFFFFFFFFGGFFFFGGGGGGGF?;/GGGGGEGE;EF:GGGGGGHHHHGGGHFHHHHHHHHHHHHHGGGGGGHGGGGGGGHHGHGGGGGGHHHHHHGGGGHHGGFGHHHGGGGGGHHHGFFHHHHGGGGGHHHHHHHHHGHHHHHHHHGGGGGHGHGHHHHHHHHHHGGHGGHGBGHHHHHHHHHHHHHHHHGGGGHHHHHGFGGGGGGGGFCCFFFFDCCCC\tAS:i:-137\tXN:i:0\tXM:i:3\tXO:i:1\tXG:i:39\tNM:i:42\tMD:Z:2C0A67A140\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1102:18842:24844\t153\tchrM\t2\t3\t4M24I223M\t=\t2\t0\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tFB:/BFFBFF;////FA9.FFFBFFFFFFFF9FBB/.A/FEF09FGEC?C9DEGFGEFEGGGFFFGFFGGHFCHHHFFHFDD@-EA?CFGGGGHHHHGDACDFEHHHHHGGGGHHGGGGHHHGGGGGGHGGCEFGHHHGGGGGHHHHHHHHHHHGFHHHFHGGGGGHHGHHHHHHGHHHHGGHGGHHHGHGHHHHHFHHHHHHHHGGGGHHHHHHHHHHHHHHHHGHHHGGGGGGGGGGFFFFBFFBCCCC\tAS:i:-95\tXN:i:0\tXM:i:4\tXO:i:1\tXG:i:24\tNM:i:28\tMD:Z:0A0T1A67A155\tYT:Z:UP\n@@ -179,6 +180,8 @@\n M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D>CFDDFFFB?AF?B;-@>.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000<00<BFBB0<00000<99.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A<GFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.<ADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/>99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG>0<0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n@@ -199,5 +202,3 @@\n M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH<1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 6, "time_seconds": 48.109893560409546, "inputs": {"library|input_1": {"src": "hda", "id": "e43500015c2c31bd"}, "library|input_2": {"src": "hda", "id": "c9494e12d6f02974"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "9528f64239134bbe"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "0c25e32c406146e5", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:12.038403", "create_time": "2021-11-06T16:33:48.265359", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-fqspl", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome && ln -s -f '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/8/7/b/dataset_87b0e649-19a4-4b58-9e03-aed68406ab97.dat' input_f.fastq.bz2 &&  ln -f -s '/galaxy/server/database/objects/4/4/8/dataset_448ee044-92a0-4a2b-b0cd-e739f8d3ff7b.dat' input_r.fastq.bz2 &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'   -1 'input_f.fastq.bz2' -2 'input_r.fastq.bz2'                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/1/9/4/dataset_194539df-034d-4a92-ac5b-574eca34605f.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 170, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 171, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "e43500015c2c31bd", "src": "hda", "uuid": "87b0e649-19a4-4b58-9e03-aed68406ab97"}, "input_2": {"id": "c9494e12d6f02974", "src": "hda", "uuid": "448ee044-92a0-4a2b-b0cd-e739f8d3ff7b"}, "own_file": {"id": "9528f64239134bbe", "src": "hda", "uuid": "bc4b3fac-aaf0-473e-b5a4-0e79a03f0669"}}, "outputs": {"output": {"id": "8e8d9c186a323561", "src": "hda", "uuid": "194539df-034d-4a92-ac5b-574eca34605f"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 4: 40%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 4: 50%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 40%\n  bucket 3: 90%\n  bucket 4: 50%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Entering block accumulator loop for bucket 3:\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 4: 10%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 4: 40%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 4: 50%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 4: 10%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 4: 20%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 4: 30%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 40%\n  bucket 3: 90%\n  bucket 4: 50%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:09", "plugin": "core", "name": "end_epoch", "raw_value": "1636216449.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:08", "plugin": "core", "name": "start_epoch", "raw_value": "1636216448.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_djsuhp_n.sam v. /tmp/history_bam_converted_to_sam_vln566vf.sam )\n--- local_file\n+++ history_data\n@@ -1,29 +1,30 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome -1 /tmp/gxy-fqspl-2z5k8_41mate1 -2 /tmp/gxy-fqspl-2z5k8_41mate2\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/138/tmp -O bam -o /galaxy/server/database/objects/1/9/4/dataset_194539df-034d-4a92-ac5b-574eca34605f.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3>AAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC>;>=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2>AFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@>BD/9BFBBBBFDFFFF99D=?>DDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n@@ -107,24 +126,6 @@\n M01368:8:000000000-A3GHV:1:1104:13832:4398\t141\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGATCTCGGGGGGTGCCGGCTCATTAAAAAAAGAAGATGTCGAGATGTCAGTGCGTGAGTGGAAGTG\tBBCCCFFFFFFFGGGGGGGGGGGGGHGGGGGGGHHHGFGGHHFGGGHGHHGHGFGECGHHHHGGGGGGGHEGFGGGHHGHFHHHHFGHFHHHHGHHHHFGGFGG3FFGGHHHHHHH2?FFGHFHHHHHHHHHBGHDGC0FGHHGHHGHHHHHHHHHHFGHHGGGGGHG-:@?FAGA:.:09CB0000;9B0.9-;---:./----.0;B00;:0;;.../90009..-..00000000-...90:.00/00\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t77\t*\t0\t0\t*\t*\t0\t0\tAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTAT\tAAA?AFFF3DFFFGGBGFF3EAEEEHFHHFHHHGHHHHDGHHGAEFGHHHGFCHHGHHHBGHHHAEGGHGGFHFBFHHHHHHHHHHFHH1EEHEEHH1FFDEEFCGHBGHHFHEHHHHHH1FCGHHHHEEFGEEGFFCHHH11>GHHF/FG2DGGCGAGGHGGGG@@@BEFFF?@@@FFEFFFFFF?@@FB@BB@FFFE=;==---A9EFBBB/;E;A9B/B/FFFEF/B///;/;9/A/;/9BFFFBFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:24927:22253\t141\t*\t0\t0\t*\t*\t0\t0\tGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGGGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACGAG\tAABBBFFFFFFFGAFGG5GGGGHDGHHHHHHHHHHHHFHCFGC2F3BFGFGHBGHHFHEDHFGGGGGHHHG3F?GHHGGC/EFEHFGAEFFHGGAEHGGGG3EEGEEDHFHAAD@DGGGHG/<C/CHHHHHHEDHFHGHHG0>AC1>GED-<<-.;C0:0C:C;GH:::::0B90;FFGEGFBFF0C.;9F0;0090;900;00FA9D.A...-9=BBFFFE/FE9;9E//BBBB.BBB///B/9/B..;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTT\tCCCCBFFFFFFFGGGGGGGGGGGHHHHHHHHHHHHGHHHHHGGGGGHHHHHGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHGHHHGHHHGHGHHGHHHHGGHGGG=FFGEHHHHHGHFGGHHGHHHHHFHHHHHHHGGHHHHHHHGHEHHGHHHHHGGGGF9AGE?DEGFFGGGGGGGGGGGGGGFFFF/9FFBFFFFFFFEFFFBFFFFFFFFFFFFEFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11310:21761\t141\t*\t0\t0\t*\t*\t0\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCTCC\tBCCCCFCCCCCCGGGGGGGGGGHHHHHHHHGGGGGHHHHHHHHGHHHHHHHHHGHHHHHHHHGHHHHHHHHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHGHHHDGHHHHHHHHHHHHHHHHHGHHHHHGGGGGGHHHHHGHHHHHHHHFFHHHHHCCAHFHHGGFFFFFFFFFAA;BDDFFFF00.-=D.ABDA-.::AAF;F@.AAD./0000.9-;.9:00009:F090;FF000900;\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t77\t*\t0\t0\t*\t*\t0\t0\tATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTC\tCDDDDFFFBFFCGGGGGGGGGGHHHHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHGGGGGHHHHFGGHHHGGGGGGHHHGGGGHHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHHHHHHHHHHHHHGHHHHGGGGGGHGGHGHHHHHHH;CHHHHHHHHHHHHHHHGHGGGGFGGGFGGGGGGGGGGGGFGGGEGGFFFFFFFFFFFFFFFFFFFFFFFFF/FFFFFFFFFFFFFFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:11578:14676\t141\t*\t0\t0\t*\t*\t0\t0\tGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGT\tCCBCCCBBCCCCGGGGGGGGGGHGGGGGHHHHHHHGHHHHGHHHHHFFFGGHGHHHHHHHHHHHHHHHHFGHHHHHHHGHHGHFHFGHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHDGGCGHHHHHHHHHHHHHFF<GGHHHHGFGHGEHGGA=A=DFFFFAFAFF?FFFFFFFFFADFAAD;FFFA:BBBAE.A.EBFFFFEF-..0BFFF9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t77\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGTTCCCGTGAGTGGTTAATAGGGTGATAGGCCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tAA1A1DFFFFFBGG3A111FFAEGDDBGFDHF00F01BBA00BFGEHFBFFA1FABB0FAE?CFHF1BGFHFB0011F121E//>>1F10>B?EFHGCC/?/BFG/EEGFFEE//BCFDE0?E@@B/?11</?//<@?/F<<<A-<FBGH0.00=G0<<C//./0;;GC....<C.=.00;;BB./:.900////.C000;0090;..//000;C/;;/B/9BA9A9-AEEFF?B---;B99//9/;A//9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:13575:19255\t141\t*\t0\t0\t*\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTGGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTAACTATTACAG\tAA>>ABFDCFFFFFDGFGFDGDEG1EGEFFBFHFGHA0E00A0CAAC0FFDFFAGHFEHHFDH/EAFCFFHACGHHAFFEF2DFFG/FGHHHHGHGH0C@/E@GGC0FG10>GGFGHHGHFFBGFGB2>F<EEF0@C@9:AAF00;9@-9.;FBBBBB->@;-A@FF<-;---@-;-----;-BFF/;---9//BBFFFF//B;FF///9BF///;/;B/BBFBFFBB/;-9--///;9/:-;BFFBBB9F\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t77\t*\t0\t0\t*\t*\t0\t0\tTATGCTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAA\tEDCCDFFCEEDCGGGGGGGGGGHHHHHGFGHGGHGGHHHHHHHHGHHEHHGGGGGHHHHHHHHHGHHHGHHHHGGGGGHHHHFFGHHHGGGGGGHHHGGGGGHGGGGHHHHHHGGGGGGHHHHGGGGGGGHGGGGGGHHHHHFEHHHHHHHHHHGHHGHGGHGGGCGGGGHHH1FGGGFGGFGGGGGGGGGGEFGGGGGGGGGGGGGGGGGFFFFFFFFFFAEFFFFFFFFFFBBFBBFFFFFE1:BFFB0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:17564:15723\t141\t*\t0\t0\t*\t*\t0\t0\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCCCCCCCCFFFGGGGGGGGGGHHHHGHHGHHHHHHGHHHHHHFHHHHGGGGHHGHFHHHHHHHFHHHHHHHGHGGHGGHGHHHHFHFHHGHHHHHHHHHHHHHEHGHHHHHGGGGGHHHHGEHHGHHHHHHGHFGHFHGGAHGGHGGGCCBDFGFFAFDBDDFFFFFBDA;AAD-ADC?AFEFB-@@AAEFEFFFFF..-:.B0:FFFFFFEF0BFF09FF.0;9BFFFFF0BFFFFFF?.::-909;.9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t77\t*\t0\t0\t*\t*\t0\t0\tTAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACAC\tCCCCCFBFFFFFGGGGGGGGGGHHHHHHHHHHHHHGGGGGGFHHHBFGHHHGGGGGGHHGGGGGHHGFGGHHHHHHGGGGGGHGHFGGGGGGDGEGEFGCHHHHHHHHHHGHHHHGEDHHHGGGCDGGGGFHFHGHHHGHHGHFGHHHFHHGFHHHFHHGGHFHFHHGB0CGHGFHCBGGGGEDEE9ADFEFFFGFBFGFFGGFFFFFGGFGFFFFFFFF/A?FEFFFFFEF-A.B//;BFFEF//BB///\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:18108:12091\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTACTGTCTCTTATACAC\tCBBCCFCCCCCFGGGGGGGGGGHHGHHHHFHHHHHHFHGHHHHFHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHGHHHHGHFHGHHGHHHHHHGHHHHHHGHHHHHGGGGGHHHHHHHHGHHHHHGFGHHHHHGHDHGHHGCA;?AAFGFEFDFFF.FFFFEBDFFFFFFFFBFFFFFFFFFEFEFFFEFFFFFFF.:BFFF0BFFFFFFFFFFFF;0FF0;BFFFFFFFFBFFFBFEFFFF0\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTT\tABBBBFFFFFFFGGGGGGGGGGHHGHGHHHGHHHFGHGFGHFEHGGHGGHHHGHHHHFGHGGFGFFHHFHHHHEGHFHHHHHFGGGGGHGGGHGFHGHGGGGGGHHHGGGGHHGGGGHHHGGHGGGGGGHHHHGGGGGCFHGGGCDGHGHHHFHEHHHHHHHHHEEFHHGG:C:?0<EFGBFGGGGGFE.BFGEFFFGFFGGGGGGFDEF/FFGFFFFFFF;BBFA;.:EFFE:AAFEF.BFFFFF;9FF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:15481:16176\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTAT\tBBBBAFFFFFFFGGGGGGGFGGHHHHHHHHFHHHFHHHHGHHHHHHHHGHHHGHHEGHHHGDGCHHHHHHHHHGEHEHHHHHHHFHGGEGGHHHHHHHGEGHGHHDHHHHHHHHEHFHGHGHHHGEGCEHHFHHHGHHHHHHHF?GHHHFEFFAFFHHGG?;@DDFFB?@B;BDAFFFEBBD>D>D9@DDCFFFFFFCFDFE.AA;/BB/.;-.;BFBBBFFBFFFFFFF/9FF?/;/BBFFFFF/;FFB/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t77\t*\t0\t0\t*\t*\t0\t0\tCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGGCTTTGATTC\t3>>A@FFFFFFFGGGFEECFGGFFB5GBHH5DFH5GBEEAEFHFHHF3F3GHFHHHEF3GAEHBGFHFFEFFHHHHFFB31FGGEGFHGEHHHHHHHHHHHHHHHHHEEEEGHHHFFF3GF3FGF44BBGEHHHHGG2B/BGGHE</ECDFHHBF1DGBFBFGFH<1GHGDGGFDFE0/<--;-9./BBED;BFBD/BF9BFFFDBFDADD;FFF?->;B=.9.;.BBFFF..;A;/B/;B//;;//BBF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:17389:18671\t141\t*\t0\t0\t*\t*\t0\t0\tGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTCTTTAGGGTTTATGACCCTGA\tBBCCCFFFCBCCGGGGGGGGGGHGHGHHGFGFGFHGGHHGHHHHHHHHFHHGGGGAGFBGHHHFBBGH5GDHH5EEEGEHEGFBF1DGFDGFGGGBBCEEGEHFEFDDHFBFHFD/@BGDGDHHGDCCFCD/C<->.ADDGE1GA<DBGFGHBG/..DGFCDGD.:0:.;CFGHEHBF.A-99CFGGFF0C0C0BF0;CA9/B:///;//BF/9B9?-..:;.;9.9A././;B//F.B?A////9;:/:/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGACTTCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAA\tA>ABAFA?D@AFGGGGFGGGFGFHHHFFH4BCBGHHHHGFFF3G5BF3322EEAFHHHHHHAB5GHFHEHFHHH3BEEHFGF5@13FDF3GDGFHHFGHHHGHHHGFGGHHFCG//?/EGHHHG3F4BFFGHHHEDGFHHB/B/?FBF<@-9?BDEFFF?B--?DFFFB9FA>B;A.BFDB?AB.--@;-.FFAEFFFF9AE;DDFFFFB/9BFFFFFFFB:BF/BB/BFF//FFF-=--.99=--.9///\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:22927:3863\t141\t*\t0\t0\t*\t*\t0\t0\tAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGG\tAAAAAFFFFFFFGGGGGGFGGGHHGGHHHGGGGGGHGHGDFGHFGGGGFHHHHHGGGGGGGGFHGDFGGGGHGG?@EFHGEFEHEGFHHHHHF2FEHHGHGDCEAD?GFDFGGHBGHHFEHHHHHHHHHDFGHGHHGBDFG0FFHFGGFHHH=GGBF-AACEHEHHGGGHHHGHHFHCCFEBB0FFFFFF/;0;;FFFBFE.AA0BF0??-AD/////;:BFFBFFBBBFFFFFB/.9ADDAD-D;-;=A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t77\t*\t0\t0\t*\t*\t0\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTA\t@?AAAFFBFBFFFGGFGFGGGEFCGGHHHHFGHGHFHGHHHHGGFGGFGHHGHGHHHHGHGFFHHGGGGGHHHHHHHHHBFHHEFHHHHHHGF?FAGHGFHHHGDGFHHGGGHGHFHHHGHHHGHHFHHGFFGFHHHGHHHHFFHHHHH/FGHHHHGHGHG<C???B=@ABBFEF@=-AFFFFFFBFAFFDFFFFA?AFFCFFABEFFFFFFFFF?FFFDFFBFF;FFEFFEFFFFFFFAF///9FF/BB/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1106:23625:4236\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGGGTGGGCTATTTAGGTTT\tBBBBBFFFFFFFEGGGGGGGGGGHHHHHHHHGHGGHHHHGFGGG?HGGHHHHHHHGGHGFGHGEEGFHHHHHHHHHHHFHHFHHGGCGGGHHHHBFGFFHGGGEFGHHGFFEEFHGGDGEHFHHHGGGCCCGHHG?EGFGGGFED@D?CEDFHEHGHFFHFHHGCGG.:CGGD:AEDCG?C?BFFFGGG/CEFBFEFFF/;:BBB;CFGD.:/:B:BB/BFFFBBFBFFAA9A..9-9@:/./;B/9/:/;\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t77\t*\t0\t0\t*\t*\t0\t0\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATATCGTATGCCGTCTTCTGCTTGA\tABBAAFFF@FFFGGGGGGGGGGHHHHHHGHHHHHGGGGGHHHHHHHHGHGHHHHHHHHHHHGHGHFHFGE?CGDGGHHGGGGGGGHHHHGHGGGGGGFGGGHGHGGGGGGGGGGGGGGGGGGDGAFFGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFB/9FFBFFFFFFFFFFFFFD@D=BEFFF;FDDB////B=CF-.;BAFFFFFF;;BFE/BFFFFB:\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:26031:14826\t141\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGACCTAGTGGTGATATAGGGGTGTCCCGCGTT\tBBBBBFFFFFDFGGGGGGGFGGGGHGGHHHHHHHGFFHHCHGGGGGHHHHHHFHFFGFGHHHHHG0EEEHHGHFFGFFHGGGCFGEFHGGGGGHGFEEGEFHGHFFGFGGGGFGDGGGG?DCCCCCDDFGHHFHCGHGHHGHHFBAFGGHE.<DCDD<CD;GFFEFHH.@?A//B0F0/;09CFFBBCF0;;F;B0;009FBFFB9.9ADDFFFFAACAC;-9;BB/B././9//;//...-;///---;9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:27607:15990\t77\t*\t0\t0\t*\t*\t0\t0\tGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGACTTCTGCTTGAAAAAAAAAAACTACAACCCACGGACGCA\tBBBBBFFFFFFFGGGGGGGGGGGGHHHGGGGGGHHHGGGGGFCEGGHHHGHHGGGEGGHHHAFGGGGGGAFG//EGHHHHCGEHHHHEEHHFHGHFHHGGEF/FGGC?FDFH2DHHFFGGFGHHHHGGHHFGHHGHGHHGFHDHBGBBGHHFHHGGCCDC<=D<DGHHC;CGFCCFBECDG?FGGA-;EB9FBGFFBBF>DFFFE?FFF/--;;9/:BFFFBA///9----;B.//////;...---9---\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 7, "time_seconds": 49.85633063316345, "inputs": {"library|input_1": {"src": "hda", "id": "792a898a539d4316"}, "library|input_2": {"src": "hda", "id": "167ce4d4aa6d605c"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "9528f64239134bbe"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple"}, "job": {"model_class": "Job", "id": "2db3d6ec8382e531", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:16.231284", "create_time": "2021-11-06T16:33:57.873889", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-9gv2l", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome && ln -s -f '/galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/f/d/d/dataset_fdd545c0-59b8-440d-a3b5-67777307e7d3.dat' input_f.fasta &&  ln -f -s '/galaxy/server/database/objects/e/4/a/dataset_e4ac0e89-353a-4d54-b121-0db999c4c8d8.dat' input_r.fasta &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'  -f  -1 'input_f.fasta' -2 'input_r.fasta'                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/7/3/4/dataset_7346d2e9-ab1b-41c0-b497-1427d5e13c5d.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 173, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 174, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "792a898a539d4316", "src": "hda", "uuid": "fdd545c0-59b8-440d-a3b5-67777307e7d3"}, "input_2": {"id": "167ce4d4aa6d605c", "src": "hda", "uuid": "e4ac0e89-353a-4d54-b121-0db999c4c8d8"}, "own_file": {"id": "9528f64239134bbe", "src": "hda", "uuid": "bc4b3fac-aaf0-473e-b5a4-0e79a03f0669"}}, "outputs": {"output": {"id": "e209e7dd73c05e95", "src": "hda", "uuid": "7346d2e9-ab1b-41c0-b497-1427d5e13c5d"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\nGetting block 2 of 15\n  Reserving size (1554) for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 1\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 4: 10%\n  bucket 3: 60%\n  bucket 4: 20%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 30%\n  bucket 3: 90%\n  bucket 4: 40%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 5: 20%\n  bucket 6: 40%\n  bucket 5: 30%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 5: 40%\n  bucket 6: 70%\n  bucket 5: 50%\n  bucket 6: 80%\n  bucket 5: 60%\n  bucket 6: 90%\n  bucket 5: 70%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 30%\n  bucket 4: 50%\n  bucket 3: 40%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 50%\n  bucket 4: 80%\n  bucket 3: 60%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 5: 60%\n  bucket 6: 60%\n  bucket 5: 70%\n  bucket 6: 70%\n  bucket 5: 80%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 13:\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 13: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/4/dataset_bc4b3fac-aaf0-473e-b5a4-0e79a03f0669.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\nGetting block 2 of 15\n  Reserving size (1554) for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 1\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 90%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 4: 10%\n  bucket 3: 60%\n  bucket 4: 20%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 4: 30%\n  bucket 3: 90%\n  bucket 4: 40%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 5: 20%\n  bucket 6: 40%\n  bucket 5: 30%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 5: 40%\n  bucket 6: 70%\n  bucket 5: 50%\n  bucket 6: 80%\n  bucket 5: 60%\n  bucket 6: 90%\n  bucket 5: 70%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 3: 30%\n  bucket 4: 50%\n  bucket 3: 40%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 50%\n  bucket 4: 80%\n  bucket 3: 60%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 5: 60%\n  bucket 6: 60%\n  bucket 5: 70%\n  bucket 6: 70%\n  bucket 5: 80%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 13:\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 13: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:14", "plugin": "core", "name": "end_epoch", "raw_value": "1636216454.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:13", "plugin": "core", "name": "start_epoch", "raw_value": "1636216453.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_hq3tpjsg.sam v. /tmp/history_bam_converted_to_sam_nap0hjf_.sam )\n--- local_file\n+++ history_data\n@@ -1,26 +1,27 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/mvandenb/miniconda3/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -f -1 input_f.fasta -2 input_r.fasta\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 2 -x genome -f -1 input_f.fasta -2 input_r.fasta\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@2 -T /galaxy/server/database/jobs_directory/000/139/tmp -O bam -o /galaxy/server/database/objects/7/3/4/dataset_7346d2e9-ab1b-41c0-b497-1427d5e13c5d.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t24\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-47\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-47\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I208M11I6M\t=\t1\t-218\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-151\tXN:i:0\tXM:i:7\tXO:i:2\tXG:i:33\tNM:i:40\tMD:Z:0G0A1C68A141A0T0T1\tYS:i:-143\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I208M11I6M\t=\t1\t218\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-151\tXN:i:0\tXM:i:7\tXO:i:2\tXG:i:33\tNM:i:40\tMD:Z:0G0A1C68A141A0T0T1\tYS:i:-143\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t6\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-146\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-140\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t233M3I7M1I7M\t=\t1\t-247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-64\tXN:i:0\tXM:i:7\tXO:i:2\tXG:i:4\tNM:i:11\tMD:Z:72A158A1A0A1A6A0T2\tYS:i:-83\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t233M3I7M1I7M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-64\tXN:i:0\tXM:i:7\tXO:i:2\tXG:i:4\tNM:i:11\tMD:Z:72A158A1A0A1A6A0T2\tYS:i:-83\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1106:6455:17124\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n********\n*SNIP *\n********\n M01368:8:000000000-A3GHV:1:1108:11059:23181\t165\tchrM\t2\t0\t*\t=\t2\t0\tAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1108:25084:18127\t161\tchrM\t2\t8\t4M24I223M\t=\t1\t-238\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-101\tXN:i:0\tXM:i:4\tXO:i:1\tXG:i:24\tNM:i:28\tMD:Z:0A0T1A67A155\tYS:i:-74\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M8I3M1I5M\t=\t1\t-239\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-90\tXN:i:0\tXM:i:6\tXO:i:3\tXG:i:13\tNM:i:19\tMD:Z:2C0A67A115A46T1A1\tYS:i:-80\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1110:23303:11846\t101\tchrM\t2\t0\t*\t=\t2\t0\tACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGTGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:14287:20817\t97\tchrM\t2\t3\t2M36I213M\t=\t1\t-250\tGCCAACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTCATCGCACCTACGTTCACTATTACAGGCGAACATACTTATTAAAGTGTGTTAATTAAT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-149\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:36\tNM:i:42\tMD:Z:0A0T69A85T16A21C18\tYS:i:-44\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1111:23624:14516\t165\tchrM\t2\t0\t*\t=\t2\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACCCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:2404:13066\t161\tchrM\t2\t8\t4M4I226M8I3M1I5M\t=\t1\t-239\tATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGACCATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACTGTCTCTTATACACATT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-90\tXN:i:0\tXM:i:6\tXO:i:3\tXG:i:13\tNM:i:19\tMD:Z:2C0A67A115A46T1A1\tYS:i:-80\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t83\tchrM\t2\t24\t1M10I240M\t=\t1\t-242\tATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAAC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-47\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:14A56A169\tYS:i:-47\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t153\tchrM\t2\t0\t4M24I223M\t=\t2\t0\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-107\tXN:i:0\tXM:i:5\tXO:i:1\tXG:i:24\tNM:i:29\tMD:Z:0A0T1A10A56A155\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5446:12248\t89\tchrM\t2\t0\t4M39I208M\t=\t2\t0\tATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tAS:i:-140\tXN:i:0\tXM:i:3\tXO:i:1\tXG:i:39\tNM:i:42\tMD:Z:2C0A67A140\tYT:Z:UP\n@@ -175,6 +176,8 @@\n M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1111:7437:24508\t77\t*\t0\t0\t*\t*\t0\t0\tACACACTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTGTCTCTTATACACATCTCCGAGCCCACGAG\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n@@ -199,5 +202,3 @@\n M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\tYT:Z:UP\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 8, "time_seconds": 39.83031249046326, "inputs": {"library|input_1": {"src": "hda", "id": "f8163d49e2991eba"}, "library|input_2": {"src": "hda", "id": "0756340b3585fadf"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "10138a9c62250ef6"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple", "sam_options|reorder": true, "sam_options|sam_options_selector": "yes"}, "job": {"model_class": "Job", "id": "ebfa3242477517e3", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:45.771389", "create_time": "2021-11-06T16:34:23.514403", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-49fqf", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat' genome && ln -s -f '/galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/a/2/9/dataset_a2931e84-c0fe-4c0f-afae-3e2d6694be64.dat' input_f.fasta &&  ln -f -s '/galaxy/server/database/objects/b/e/f/dataset_befbfdfd-68a5-413f-903c-0cdc9955c0a0.dat' input_r.fasta &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'  -f  -1 'input_f.fasta' -2 'input_r.fasta'                    --reorder   | samtools view -bS - -o '/galaxy/server/database/objects/5/3/5/dataset_535fd4bb-1834-4d76-8de9-deb8852df2b2.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 0, \"no_unal\": \"false\", \"omit_sec_seq\": \"false\", \"reorder\": \"true\", \"sam_no_qname_trunc\": \"false\", \"sam_opt\": \"false\", \"sam_options_selector\": \"yes\", \"soft_clipped_unmapped_tlen\": \"false\", \"xeq\": \"false\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 185, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 183, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "f8163d49e2991eba", "src": "hda", "uuid": "a2931e84-c0fe-4c0f-afae-3e2d6694be64"}, "input_2": {"id": "0756340b3585fadf", "src": "hda", "uuid": "befbfdfd-68a5-413f-903c-0cdc9955c0a0"}, "own_file": {"id": "10138a9c62250ef6", "src": "hda", "uuid": "988a2e55-3ac6-43b7-a720-cae879d1a5f3"}}, "outputs": {"output": {"id": "8d954a81ef46236d", "src": "hda", "uuid": "535fd4bb-1834-4d76-8de9-deb8852df2b2"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\nGetting block 4 of 15\n  Reserving size (1554) for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 3: 30%\n  bucket 4: 40%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 70%\n  bucket 4: 80%\n  bucket 3: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 10%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 6: 30%\n  bucket 5: 50%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 7: 10%\n  bucket 8: 20%\n  bucket 7: 20%\n  bucket 8: 30%\n  bucket 7: 30%\n  bucket 8: 40%\n  bucket 7: 40%\n  bucket 8: 50%\n  bucket 7: 50%\n  bucket 8: 60%\n  bucket 7: 60%\n  bucket 8: 70%\n  bucket 7: 70%\n  bucket 8: 80%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 10: 60%\n  bucket 9: 70%\n  bucket 10: 70%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 6: 80%\n  bucket 5: 80%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\nGetting block 4 of 15\n  Reserving size (1554) for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 3: 10%\n  bucket 4: 20%\n  bucket 3: 20%\n  bucket 4: 30%\n  bucket 3: 30%\n  bucket 4: 40%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 3: 70%\n  bucket 4: 80%\n  bucket 3: 80%\n  bucket 4: 90%\n  bucket 3: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 10%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 6: 30%\n  bucket 5: 50%\n  bucket 6: 40%\n  bucket 5: 60%\n  bucket 6: 50%\n  bucket 5: 70%\n  bucket 6: 60%\n  bucket 5: 80%\n  bucket 6: 70%\n  bucket 5: 90%\n  bucket 6: 80%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 7: 10%\n  bucket 8: 20%\n  bucket 7: 20%\n  bucket 8: 30%\n  bucket 7: 30%\n  bucket 8: 40%\n  bucket 7: 40%\n  bucket 8: 50%\n  bucket 7: 50%\n  bucket 8: 60%\n  bucket 7: 60%\n  bucket 8: 70%\n  bucket 7: 70%\n  bucket 8: 80%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 10: 60%\n  bucket 9: 70%\n  bucket 10: 70%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 2: 50%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 6: 80%\n  bucket 5: 80%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:43", "plugin": "core", "name": "end_epoch", "raw_value": "1636216483.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216482.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0", "test_index": 9, "time_seconds": 42.29157376289368, "inputs": {"library|input_1": {"src": "hda", "id": "f8163d49e2991eba"}, "library|input_2": {"src": "hda", "id": "0756340b3585fadf"}, "library|unaligned_file": false, "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|own_file": {"src": "hda", "id": "10138a9c62250ef6"}, "reference_genome|source": "history", "analysis_type|analysis_type_selector": "simple", "sam_options|sam_opt": true, "sam_options|sam_options_selector": "yes"}, "job": {"model_class": "Job", "id": "3724dd47b1c75787", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:49.462152", "create_time": "2021-11-06T16:34:36.157863", "galaxy_version": "21.05", "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-x67kg", "command_line": "set -o | grep -q pipefail && set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} '/galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat' genome && ln -s -f '/galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat' genome.fa &&   ln -f -s '/galaxy/server/database/objects/a/2/9/dataset_a2931e84-c0fe-4c0f-afae-3e2d6694be64.dat' input_f.fasta &&  ln -f -s '/galaxy/server/database/objects/b/e/f/dataset_befbfdfd-68a5-413f-903c-0cdc9955c0a0.dat' input_r.fasta &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x 'genome'  -f  -1 'input_f.fasta' -2 'input_r.fasta'                       > '/galaxy/server/database/objects/7/0/5/dataset_705c0a79-4ced-46cc-a54e-f551e9dd70f9.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "save_mapping_stats": "\"false\"", "sam_options": "{\"__current_case__\": 0, \"no_unal\": \"false\", \"omit_sec_seq\": \"false\", \"reorder\": \"false\", \"sam_no_qname_trunc\": \"false\", \"sam_opt\": \"true\", \"sam_options_selector\": \"yes\", \"soft_clipped_unmapped_tlen\": \"false\", \"xeq\": \"false\"}", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 185, \"src\": \"hda\"}]}, \"source\": \"history\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 183, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}"}, "inputs": {"input_1": {"id": "f8163d49e2991eba", "src": "hda", "uuid": "a2931e84-c0fe-4c0f-afae-3e2d6694be64"}, "input_2": {"id": "0756340b3585fadf", "src": "hda", "uuid": "befbfdfd-68a5-413f-903c-0cdc9955c0a0"}, "own_file": {"id": "10138a9c62250ef6", "src": "hda", "uuid": "988a2e55-3ac6-43b7-a720-cae879d1a5f3"}}, "outputs": {"output": {"id": "5092e188d9dfc9b9", "src": "hda", "uuid": "705c0a79-4ced-46cc-a54e-f551e9dd70f9"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 6: 20%\n  bucket 5: 20%\n  bucket 6: 30%\n  bucket 5: 30%\n  bucket 6: 40%\n  bucket 5: 40%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 5: 80%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 20%\n  bucket 8: 10%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 40%\n  bucket 7: 80%\n  bucket 8: 50%\n  bucket 7: 90%\n  bucket 8: 60%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\nGetting block 4 of 15\n  Reserving size (1554) for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 5: 60%\n  bucket 6: 40%\n  bucket 5: 70%\n  bucket 6: 50%\n  bucket 5: 80%\n  bucket 6: 60%\n  bucket 5: 90%\n  bucket 6: 70%\n  bucket 5: 100%\n  bucket 6: 80%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 7: 20%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 7: 30%\n  bucket 8: 40%\n  bucket 7: 40%\n  bucket 8: 50%\n  bucket 7: 50%\n  bucket 8: 60%\n  bucket 7: 60%\n  bucket 8: 70%\n  bucket 7: 70%\n  bucket 8: 80%\n  bucket 7: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  bucket 7: 90%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\nGetting block 10 of 15\n  Calculating Z arrays for bucket 9\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 9: 10%\n  bucket 10: 20%\n  bucket 9: 20%\n  bucket 10: 30%\n  bucket 9: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 9: 40%\n  bucket 10: 60%\n  bucket 9: 50%\n  bucket 10: 70%\n  bucket 9: 60%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 9: 80%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\nGetting block 12 of 15\n  Calculating Z arrays for bucket 11\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 11:\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 11: 10%\n  bucket 12: 20%\n  bucket 11: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 11: 30%\n  bucket 12: 50%\n  bucket 11: 40%\n  bucket 12: 60%\n  bucket 11: 50%\n  bucket 12: 70%\n  bucket 11: 60%\n  bucket 12: 80%\n  bucket 11: 70%\n  bucket 12: 90%\n  bucket 11: 80%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  Entering block accumulator loop for bucket 13:\n  bucket 14: 10%\n  bucket 13: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "stderr": "\nBuilding a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "stdout": "\nSettings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/9/8/8/dataset_988a2e55-3ac6-43b7-a720-cae879d1a5f3.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 2: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\nGetting block 4 of 15\n  Calculating Z arrays for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 6: 20%\n  bucket 5: 20%\n  bucket 6: 30%\n  bucket 5: 30%\n  bucket 6: 40%\n  bucket 5: 40%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 5: 80%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 20%\n  bucket 8: 10%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 8: 20%\n  bucket 7: 50%\n  bucket 8: 30%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 8: 40%\n  bucket 7: 80%\n  bucket 8: 50%\n  bucket 7: 90%\n  bucket 8: 60%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 1: 40%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\nGetting block 4 of 15\n  Reserving size (1554) for bucket 3\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\nGetting block 6 of 15\n  Calculating Z arrays for bucket 5\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 6: 10%\n  bucket 5: 30%\n  bucket 6: 20%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 6: 30%\n  bucket 5: 60%\n  bucket 6: 40%\n  bucket 5: 70%\n  bucket 6: 50%\n  bucket 5: 80%\n  bucket 6: 60%\n  bucket 5: 90%\n  bucket 6: 70%\n  bucket 5: 100%\n  bucket 6: 80%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\nGetting block 8 of 15\n  Calculating Z arrays for bucket 7\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 7: 20%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 7: 30%\n  bucket 8: 40%\n  bucket 7: 40%\n  bucket 8: 50%\n  bucket 7: 50%\n  bucket 8: 60%\n  bucket 7: 60%\n  bucket 8: 70%\n  bucket 7: 70%\n  bucket 8: 80%\n  bucket 7: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  bucket 7: 90%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\nGetting block 10 of 15\n  Calculating Z arrays for bucket 9\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 9: 10%\n  bucket 10: 20%\n  bucket 9: 20%\n  bucket 10: 30%\n  bucket 9: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 9: 40%\n  bucket 10: 60%\n  bucket 9: 50%\n  bucket 10: 70%\n  bucket 9: 60%\n  bucket 10: 80%\n  bucket 9: 70%\n  bucket 10: 90%\n  bucket 9: 80%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\nGetting block 12 of 15\n  Calculating Z arrays for bucket 11\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 11:\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 11: 10%\n  bucket 12: 20%\n  bucket 11: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 11: 30%\n  bucket 12: 50%\n  bucket 11: 40%\n  bucket 12: 60%\n  bucket 11: 50%\n  bucket 12: 70%\n  bucket 11: 60%\n  bucket 12: 80%\n  bucket 11: 70%\n  bucket 12: 90%\n  bucket 11: 80%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\nGetting block 14 of 15\n  Calculating Z arrays for bucket 13\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  Entering block accumulator loop for bucket 13:\n  bucket 14: 10%\n  bucket 13: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:34:46", "plugin": "core", "name": "end_epoch", "raw_value": "1636216486.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:46", "plugin": "core", "name": "start_epoch", "raw_value": "1636216486.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa", "tool_version": "0.7.17.4", "test_index": 0, "time_seconds": 47.40256071090698, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "46eee7b904665272"}, "reference_source|reference_source_selector": "history", "input_type|fastq_input1": {"src": "hda", "id": "f46562a893685dc8"}, "input_type|input_type_selector": "single", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "08ef68c181ced2f0", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:34:59.653123", "create_time": "2021-11-06T16:34:38.365347", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-9t4p2", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/6/4/1/dataset_6413fe02-5c9b-4546-ab68-1e25d2354582.dat' 'localref.fa' && bwa index 'localref.fa' &&                 bwa aln -t \"${GALAXY_SLOTS:-1}\"     'localref.fa' '/galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat' > first.sai &&  bwa samse    'localref.fa' first.sai '/galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat'    | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/6/5/2/dataset_652dd06d-074d-425d-abd0-b86d3b957a56.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "input_type": "{\"__current_case__\": 2, \"adv_se_options\": {\"__current_case__\": 1, \"adv_se_options_selector\": \"do_not_set\"}, \"fastq_input1\": {\"values\": [{\"id\": 187, \"src\": \"hda\"}]}, \"input_type_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 188, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "46eee7b904665272", "src": "hda", "uuid": "6413fe02-5c9b-4546-ab68-1e25d2354582"}, "fastq_input1": {"id": "f46562a893685dc8", "src": "hda", "uuid": "70438704-b7b9-4d89-b344-527f4062768a"}}, "outputs": {"bam_output": {"id": "8b4aa2616340f1b3", "src": "hda", "uuid": "652dd06d-074d-425d-abd0-b86d3b957a56"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.01 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.050 sec; CPU: 0.013 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat\n[main] Real time: 0.038 sec; CPU: 0.054 sec\n[bwa_aln_core] convert to sequence coordinate... 0.00 sec\n[bwa_aln_core] refine gapped alignments... 0.00 sec\n[bwa_aln_core] print alignments... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa samse localref.fa first.sai /galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat\n[main] Real time: 0.005 sec; CPU: 0.003 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.01 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.050 sec; CPU: 0.013 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat\n[main] Real time: 0.038 sec; CPU: 0.054 sec\n[bwa_aln_core] convert to sequence coordinate... 0.00 sec\n[bwa_aln_core] refine gapped alignments... 0.00 sec\n[bwa_aln_core] print alignments... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa samse localref.fa first.sai /galaxy/server/database/objects/7/0/4/dataset_70438704-b7b9-4d89-b344-527f4062768a.dat\n[main] Real time: 0.005 sec; CPU: 0.003 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:34:58", "plugin": "core", "name": "end_epoch", "raw_value": "1636216498.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:34:57", "plugin": "core", "name": "start_epoch", "raw_value": "1636216497.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa", "tool_version": "0.7.17.4", "test_index": 1, "time_seconds": 58.12547063827515, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "136f613a1bf9c9f3"}, "reference_source|reference_source_selector": "history", "input_type|fastq_input1": {"src": "hda", "id": "a811f726cd616dad"}, "input_type|fastq_input2": {"src": "hda", "id": "ea5da810592d0160"}, "input_type|input_type_selector": "paired", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "00bd3642de19a7f0", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:35:14.127102", "create_time": "2021-11-06T16:34:48.790037", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-x7lm9", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/e/4/5/dataset_e453ca2c-c47e-49fe-94de-819dd9bab515.dat' 'localref.fa' && bwa index 'localref.fa' &&                 bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat' > first.sai &&  bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat' > second.sai &&  bwa sampe   'localref.fa' first.sai second.sai '/galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat' '/galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat'    | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/0/1/8/dataset_0189a1b4-bbc9-4127-b540-00f314bf31cb.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "input_type": "{\"__current_case__\": 0, \"adv_pe_options\": {\"__current_case__\": 1, \"adv_pe_options_selector\": \"do_not_set\"}, \"fastq_input1\": {\"values\": [{\"id\": 189, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 196, \"src\": \"hda\"}]}, \"input_type_selector\": \"paired\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 194, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "136f613a1bf9c9f3", "src": "hda", "uuid": "e453ca2c-c47e-49fe-94de-819dd9bab515"}, "fastq_input1": {"id": "a811f726cd616dad", "src": "hda", "uuid": "14da1e99-fafe-4c3b-be7b-4cb5e2b78d06"}, "fastq_input2": {"id": "ea5da810592d0160", "src": "hda", "uuid": "76adc4e2-dce6-4176-85da-962196523ebc"}}, "outputs": {"bam_output": {"id": "24e6ec3a380c11bb", "src": "hda", "uuid": "0189a1b4-bbc9-4127-b540-00f314bf31cb"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.044 sec; CPU: 0.012 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat\n[main] Real time: 0.020 sec; CPU: 0.044 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat\n[main] Real time: 0.020 sec; CPU: 0.038 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat /galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat\n[main] Real time: 0.013 sec; CPU: 0.006 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.044 sec; CPU: 0.012 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat\n[main] Real time: 0.020 sec; CPU: 0.044 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat\n[main] Real time: 0.020 sec; CPU: 0.038 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/1/4/d/dataset_14da1e99-fafe-4c3b-be7b-4cb5e2b78d06.dat /galaxy/server/database/objects/7/6/a/dataset_76adc4e2-dce6-4176-85da-962196523ebc.dat\n[main] Real time: 0.013 sec; CPU: 0.006 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:35:11", "plugin": "core", "name": "end_epoch", "raw_value": "1636216511.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:35:11", "plugin": "core", "name": "start_epoch", "raw_value": "1636216511.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa", "tool_version": "0.7.17.4", "test_index": 2, "time_seconds": 44.088706731796265, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "314218b09ab456ae"}, "reference_source|reference_source_selector": "history", "input_type|fastq_input1": {"src": "hda", "id": "9f505da0846acd0d"}, "input_type|fastq_input2": {"src": "hda", "id": "f0ac0067357db320"}, "input_type|input_type_selector": "paired", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "8e8d075f2f6a5caf", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:35:30.008123", "create_time": "2021-11-06T16:35:02.599851", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-7tf4b", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/6/8/8/dataset_68824c83-efb2-4e2d-933a-30d457af9970.dat' 'localref.fa' && bwa index 'localref.fa' &&                 bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat' > first.sai &&  bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat' > second.sai &&  bwa sampe   'localref.fa' first.sai second.sai '/galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat' '/galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat'    | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/2/7/4/dataset_274524d4-e173-44b6-aa1a-e7d6c9453ecb.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "input_type": "{\"__current_case__\": 0, \"adv_pe_options\": {\"__current_case__\": 1, \"adv_pe_options_selector\": \"do_not_set\"}, \"fastq_input1\": {\"values\": [{\"id\": 195, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 202, \"src\": \"hda\"}]}, \"input_type_selector\": \"paired\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 200, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "314218b09ab456ae", "src": "hda", "uuid": "68824c83-efb2-4e2d-933a-30d457af9970"}, "fastq_input1": {"id": "9f505da0846acd0d", "src": "hda", "uuid": "53ed6456-65c2-4273-bf40-8d4b3b946876"}, "fastq_input2": {"id": "f0ac0067357db320", "src": "hda", "uuid": "fa662fde-118d-4ff2-988d-4f2fd1579e44"}}, "outputs": {"bam_output": {"id": "e7ee3651a4c63a76", "src": "hda", "uuid": "274524d4-e173-44b6-aa1a-e7d6c9453ecb"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.042 sec; CPU: 0.010 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat\n[main] Real time: 0.021 sec; CPU: 0.050 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat\n[main] Real time: 0.020 sec; CPU: 0.042 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat /galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat\n[main] Real time: 0.009 sec; CPU: 0.005 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.042 sec; CPU: 0.010 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat\n[main] Real time: 0.021 sec; CPU: 0.050 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat\n[main] Real time: 0.020 sec; CPU: 0.042 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/5/3/e/dataset_53ed6456-65c2-4273-bf40-8d4b3b946876.dat /galaxy/server/database/objects/f/a/6/dataset_fa662fde-118d-4ff2-988d-4f2fd1579e44.dat\n[main] Real time: 0.009 sec; CPU: 0.005 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:35:28", "plugin": "core", "name": "end_epoch", "raw_value": "1636216528.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:35:27", "plugin": "core", "name": "start_epoch", "raw_value": "1636216527.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa", "tool_version": "0.7.17.4", "test_index": 3, "time_seconds": 44.92056369781494, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "c729f03a18659e4a"}, "reference_source|reference_source_selector": "history", "input_type|bam_input": {"src": "hda", "id": "ebe7b631b58d8f27"}, "input_type|input_type_selector": "paired_bam", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "39c18b2acb0e734c", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:35:34.246369", "create_time": "2021-11-06T16:35:17.232875", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-t7nrh", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/7/1/b/dataset_71be0362-e822-4d8d-be69-dd6bc886385b.dat' 'localref.fa' && bwa index 'localref.fa' &&                 bwa aln -t \"${GALAXY_SLOTS:-1}\" -b -1   'localref.fa' '/galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat' > first.sai &&  bwa aln -t \"${GALAXY_SLOTS:-1}\" -b -2   'localref.fa' '/galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat' > second.sai &&  bwa sampe    'localref.fa' first.sai second.sai '/galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat' '/galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat'    | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/3/c/3/dataset_3c37996e-b27d-45df-8878-e32e0d5dae6c.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "input_type": "{\"__current_case__\": 3, \"adv_bam_pe_options\": {\"__current_case__\": 1, \"adv_pe_options_selector\": \"do_not_set\"}, \"bam_input\": {\"values\": [{\"id\": 199, \"src\": \"hda\"}]}, \"input_type_selector\": \"paired_bam\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "c729f03a18659e4a", "src": "hda", "uuid": "71be0362-e822-4d8d-be69-dd6bc886385b"}, "bam_input": {"id": "ebe7b631b58d8f27", "src": "hda", "uuid": "86d7cd4a-2837-4f8e-b8fa-44535a6bac86"}}, "outputs": {"bam_output": {"id": "37961d662c1dd833", "src": "hda", "uuid": "3c37996e-b27d-45df-8878-e32e0d5dae6c"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.044 sec; CPU: 0.011 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 -b -1 localref.fa /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.027 sec; CPU: 0.056 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 -b -2 localref.fa /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.021 sec; CPU: 0.039 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.011 sec; CPU: 0.007 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.044 sec; CPU: 0.011 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.05 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 -b -1 localref.fa /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.027 sec; CPU: 0.056 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 -b -2 localref.fa /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.021 sec; CPU: 0.039 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat /galaxy/server/database/objects/8/6/d/dataset_86d7cd4a-2837-4f8e-b8fa-44535a6bac86.dat\n[main] Real time: 0.011 sec; CPU: 0.007 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:35:33", "plugin": "core", "name": "end_epoch", "raw_value": "1636216533.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:35:33", "plugin": "core", "name": "start_epoch", "raw_value": "1636216533.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa", "tool_version": "0.7.17.4", "test_index": 4, "time_seconds": 39.73168897628784, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "c729f03a18659e4a"}, "reference_source|reference_source_selector": "history", "input_type|fastq_input1": {"src": "hda", "id": "30ec3bc68c09913b"}, "input_type|fastq_input2": {"src": "hda", "id": "d12f74a920a30b76"}, "input_type|input_type_selector": "paired", "rg|read_group_id_conditional|ID": "rg1", "rg|PL": "CAPILLARY", "rg|rg_selector": "set", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "c2901cb9c8fd9062", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:35:39.226910", "create_time": "2021-11-06T16:35:20.708387", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-rtzv6", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/7/1/b/dataset_71be0362-e822-4d8d-be69-dd6bc886385b.dat' 'localref.fa' && bwa index 'localref.fa' &&                            bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat' > first.sai &&  bwa aln -t \"${GALAXY_SLOTS:-1}\"   'localref.fa' '/galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat' > second.sai &&  bwa sampe    -r '@RG\\tID:rg1\\tPL:CAPILLARY'  'localref.fa' first.sai second.sai '/galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat' '/galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat'    | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/b/0/b/dataset_b0b523ba-e267-4caa-9054-5f1ebc38eeb4.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": null, \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "input_type": "{\"__current_case__\": 0, \"adv_pe_options\": {\"__current_case__\": 1, \"adv_pe_options_selector\": \"do_not_set\"}, \"fastq_input1\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}]}, \"input_type_selector\": \"paired\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "c729f03a18659e4a", "src": "hda", "uuid": "71be0362-e822-4d8d-be69-dd6bc886385b"}, "fastq_input1": {"id": "30ec3bc68c09913b", "src": "hda", "uuid": "acd12627-875a-4aae-acdd-7cbbc6b7aa93"}, "fastq_input2": {"id": "d12f74a920a30b76", "src": "hda", "uuid": "1bb52253-9c23-4637-81af-042b8f960530"}}, "outputs": {"bam_output": {"id": "8c629c1bdcec8819", "src": "hda", "uuid": "b0b523ba-e267-4caa-9054-5f1ebc38eeb4"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.01 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.043 sec; CPU: 0.012 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat\n[main] Real time: 0.020 sec; CPU: 0.045 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.03 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.017 sec; CPU: 0.031 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe -r @RG\\tID:rg1\\tPL:CAPILLARY localref.fa first.sai second.sai /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.015 sec; CPU: 0.005 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.01 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.043 sec; CPU: 0.012 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.04 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat\n[main] Real time: 0.020 sec; CPU: 0.045 sec\n[bwa_aln] 17bp reads: max_diff = 2\n[bwa_aln] 38bp reads: max_diff = 3\n[bwa_aln] 64bp reads: max_diff = 4\n[bwa_aln] 93bp reads: max_diff = 5\n[bwa_aln] 124bp reads: max_diff = 6\n[bwa_aln] 157bp reads: max_diff = 7\n[bwa_aln] 190bp reads: max_diff = 8\n[bwa_aln] 225bp reads: max_diff = 9\n[bwa_aln_core] calculate SA coordinate... 0.03 sec\n[bwa_aln_core] write to the disk... 0.00 sec\n[bwa_aln_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.017 sec; CPU: 0.031 sec\n[bwa_sai2sam_pe_core] convert to sequence coordinate... \n[infer_isize] fail to infer insert size: too few good pairs\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.\n[bwa_sai2sam_pe_core] align unmapped mate...\n[bwa_sai2sam_pe_core] time elapses: 0.00 sec\n[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec\n[bwa_sai2sam_pe_core] print alignments... 0.00 sec\n[bwa_sai2sam_pe_core] 100 sequences have been processed.\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa sampe -r @RG\\tID:rg1\\tPL:CAPILLARY localref.fa first.sai second.sai /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.015 sec; CPU: 0.005 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:35:36", "plugin": "core", "name": "end_epoch", "raw_value": "1636216536.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:35:36", "plugin": "core", "name": "start_epoch", "raw_value": "1636216536.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem", "tool_version": "0.7.17.1", "test_index": 0, "time_seconds": 28.21267008781433, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "c729f03a18659e4a"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "30ec3bc68c09913b"}, "fastq_input|fastq_input2": {"src": "hda", "id": "d12f74a920a30b76"}, "fastq_input|fastq_input_selector": "paired", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "eb07e8100fb98e26", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:35:42.471583", "create_time": "2021-11-06T16:35:28.475368", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-lz4sk", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/7/1/b/dataset_71be0362-e822-4d8d-be69-dd6bc886385b.dat' 'localref.fa' && bwa index 'localref.fa' &&    bwa mem -t \"${GALAXY_SLOTS:-1}\" -v 1                 'localref.fa' '/galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat' '/galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/8/f/f/dataset_8ffdbf63-dbb6-4008-9c53-a69ec711a658.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "fastq_input": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\", \"iset_stats\": null}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "c729f03a18659e4a", "src": "hda", "uuid": "71be0362-e822-4d8d-be69-dd6bc886385b"}, "fastq_input1": {"id": "30ec3bc68c09913b", "src": "hda", "uuid": "acd12627-875a-4aae-acdd-7cbbc6b7aa93"}, "fastq_input2": {"id": "d12f74a920a30b76", "src": "hda", "uuid": "1bb52253-9c23-4637-81af-042b8f960530"}}, "outputs": {"bam_output": {"id": "0c6f0a871e5f3de2", "src": "hda", "uuid": "8ffdbf63-dbb6-4008-9c53-a69ec711a658"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.048 sec; CPU: 0.012 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.022 sec; CPU: 0.042 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.048 sec; CPU: 0.012 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/a/c/d/dataset_acd12627-875a-4aae-acdd-7cbbc6b7aa93.dat /galaxy/server/database/objects/1/b/b/dataset_1bb52253-9c23-4637-81af-042b8f960530.dat\n[main] Real time: 0.022 sec; CPU: 0.042 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:35:41", "plugin": "core", "name": "end_epoch", "raw_value": "1636216541.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:35:41", "plugin": "core", "name": "start_epoch", "raw_value": "1636216541.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem", "tool_version": "0.7.17.1", "test_index": 1, "time_seconds": 33.92173528671265, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "0203b1f22f1f47d6"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "a68144195a740233"}, "fastq_input|fastq_input_selector": "single", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "8e8d9c186a323561", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:36:04.119024", "create_time": "2021-11-06T16:35:42.676190", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-vtvnr", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/1/3/4/dataset_1347fbd9-1a46-46fa-a57b-ede1e8876335.dat' 'localref.fa' && bwa index 'localref.fa' &&    bwa mem -t \"${GALAXY_SLOTS:-1}\" -v 1                'localref.fa' '/galaxy/server/database/objects/1/7/b/dataset_17b78a38-f363-4b4b-8870-064dbb398672.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/6/2/0/dataset_6205acfe-7c47-4b68-a94b-8e6111c9f61c.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "fastq_input": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 211, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "0203b1f22f1f47d6", "src": "hda", "uuid": "1347fbd9-1a46-46fa-a57b-ede1e8876335"}, "fastq_input1": {"id": "a68144195a740233", "src": "hda", "uuid": "17b78a38-f363-4b4b-8870-064dbb398672"}}, "outputs": {"bam_output": {"id": "be430faa42ace170", "src": "hda", "uuid": "6205acfe-7c47-4b68-a94b-8e6111c9f61c"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.042 sec; CPU: 0.011 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/1/7/b/dataset_17b78a38-f363-4b4b-8870-064dbb398672.dat\n[main] Real time: 0.013 sec; CPU: 0.022 sec\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.042 sec; CPU: 0.011 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/1/7/b/dataset_17b78a38-f363-4b4b-8870-064dbb398672.dat\n[main] Real time: 0.013 sec; CPU: 0.022 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:36:02", "plugin": "core", "name": "end_epoch", "raw_value": "1636216562.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:36:01", "plugin": "core", "name": "start_epoch", "raw_value": "1636216561.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem", "tool_version": "0.7.17.1", "test_index": 2, "time_seconds": 41.000744104385376, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "0203b1f22f1f47d6"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "d0bc70c420ba9693"}, "fastq_input|fastq_input2": {"src": "hda", "id": "8e57d0b936fcef56"}, "fastq_input|fastq_input_selector": "paired", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "807208b84e6cb7f8", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:36:15.243696", "create_time": "2021-11-06T16:35:56.527292", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-4k725", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/1/3/4/dataset_1347fbd9-1a46-46fa-a57b-ede1e8876335.dat' 'localref.fa' && bwa index 'localref.fa' &&    bwa mem -t \"${GALAXY_SLOTS:-1}\" -v 1                 'localref.fa' '/galaxy/server/database/objects/a/8/e/dataset_a8e990d3-478b-433d-a5ef-39ce64f29dcf.dat' '/galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/d/b/6/dataset_db685748-8ec6-47de-8634-9171c156f6c3.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "fastq_input": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 213, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\", \"iset_stats\": null}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "0203b1f22f1f47d6", "src": "hda", "uuid": "1347fbd9-1a46-46fa-a57b-ede1e8876335"}, "fastq_input1": {"id": "d0bc70c420ba9693", "src": "hda", "uuid": "a8e990d3-478b-433d-a5ef-39ce64f29dcf"}, "fastq_input2": {"id": "8e57d0b936fcef56", "src": "hda", "uuid": "568443ae-e6f6-429e-8d9f-61f5ac2f7335"}}, "outputs": {"bam_output": {"id": "695e4059135c479a", "src": "hda", "uuid": "db685748-8ec6-47de-8634-9171c156f6c3"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.046 sec; CPU: 0.012 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/a/8/e/dataset_a8e990d3-478b-433d-a5ef-39ce64f29dcf.dat /galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat\n[main] Real time: 0.020 sec; CPU: 0.039 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 0.046 sec; CPU: 0.012 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/a/8/e/dataset_a8e990d3-478b-433d-a5ef-39ce64f29dcf.dat /galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat\n[main] Real time: 0.020 sec; CPU: 0.039 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:36:13", "plugin": "core", "name": "end_epoch", "raw_value": "1636216573.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:36:12", "plugin": "core", "name": "start_epoch", "raw_value": "1636216572.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem", "tool_version": "0.7.17.1", "test_index": 3, "time_seconds": 39.40259313583374, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "0203b1f22f1f47d6"}, "reference_source|index_a": "is", "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "2f5aee231194799a"}, "fastq_input|fastq_input2": {"src": "hda", "id": "8e57d0b936fcef56"}, "fastq_input|fastq_input_selector": "paired", "rg|read_group_id_conditional|ID": "rg1", "rg|PL": "CAPILLARY", "rg|read_group_lb_conditional|LB": "AARDVARK-1", "rg|rg_selector": "set", "analysis_type|analysis_type_selector": "illumina"}, "job": {"model_class": "Job", "id": "0756340b3585fadf", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:36:18.625576", "create_time": "2021-11-06T16:36:05.152474", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-mf8xp", "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/1/3/4/dataset_1347fbd9-1a46-46fa-a57b-ede1e8876335.dat' 'localref.fa' && bwa index -a is 'localref.fa' &&    bwa mem -t \"${GALAXY_SLOTS:-1}\" -v 1                            -R '@RG\\tID:rg1\\tPL:CAPILLARY\\tLB:AARDVARK-1'   'localref.fa' '/galaxy/server/database/objects/4/f/c/dataset_4fc467ab-db8b-4b14-972b-49809134f606.dat' '/galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/4/2/9/dataset_42993964-c1d5-4954-8f64-e58b097ca95d.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"illumina\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": \"AARDVARK-1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "fastq_input": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 216, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\", \"iset_stats\": null}", "reference_source": "{\"__current_case__\": 1, \"index_a\": \"is\", \"ref_file\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "0203b1f22f1f47d6", "src": "hda", "uuid": "1347fbd9-1a46-46fa-a57b-ede1e8876335"}, "fastq_input1": {"id": "2f5aee231194799a", "src": "hda", "uuid": "4fc467ab-db8b-4b14-972b-49809134f606"}, "fastq_input2": {"id": "8e57d0b936fcef56", "src": "hda", "uuid": "568443ae-e6f6-429e-8d9f-61f5ac2f7335"}}, "outputs": {"bam_output": {"id": "a44dcd7f183ef4b9", "src": "hda", "uuid": "42993964-c1d5-4954-8f64-e58b097ca95d"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a is localref.fa\n[main] Real time: 0.045 sec; CPU: 0.011 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 -R @RG\\tID:rg1\\tPL:CAPILLARY\\tLB:AARDVARK-1 localref.fa /galaxy/server/database/objects/4/f/c/dataset_4fc467ab-db8b-4b14-972b-49809134f606.dat /galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat\n[main] Real time: 0.016 sec; CPU: 0.034 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stderr": "\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a is localref.fa\n[main] Real time: 0.045 sec; CPU: 0.011 sec\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)\n[M::mem_pestat] mean and std.dev: (192.97, 35.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 4 -v 1 -R @RG\\tID:rg1\\tPL:CAPILLARY\\tLB:AARDVARK-1 localref.fa /galaxy/server/database/objects/4/f/c/dataset_4fc467ab-db8b-4b14-972b-49809134f606.dat /galaxy/server/database/objects/5/6/8/dataset_568443ae-e6f6-429e-8d9f-61f5ac2f7335.dat\n[main] Real time: 0.016 sec; CPU: 0.034 sec\n[bam_sort_core] merging from 0 files and 4 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:36:16", "plugin": "core", "name": "end_epoch", "raw_value": "1636216576.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:36:16", "plugin": "core", "name": "start_epoch", "raw_value": "1636216576.0000000"}, {"title": "Memory Allocated (MB)", "value": "8000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8000.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper", "tool_version": "1.3.2", "test_index": 0, "time_seconds": 37.29702830314636, "inputs": {"source|target": {"src": "hda", "id": "5682d895d8729cdb"}, "source|ref_source": "history", "query": {"src": "hda", "id": "3b16aca4a5c03425"}}, "job": {"model_class": "Job", "id": "888c36a661dc0b8b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:49.852779", "create_time": "2021-11-06T16:37:39.522675", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-tcnq9", "command_line": "lastz_D  '/galaxy/server/database/objects/4/c/b/dataset_4cba76b2-19ba-476d-b9c9-57266d93257f.dat'    '/galaxy/server/database/objects/5/2/0/dataset_52020c69-6483-4f11-a83f-51ae6862f014.dat'   --inferonly '--infscores=/galaxy/server/database/objects/9/7/8/dataset_978994f7-b1b5-46f2-8a54-f2b11008b573.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "score_file": null, "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "5682d895d8729cdb", "src": "hda", "uuid": "4cba76b2-19ba-476d-b9c9-57266d93257f"}, "query": {"id": "3b16aca4a5c03425", "src": "hda", "uuid": "52020c69-6483-4f11-a83f-51ae6862f014"}}, "outputs": {"output": {"id": "f7d54a7f068999c1", "src": "hda", "uuid": "978994f7-b1b5-46f2-8a54-f2b11008b573"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:48", "plugin": "core", "name": "end_epoch", "raw_value": "1636216668.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:48", "plugin": "core", "name": "start_epoch", "raw_value": "1636216668.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper", "tool_version": "1.3.2", "test_index": 1, "time_seconds": 48.5422842502594, "inputs": {"source|target": {"src": "hda", "id": "5682d895d8729cdb"}, "source|ref_source": "history", "query": {"src": "hda", "id": "3b16aca4a5c03425"}, "score_file": {"src": "hda", "id": "5d676c3309aeaeb3"}}, "job": {"model_class": "Job", "id": "9d0169a3fdf3b9ff", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:38:02.239771", "create_time": "2021-11-06T16:37:53.755452", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-bggrr", "command_line": "lastz_D  '/galaxy/server/database/objects/4/c/b/dataset_4cba76b2-19ba-476d-b9c9-57266d93257f.dat'    '/galaxy/server/database/objects/5/2/0/dataset_52020c69-6483-4f11-a83f-51ae6862f014.dat'   '--inferonly=/galaxy/server/database/objects/2/0/d/dataset_20d369cb-4add-4a55-92b6-d1af9c81e68f.dat' '--infscores=/galaxy/server/database/objects/d/8/c/dataset_d8c88eab-53a1-4cd2-949d-377093fdc0e6.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "5682d895d8729cdb", "src": "hda", "uuid": "4cba76b2-19ba-476d-b9c9-57266d93257f"}, "query": {"id": "3b16aca4a5c03425", "src": "hda", "uuid": "52020c69-6483-4f11-a83f-51ae6862f014"}, "score_file": {"id": "5d676c3309aeaeb3", "src": "hda", "uuid": "20d369cb-4add-4a55-92b6-d1af9c81e68f"}}, "outputs": {"output": {"id": "02cead9a26fd96e7", "src": "hda", "uuid": "d8c88eab-53a1-4cd2-949d-377093fdc0e6"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:38:00", "plugin": "core", "name": "end_epoch", "raw_value": "1636216680.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:38:00", "plugin": "core", "name": "start_epoch", "raw_value": "1636216680.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 0, "time_seconds": 16.144280672073364, "inputs": {"source|target_2bit": "phiX174", "source|ref_source": "cached", "query": {"src": "hda", "id": "d43cd89f46e3a3ed"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "general_def"}, "execution_problem": "parameter 'target_2bit': an invalid option ('phiX174') was selected (valid options: sacCer1,oryCun1,tetNig1,hg19_rCRS_pUC18_phiX174,caeJap3,/cvmfs/data.galaxyproject.org/byhand/droVir2/droVir2.2bit,ce10,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/chr21.2bit,/cvmfs/data.galaxyproject.org/byhand/droEre1/droEre1.2bit,felCat5,panTro3,monDom1,tupBel1,Amel_4.5,/cvmfs/data.galaxyproject.org/byhand/phiX/seq/phiX.2bit,petMar1,susScr1,echTel1,eschColi_K12,hg17,/cvmfs/data.galaxyproject.org/byhand/Sscrofa9.58/seq/Sscrofa9.58.2bit,/cvmfs/data.galaxyproject.org/byhand/mm9/seq/mm9.2bit,/cvmfs/data.galaxyproject.org/byhand/hg19/seq/hg19.2bit,triCas2,canFam1,lMaj5,sorAra1,eschColi_EC4115,ailMel1,CpipJ1,fr2,panTro2,/cvmfs/data.galaxyproject.org/byhand/droAna3/droAna3.2bit,oryLat1,caeJap2,AaegL1,Hydra_JCVI,oryza_sativa_japonica_nipponbare_IRGSP4.0,caePb1,venter1,/cvmfs/data.galaxyproject.org/byhand/droGri2/droGri2.2bit,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/hg18.2bit,16297,/cvmfs/data.galaxyproject.org/byhand/ce6/seq/ce6.2bit,speTri2,Homo_sapiens_nuHg19_mtrCRS,/cvmfs/data.galaxyproject.org/byhand/droVir3/droVir3.2bit,PhumU1,/cvmfs/data.galaxyproject.org/byhand/droMoj3/droMoj3.2bit,caeRem4,/cvmfs/data.galaxyproject.org/byhand/ornAna1/seq/ornAna1.2bit,gasAcu1,danRer10,278,ce5,xenTro1,caeRem3,braFlo1,micMur1,anoCar2,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer7.2bit,/cvmfs/data.galaxyproject.org/byhand/droAna1/droAna1.2bit,/cvmfs/data.galaxyproject.org/byhand/susScr2/seq/susScr2.2bit,oviAri1,monDom5,20079,gadMor1,droSim1,papHam1,monDom4,hg38,caeJap1,melUnd1,galGal4,/cvmfs/data.galaxyproject.org/byhand/galGal3/seq/galGal3.2bit,/cvmfs/data.galaxyproject.org/byhand/canFam2/seq/canFam2.2bit,Araly1,eschColi_CFT073,panTro1,nomLeu2,dm2,eschColi_O157H7,galGal2,bosTauMd3,/cvmfs/data.galaxyproject.org/byhand/sacCer2/seq/sacCer2,baciSubt,/cvmfs/data.galaxyproject.org/byhand/droMoj1/droMoj1.2bit,dipOrd1,calJac3,aplCal1,Arabidopsis_thaliana_TAIR10,cavPor3,burkPseu_1106A,259,rn5,178,apiMel1,equCab1,nomLeu3,otoGar1,386,myoLuc2,dp3,/cvmfs/data.galaxyproject.org/byhand/anoCar1/anoCar1.2bit,oryCun2,13954,rheMac3,tarSyr1,IscaW1,vicPac1,eschColi_TW14359,vicPac2,/cvmfs/data.galaxyproject.org/byhand/strPur2/seq/strPur2.2bit,/cvmfs/data.galaxyproject.org/byhand/droGri1/droGri1.2bit,felCat4,eriEur1,Homo_sapiens_AK1,Zea_mays_B73_RefGen_v2,mm10,otoGar3,strPur3,/cvmfs/data.galaxyproject.org/byhand/dm3/seq/dm3.2bit,borEut13,/cvmfs/data.galaxyproject.org/byhand/anoGam1/anoGam1.2bit,/cvmfs/data.galaxyproject.org/byhand/felCat3/seq/felCat3.2bit,/cvmfs/data.galaxyproject.org/byhand/rn4/seq/rn4.2bit,13953,ce2,Tcas_3.0,bosTau2,ce3,arabidopsis,ce9,priPac1,dasNov3,/cvmfs/data.galaxyproject.org/byhand/droSec1/droSec1.2bit,Schizosaccharomyces_pombe_1.1,fr1,12931,Bombyx_mori_p50T_2.0,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer6.2bit,droYak2,dasNov1,danRer4,/cvmfs/data.galaxyproject.org/byhand/xenTro2/seq/xenTro2.2bit,droWil1,Ptrichocarpa_156,/cvmfs/data.galaxyproject.org/byhand/droEre2/droEre2.2bit,/cvmfs/data.galaxyproject.org/byhand/mm8/seq/mm8.2bit,/cvmfs/data.galaxyproject.org/byhand/droPer1/droPer1.2bit,bordBron,nomLeu1,panTro4,Xanthomonas_oryzae_PXO99A,16720,/cvmfs/data.galaxyproject.org/byhand/droAna2/droAna2.2bit,caeRem1,sacCer3,tetNig2,droYak1,oryLat2,caePb3,Spur_v2.6,allMis1,cb3,/cvmfs/data.galaxyproject.org/byhand/equCab2/seq/equCab2.2bit,ce4,pseuAeru,caeJap4,ce7,/cvmfs/data.galaxyproject.org/byhand/rheMac2/seq/rheMac2.2bit,bosTau5,/cvmfs/data.galaxyproject.org/byhand/taeGut1/seq/taeGut1.2bit,loxAfr3,/cvmfs/data.galaxyproject.org/byhand/apiMel3/seq/apiMel3.2bit,dm6,/cvmfs/data.galaxyproject.org/byhand/calJac1/calJac1.2bit,cerSim1,apiMel4,caePb2,bosTau3,eschColi_APEC_O1,/cvmfs/data.galaxyproject.org/byhand/apiMel2/apiMel2.2bit,16351,papAnu2,/cvmfs/data.galaxyproject.org/byhand/droVir1/droVir1.2bit,rn6,/cvmfs/data.galaxyproject.org/byhand/droMoj2/droMoj2.2bit,ente638,felCat8,chrPic1,musFur1,bosTau8,ci2,caeRem2,rn3,dp4,27835,bosTau6,bosTau7,hg_g1k_v37,ponAbe2,ce8,gorGor3,turTru2,saiBol1,/cvmfs/data.galaxyproject.org/byhand/danRer5/seq/danRer5.2bit,panPan1,AgamP3,loxAfr1,/cvmfs/data.galaxyproject.org/byhand/bosTau4/seq/bosTau4.2bit,aptMan1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 1, "time_seconds": 49.061007261276245, "inputs": {"source|target": {"src": "hda", "id": "536c3a35d5da666d"}, "source|ref_source": "history", "query": {"src": "hda", "id": "a2fcc2270b7121ab"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "general_def"}, "job": {"model_class": "Job", "id": "ea5da810592d0160", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:07.923016", "create_time": "2021-11-06T16:36:37.310381", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-gbgsq", "command_line": "lastz  '/galaxy/server/database/objects/2/f/b/dataset_2fbab1a9-50fe-4721-95a8-e8d6178bee32.dat'    '/galaxy/server/database/objects/e/b/4/dataset_eb475012-f67e-4af1-b43a-1b088dc46bb2.dat'     '--strand=both'      '--ambiguous=iupac'               --traceback=160M    --format=general- --action:target=multiple  > '/galaxy/server/database/objects/9/a/9/dataset_9a9ae1ec-78cf-4ab2-abe8-dbec381c39ae.dat'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 1, \"format\": \"general_def\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": null}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 233, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "536c3a35d5da666d", "src": "hda", "uuid": "2fbab1a9-50fe-4721-95a8-e8d6178bee32"}, "query": {"id": "a2fcc2270b7121ab", "src": "hda", "uuid": "eb475012-f67e-4af1-b43a-1b088dc46bb2"}}, "outputs": {"output": {"id": "a24b8dc72e13faf1", "src": "hda", "uuid": "9a9ae1ec-78cf-4ab2-abe8-dbec381c39ae"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216626.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636216626.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 2, "time_seconds": 36.259687662124634, "inputs": {"source|target": {"src": "hda", "id": "536c3a35d5da666d"}, "source|ref_source": "history", "query": {"src": "hda", "id": "a2fcc2270b7121ab"}, "where_to_look|strand": "--strand=both", "scoring|score_file": {"src": "hda", "id": "1361ecf835fb25ac"}, "output_format|out|format": "general_def"}, "job": {"model_class": "Job", "id": "ebe7b631b58d8f27", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:07.934696", "create_time": "2021-11-06T16:36:46.427485", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-mnrtw", "command_line": "lastz  '/galaxy/server/database/objects/2/f/b/dataset_2fbab1a9-50fe-4721-95a8-e8d6178bee32.dat'    '/galaxy/server/database/objects/e/b/4/dataset_eb475012-f67e-4af1-b43a-1b088dc46bb2.dat'     '--strand=both'     '--scores=/galaxy/server/database/objects/e/6/a/dataset_e6a213ea-8b2e-4c3f-9999-f6f1a34dcdcc.dat'  '--ambiguous=iupac'               --traceback=160M    --format=general- --action:target=multiple  > '/galaxy/server/database/objects/9/f/2/dataset_9f2d12ef-9d65-4023-a076-4164ad83fa72.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 1, \"format\": \"general_def\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": {\"values\": [{\"id\": 235, \"src\": \"hda\"}]}}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 233, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "536c3a35d5da666d", "src": "hda", "uuid": "2fbab1a9-50fe-4721-95a8-e8d6178bee32"}, "query": {"id": "a2fcc2270b7121ab", "src": "hda", "uuid": "eb475012-f67e-4af1-b43a-1b088dc46bb2"}, "score_file": {"id": "1361ecf835fb25ac", "src": "hda", "uuid": "e6a213ea-8b2e-4c3f-9999-f6f1a34dcdcc"}}, "outputs": {"output": {"id": "51200b6a84461021", "src": "hda", "uuid": "9f2d12ef-9d65-4023-a076-4164ad83fa72"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216626.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636216626.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 3, "time_seconds": 28.8711576461792, "inputs": {"source|target": {"src": "hda", "id": "ddae137a64e7242f"}, "source|ref_source": "history", "query": {"src": "hda", "id": "959e6a3724c683a5"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "blastn"}, "job": {"model_class": "Job", "id": "f0ac0067357db320", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:12.627433", "create_time": "2021-11-06T16:36:59.908336", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-jpxhs", "command_line": "lastz  <(gunzip -c '/galaxy/server/database/objects/d/1/5/dataset_d154f195-00e4-4815-b8a5-199b16775d14.dat')    <(gunzip -c '/galaxy/server/database/objects/0/8/d/dataset_08d96623-76d9-438a-95cd-a5446ee7eeae.dat')     '--strand=both'      '--ambiguous=iupac'               --traceback=160M    --format=BLASTN- --action:target=multiple  > '/galaxy/server/database/objects/b/9/e/dataset_b9ec6ed2-1b12-4cdc-8cbc-c64ac6636739.dat'", "params": {"__input_ext": "\"fasta.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 4, \"format\": \"blastn\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": null}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 237, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "ddae137a64e7242f", "src": "hda", "uuid": "d154f195-00e4-4815-b8a5-199b16775d14"}, "query": {"id": "959e6a3724c683a5", "src": "hda", "uuid": "08d96623-76d9-438a-95cd-a5446ee7eeae"}}, "outputs": {"output": {"id": "d87c06e5840187a9", "src": "hda", "uuid": "b9ec6ed2-1b12-4cdc-8cbc-c64ac6636739"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:37:10", "plugin": "core", "name": "end_epoch", "raw_value": "1636216630.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:09", "plugin": "core", "name": "start_epoch", "raw_value": "1636216629.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 4, "time_seconds": 27.45018219947815, "inputs": {"source|target": {"src": "hda", "id": "959e6a3724c683a5"}, "source|ref_source": "history", "query": {"src": "hda", "id": "2975bdae9bc22380"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "blastn"}, "job": {"model_class": "Job", "id": "e7ee3651a4c63a76", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:13.645216", "create_time": "2021-11-06T16:37:02.173054", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-mlq5m", "command_line": "lastz  <(gunzip -c '/galaxy/server/database/objects/0/8/d/dataset_08d96623-76d9-438a-95cd-a5446ee7eeae.dat')    <(bunzip2 -c '/galaxy/server/database/objects/5/6/8/dataset_56828c2c-0f29-45f3-be49-bf3e2c9ef162.dat')     '--strand=both'      '--ambiguous=iupac'               --traceback=160M    --format=BLASTN- --action:target=multiple  > '/galaxy/server/database/objects/3/c/8/dataset_3c81b7f6-0865-4821-9ab2-73a63ed43251.dat'", "params": {"__input_ext": "\"fasta.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 4, \"format\": \"blastn\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": null}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "959e6a3724c683a5", "src": "hda", "uuid": "08d96623-76d9-438a-95cd-a5446ee7eeae"}, "query": {"id": "2975bdae9bc22380", "src": "hda", "uuid": "56828c2c-0f29-45f3-be49-bf3e2c9ef162"}}, "outputs": {"output": {"id": "8ee705cb857d3836", "src": "hda", "uuid": "3c81b7f6-0865-4821-9ab2-73a63ed43251"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:11", "plugin": "core", "name": "end_epoch", "raw_value": "1636216631.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:11", "plugin": "core", "name": "start_epoch", "raw_value": "1636216631.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 5, "time_seconds": 27.20720624923706, "inputs": {"source|target": {"src": "hda", "id": "782a54edbd201cb4"}, "source|ref_source": "history", "query": {"src": "hda", "id": "193ab6773c68fae3"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "blastn"}, "job": {"model_class": "Job", "id": "d0bc70c420ba9693", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:35.440777", "create_time": "2021-11-06T16:37:24.691079", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-qldmd", "command_line": "lastz  <(gunzip -c '/galaxy/server/database/objects/1/c/9/dataset_1c9865ca-ff87-4d00-9167-4a4d24d8cd90.dat')    <(gunzip -c '/galaxy/server/database/objects/9/f/d/dataset_9fd934ba-4594-4dc5-8749-9fc614069c00.dat')     '--strand=both'      '--ambiguous=iupac'               --traceback=160M    --format=BLASTN- --action:target=multiple  > '/galaxy/server/database/objects/e/b/6/dataset_eb62cd54-6a0d-4bfc-ae95-d028213b4cae.dat'", "params": {"__input_ext": "\"fasta.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 4, \"format\": \"blastn\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": null}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 244, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "782a54edbd201cb4", "src": "hda", "uuid": "1c9865ca-ff87-4d00-9167-4a4d24d8cd90"}, "query": {"id": "193ab6773c68fae3", "src": "hda", "uuid": "9fd934ba-4594-4dc5-8749-9fc614069c00"}}, "outputs": {"output": {"id": "5f6c8c6e4a31b1c4", "src": "hda", "uuid": "eb62cd54-6a0d-4bfc-ae95-d028213b4cae"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:33", "plugin": "core", "name": "end_epoch", "raw_value": "1636216653.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:33", "plugin": "core", "name": "start_epoch", "raw_value": "1636216653.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2", "test_index": 6, "time_seconds": 26.391050338745117, "inputs": {"source|target": {"src": "hda", "id": "782a54edbd201cb4"}, "source|ref_source": "history", "query": {"src": "hda", "id": "248a018810513d71"}, "where_to_look|strand": "--strand=both", "output_format|out|format": "blastn"}, "job": {"model_class": "Job", "id": "71c87d53b9fe8e30", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:37:34.343800", "create_time": "2021-11-06T16:37:24.838290", "galaxy_version": "21.05", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-qqzkv", "command_line": "lastz  <(gunzip -c '/galaxy/server/database/objects/1/c/9/dataset_1c9865ca-ff87-4d00-9167-4a4d24d8cd90.dat')    '/galaxy/server/database/objects/c/0/c/dataset_c0c1f718-8958-45d7-9f0e-1a50cb4ebecb.dat'     '--strand=both'      '--ambiguous=iupac'               --traceback=160M    --format=BLASTN- --action:target=multiple  > '/galaxy/server/database/objects/9/b/d/dataset_9bd180ab-afc6-4580-8c9a-fe0106e19e51.dat'", "params": {"__input_ext": "\"fasta.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_format": "{\"out\": {\"__current_case__\": 4, \"format\": \"blastn\"}, \"rplot\": \"false\"}", "interpolation": "{\"inner\": \"\"}", "filters": "{\"continuity\": {\"cont_max\": \"\", \"cont_min\": \"\"}, \"coverage\": {\"cov_max\": \"\", \"cov_min\": \"\"}, \"filter_cgap\": \"\", \"filter_ngap\": \"\", \"filter_nmatch\": \"\", \"filter_nmatch_percent\": \"\", \"filter_nmismatch\": \"\", \"identity\": {\"id_max\": \"\", \"id_min\": \"\"}, \"notrivial\": \"false\"}", "gap_ext": "{\"allgappedbounds\": \"false\", \"gapped\": \"false\", \"gappedthresh\": \"\", \"nogapped\": \"false\", \"noytrim\": \"false\", \"ydrop\": \"\"}", "chaining": "{\"chain\": \"false\", \"chaning_penalties\": {\"__current_case__\": 1, \"chaning_penalties_selector\": \"no\"}}", "hsp": "{\"entropy\": \"false\", \"entropy_report\": \"false\", \"gfextend\": \"false\", \"hsp_method\": {\"__current_case__\": 0, \"hsp_method_selector\": \"none\"}, \"noentropy\": \"false\", \"nogfextend\": \"false\"}", "seeding": "{\"seed\": {\"__current_case__\": 0, \"seed_selector\": \"defaults\"}, \"seed_filer\": {\"__current_case__\": 1, \"seed_filer_selector\": \"no\"}, \"transitions\": \"--transition\"}", "scoring": "{\"ambigIUPAC\": \"true\", \"ambigN\": \"false\", \"gap\": {\"__current_case__\": 1, \"gap_selector\": \"no\"}, \"match\": {\"__current_case__\": 1, \"match_selector\": \"no\"}, \"score_file\": null}", "where_to_look": "{\"nomirror\": \"false\", \"qdepth\": {\"__current_case__\": 1, \"qdepth_selector\": \"no\"}, \"qhspbest\": \"\", \"qhsplimit\": {\"__current_case__\": 1, \"qhsplimit_selector\": \"no\"}, \"self\": \"false\", \"strand\": \"--strand=both\"}", "source": "{\"__current_case__\": 1, \"ref_source\": \"history\", \"target\": {\"values\": [{\"id\": 244, \"src\": \"hda\"}]}}"}, "inputs": {"target": {"id": "782a54edbd201cb4", "src": "hda", "uuid": "1c9865ca-ff87-4d00-9167-4a4d24d8cd90"}, "query": {"id": "248a018810513d71", "src": "hda", "uuid": "c0c1f718-8958-45d7-9f0e-1a50cb4ebecb"}}, "outputs": {"output": {"id": "6014e8e10801a341", "src": "hda", "uuid": "9bd180ab-afc6-4580-8c9a-fe0106e19e51"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:37:32", "plugin": "core", "name": "end_epoch", "raw_value": "1636216652.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:37:32", "plugin": "core", "name": "start_epoch", "raw_value": "1636216652.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth", "tool_version": "0.2.2", "test_index": 0, "time_seconds": 60.80974006652832, "inputs": {"referenceSource|reference": {"src": "hda", "id": "9d0169a3fdf3b9ff"}, "single_or_paired|input_mate1": {"src": "hda", "id": "0d2ec22399aac488"}, "single_or_paired|input_mate2": {"src": "hda", "id": "3479424295b16197"}, "single_or_paired|single_or_paired_opts": "paired"}, "job": {"model_class": "Job", "id": "46eee7b904665272", "state": "error", "exit_code": 1, "update_time": "2021-11-06T16:36:43.566216", "create_time": "2021-11-06T16:36:19.608854", "galaxy_version": "21.05", "command_version": "bwa-meth.py 0.2.2\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-cvmhd", "command_line": "mkdir index_dir && ln -s '/galaxy/server/database/objects/6/b/4/dataset_6b40759f-0251-40ad-8b18-8b6d7a88d086.dat' index_dir/genome.fa && bwameth.py index index_dir/genome.fa &&  ln -f -s '/galaxy/server/database/objects/f/f/1/dataset_ff154c06-c9d6-48d4-b2fc-75865c368cac.dat' input_f.fastq.gz &&  ln -f -s '/galaxy/server/database/objects/5/b/1/dataset_5b1f1bbc-0b54-4084-8aef-4143e4099ac1.dat' input_r.fastq.gz &&  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference 'index_dir/genome.fa'   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "readGroup": "\"\"", "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}", "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 223, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"reference": {"id": "9d0169a3fdf3b9ff", "src": "hda", "uuid": "6b40759f-0251-40ad-8b18-8b6d7a88d086"}, "input_mate1": {"id": "0d2ec22399aac488", "src": "hda", "uuid": "ff154c06-c9d6-48d4-b2fc-75865c368cac"}, "input_mate2": {"id": "3479424295b16197", "src": "hda", "uuid": "5b1f1bbc-0b54-4084-8aef-4143e4099ac1"}}, "outputs": {"output": {"id": "3cd73b50c4046c51", "src": "hda", "uuid": "d47c228f-7b99-4264-b4b3-445585f125b9"}}, "tool_stdout": "", "tool_stderr": "converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in <module>\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in <genexpr>\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \">\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\n", "job_stdout": "", "job_stderr": "", "stderr": "converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in <module>\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in <genexpr>\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \">\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\n", "stdout": "", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}, {"code_desc": "", "desc": "Fatal error: ", "error_level": 3, "match": "Error:", "stream": "stderr", "type": "regex"}], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:36:42", "plugin": "core", "name": "end_epoch", "raw_value": "1636216602.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:36:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216602.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2, exit_code: 1, stderr: converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in <module>\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in <genexpr>\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \">\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2, exit_code: 1, stderr: converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in <module>\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in <genexpr>\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \">\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\n."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth", "tool_version": "0.2.2", "test_index": 1, "time_seconds": 41.91965389251709, "inputs": {"referenceSource|reference": {"src": "hda", "id": "9d0169a3fdf3b9ff"}, "single_or_paired|input_mate1": {"src": "hdca", "id": "bf53f2b3b519c246"}, "single_or_paired|single_or_paired_opts": "paired_collection"}, "job": {"model_class": "Job", "id": "5092e188d9dfc9b9", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:36:45.848726", "create_time": "2021-11-06T16:36:26.314077", "galaxy_version": "21.05", "command_version": "bwa-meth.py 0.2.2\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2", "history_id": "1787f5936be7ca45", "external_id": "gxy-b72sf", "command_line": "mkdir index_dir && ln -s '/galaxy/server/database/objects/5/3/e/dataset_53ee8351-25b5-4d4f-8be7-85827e8976b0.dat' index_dir/genome.fa && bwameth.py index index_dir/genome.fa &&  ln -s '/galaxy/server/database/objects/f/f/1/dataset_ff154c06-c9d6-48d4-b2fc-75865c368cac.dat' input_f.fastq.gz &&  ln -s '/galaxy/server/database/objects/5/b/1/dataset_5b1f1bbc-0b54-4084-8aef-4143e4099ac1.dat' input_r.fastq.gz &&  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference 'index_dir/genome.fa'   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "readGroup": "\"\"", "single_or_paired": "{\"__current_case__\": 2, \"input_mate1\": {\"values\": [{\"id\": 3, \"src\": \"hdca\"}]}, \"single_or_paired_opts\": \"paired_collection\"}", "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 231, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"reference": {"id": "edc61887602f2774", "src": "hda", "uuid": "53ee8351-25b5-4d4f-8be7-85827e8976b0"}, "input_mate11": {"id": "0d2ec22399aac488", "src": "hda", "uuid": "ff154c06-c9d6-48d4-b2fc-75865c368cac"}, "input_mate12": {"id": "3479424295b16197", "src": "hda", "uuid": "5b1f1bbc-0b54-4084-8aef-4143e4099ac1"}}, "outputs": {"output": {"id": "b6b168f44730cd1f", "src": "hda", "uuid": "66f404d0-c57e-48de-abbc-601f2fe70af1"}}, "tool_stdout": "", "tool_stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.81 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.21 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.154 sec; CPU: 1.076 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.039 CPU sec, 0.021 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 2 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.144 sec; CPU: 0.049 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\\tID:input_\\tSM:input_' -t 2  index_dir/genome.fa.bwameth.c2t -\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.81 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.21 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.154 sec; CPU: 1.076 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.039 CPU sec, 0.021 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 2 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.144 sec; CPU: 0.049 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\\tID:input_\\tSM:input_' -t 2  index_dir/genome.fa.bwameth.c2t -\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:36:44", "plugin": "core", "name": "end_epoch", "raw_value": "1636216604.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:36:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216602.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_2i1ojeh9.sam v. /tmp/history_bam_converted_to_sam_1stgm9ps.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 2 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 2 -T /galaxy/server/database/jobs_directory/000/192/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0''B<<<00FB7<000'BBB0B<0FFFFFFFFFFFFFFFFFBFFB<7FFIFFFBBB<FFB<<7FFIFFFFFBBFF<IIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB<FFFI<FBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF<BBFFF'07BBBBFFFFFFFFFFB0<BF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual", "tool_version": "2.1.5+galaxy0", "test_index": 0, "time_seconds": 27.009968042373657, "inputs": {"reads": {"src": "hda", "id": "40d79a0534183231"}, "reference_source|ref": {"src": "hda", "id": "ac4b6f24d0a6e2d5"}, "reference_source|ref_selector": "history"}, "job": {"model_class": "Job", "id": "6477623383820014", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:05.832980", "create_time": "2021-11-06T18:11:52.046298", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-zwqxt", "command_line": "ln -s '/galaxy/server/database/objects/1/9/2/dataset_1920b1f8-f534-4d68-8b7b-88d326b36ad7.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq alnqual -b    '/galaxy/server/database/objects/5/1/a/dataset_51aed930-d70e-441d-981e-c469604405c8.dat' 'reference.fa' > '/galaxy/server/database/objects/d/a/1/dataset_da147da8-9326-4f04-ab73-9b520d22ab7b.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "recompute_all": "\"false\"", "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 378, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "40d79a0534183231", "src": "hda", "uuid": "51aed930-d70e-441d-981e-c469604405c8"}, "ref": {"id": "ac4b6f24d0a6e2d5", "src": "hda", "uuid": "1920b1f8-f534-4d68-8b7b-88d326b36ad7"}}, "outputs": {"output": {"id": "779caa2be26e7ce4", "src": "hda", "uuid": "da147da8-9326-4f04-ab73-9b520d22ab7b"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:12:04", "plugin": "core", "name": "end_epoch", "raw_value": "1636222324.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:03", "plugin": "core", "name": "start_epoch", "raw_value": "1636222323.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual", "tool_version": "2.1.5+galaxy0", "test_index": 1, "time_seconds": 39.16942024230957, "inputs": {"reads": {"src": "hda", "id": "8519b4d72be214fd"}, "reference_source|ref": {"src": "hda", "id": "5b76b7d7273ef4b3"}, "reference_source|ref_selector": "history", "alnqual_choice|alnquals_to_use": "-B"}, "job": {"model_class": "Job", "id": "c947a808fd32098b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:38.828963", "create_time": "2021-11-06T18:12:14.888934", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-7fdlh", "command_line": "ln -s '/galaxy/server/database/objects/3/e/2/dataset_3e216d81-50bd-48b4-9405-84e35900b4d0.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq alnqual -b  -B  '/galaxy/server/database/objects/f/d/7/dataset_fd72dbf0-c870-48da-ba52-7d5d902b58ca.dat' 'reference.fa' > '/galaxy/server/database/objects/4/2/9/dataset_42948a81-a69c-42d9-9a40-430765ca895a.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "recompute_all": "\"false\"", "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 390, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"ref": {"id": "5b76b7d7273ef4b3", "src": "hda", "uuid": "3e216d81-50bd-48b4-9405-84e35900b4d0"}, "reads": {"id": "8519b4d72be214fd", "src": "hda", "uuid": "fd72dbf0-c870-48da-ba52-7d5d902b58ca"}}, "outputs": {"output": {"id": "6bb59f4ab74f39f6", "src": "hda", "uuid": "42948a81-a69c-42d9-9a40-430765ca895a"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:12:35", "plugin": "core", "name": "end_epoch", "raw_value": "1636222355.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:35", "plugin": "core", "name": "start_epoch", "raw_value": "1636222355.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual", "tool_version": "2.1.5+galaxy0", "test_index": 2, "time_seconds": 42.90205097198486, "inputs": {"reads": {"src": "hda", "id": "8519b4d72be214fd"}, "reference_source|ref": {"src": "hda", "id": "5b76b7d7273ef4b3"}, "reference_source|ref_selector": "history", "alnqual_choice|alnquals_to_use": "-A"}, "job": {"model_class": "Job", "id": "2c4fe8fd9d9012f0", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:45.105421", "create_time": "2021-11-06T18:12:19.840238", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-jlbwg", "command_line": "ln -s '/galaxy/server/database/objects/3/e/2/dataset_3e216d81-50bd-48b4-9405-84e35900b4d0.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq alnqual -b  -A  '/galaxy/server/database/objects/f/d/7/dataset_fd72dbf0-c870-48da-ba52-7d5d902b58ca.dat' 'reference.fa' > '/galaxy/server/database/objects/6/e/0/dataset_6e067289-de53-4f45-a4c3-b9cfb33160b4.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "recompute_all": "\"false\"", "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": \"true\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 390, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"ref": {"id": "5b76b7d7273ef4b3", "src": "hda", "uuid": "3e216d81-50bd-48b4-9405-84e35900b4d0"}, "reads": {"id": "8519b4d72be214fd", "src": "hda", "uuid": "fd72dbf0-c870-48da-ba52-7d5d902b58ca"}}, "outputs": {"output": {"id": "8601cba577e31bc8", "src": "hda", "uuid": "6e067289-de53-4f45-a4c3-b9cfb33160b4"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:12:41", "plugin": "core", "name": "end_epoch", "raw_value": "1636222361.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:41", "plugin": "core", "name": "start_epoch", "raw_value": "1636222361.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual", "tool_version": "2.1.5+galaxy0", "test_index": 3, "time_seconds": 38.722747802734375, "inputs": {"reads": {"src": "hda", "id": "8519b4d72be214fd"}, "reference_source|ref": {"src": "hda", "id": "5b76b7d7273ef4b3"}, "reference_source|ref_selector": "history", "alnqual_choice|extended_baq": false}, "job": {"model_class": "Job", "id": "be0373ad35cc53ef", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:43.045587", "create_time": "2021-11-06T18:12:27.346276", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-r7pw2", "command_line": "ln -s '/galaxy/server/database/objects/3/e/2/dataset_3e216d81-50bd-48b4-9405-84e35900b4d0.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq alnqual -b -e   '/galaxy/server/database/objects/f/d/7/dataset_fd72dbf0-c870-48da-ba52-7d5d902b58ca.dat' 'reference.fa' > '/galaxy/server/database/objects/e/9/1/dataset_e912c8d8-365c-4130-9098-52c78643c7bd.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "recompute_all": "\"false\"", "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"false\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 390, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"ref": {"id": "5b76b7d7273ef4b3", "src": "hda", "uuid": "3e216d81-50bd-48b4-9405-84e35900b4d0"}, "reads": {"id": "8519b4d72be214fd", "src": "hda", "uuid": "fd72dbf0-c870-48da-ba52-7d5d902b58ca"}}, "outputs": {"output": {"id": "dab2027fad081421", "src": "hda", "uuid": "e912c8d8-365c-4130-9098-52c78643c7bd"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:12:39", "plugin": "core", "name": "end_epoch", "raw_value": "1636222359.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:39", "plugin": "core", "name": "start_epoch", "raw_value": "1636222359.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual", "tool_version": "2.1.5+galaxy0", "test_index": 4, "time_seconds": 41.04149270057678, "inputs": {"reads": {"src": "hda", "id": "8519b4d72be214fd"}, "reference_source|ref": {"src": "hda", "id": "5b76b7d7273ef4b3"}, "reference_source|ref_selector": "history"}, "job": {"model_class": "Job", "id": "6beea5c6988f625c", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:47.135248", "create_time": "2021-11-06T18:12:30.261143", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-v25kw", "command_line": "ln -s '/galaxy/server/database/objects/3/e/2/dataset_3e216d81-50bd-48b4-9405-84e35900b4d0.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq alnqual -b    '/galaxy/server/database/objects/f/d/7/dataset_fd72dbf0-c870-48da-ba52-7d5d902b58ca.dat' 'reference.fa' > '/galaxy/server/database/objects/d/2/a/dataset_d2a08ef5-91fe-4607-9995-269cc28d12a8.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "recompute_all": "\"false\"", "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 390, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"ref": {"id": "5b76b7d7273ef4b3", "src": "hda", "uuid": "3e216d81-50bd-48b4-9405-84e35900b4d0"}, "reads": {"id": "8519b4d72be214fd", "src": "hda", "uuid": "fd72dbf0-c870-48da-ba52-7d5d902b58ca"}}, "outputs": {"output": {"id": "2e948c7f6b885da3", "src": "hda", "uuid": "d2a08ef5-91fe-4607-9995-269cc28d12a8"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:12:43", "plugin": "core", "name": "end_epoch", "raw_value": "1636222363.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:43", "plugin": "core", "name": "start_epoch", "raw_value": "1636222363.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call", "tool_version": "2.1.5+galaxy1", "test_index": 0, "time_seconds": 67.62779068946838, "inputs": {"reads": {"src": "hda", "id": "0a4d9e7c9de91171"}, "reference_source|ref": {"src": "hda", "id": "6e5165148ff63866"}, "reference_source|ref_selector": "history"}, "job": {"model_class": "Job", "id": "b5c0d305544124e1", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:10:24.835682", "create_time": "2021-11-06T18:09:47.865186", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-d5m9p", "command_line": "ln -s '/galaxy/server/database/objects/a/8/2/dataset_a8248998-a0a0-45bb-9e1e-a716a966099b.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  ln -s '/galaxy/server/database/objects/2/c/1/dataset_2c1f4315-c658-413a-a7c8-65d87c49a5e6.dat' reads.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/0/d/c/metadata_0dc89ace-be5d-47de-b6ce-87fc61939e92.dat' reads.bam.bai &&   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref 'reference.fa' --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2>&1  || (tool_exit_code=$? && cat \"$TMPDIR/lofreq2_call_parallel*/*.log\" 1>&2 && exit $tool_exit_code)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}", "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}", "variant_types": "\"\"", "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 346, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "0a4d9e7c9de91171", "src": "hda", "uuid": "2c1f4315-c658-413a-a7c8-65d87c49a5e6"}, "ref": {"id": "6e5165148ff63866", "src": "hda", "uuid": "a8248998-a0a0-45bb-9e1e-a716a966099b"}}, "outputs": {"variants": {"id": "058a34d5d73aebdd", "src": "hda", "uuid": "fcad7007-992c-4100-8a2a-4a749e80e3b6"}}, "tool_stdout": "INFO [2021-11-06 18:10:18,782]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:18,795]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:22,554]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/270/tmp/lofreq2_call_parallelhk2h7c93/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "INFO [2021-11-06 18:10:18,782]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:18,795]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:22,554]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/270/tmp/lofreq2_call_parallelhk2h7c93/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:10:22", "plugin": "core", "name": "end_epoch", "raw_value": "1636222222.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:18", "plugin": "core", "name": "start_epoch", "raw_value": "1636222218.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call", "tool_version": "2.1.5+galaxy1", "test_index": 1, "time_seconds": 53.91583299636841, "inputs": {"reads": {"src": "hda", "id": "0a4d9e7c9de91171"}, "reference_source|ref": {"src": "hda", "id": "6e5165148ff63866"}, "reference_source|ref_selector": "history", "call_control|set_call_options": "yes"}, "job": {"model_class": "Job", "id": "4eed6a244ee2e569", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:10:24.845449", "create_time": "2021-11-06T18:09:55.920776", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-nrfv4", "command_line": "ln -s '/galaxy/server/database/objects/a/8/2/dataset_a8248998-a0a0-45bb-9e1e-a716a966099b.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  ln -s '/galaxy/server/database/objects/2/c/1/dataset_2c1f4315-c658-413a-a7c8-65d87c49a5e6.dat' reads.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/0/d/c/metadata_0dc89ace-be5d-47de-b6ce-87fc61939e92.dat' reads.bam.bai &&   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref 'reference.fa' --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2>&1  || (tool_exit_code=$? && cat \"$TMPDIR/lofreq2_call_parallel*/*.log\" 1>&2 && exit $tool_exit_code)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}", "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": \"false\"}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}", "variant_types": "\"\"", "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 346, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "0a4d9e7c9de91171", "src": "hda", "uuid": "2c1f4315-c658-413a-a7c8-65d87c49a5e6"}, "ref": {"id": "6e5165148ff63866", "src": "hda", "uuid": "a8248998-a0a0-45bb-9e1e-a716a966099b"}}, "outputs": {"variants": {"id": "8841a50b1c50ce14", "src": "hda", "uuid": "34742146-a480-44fc-b390-8e14a99c1683"}}, "tool_stdout": "INFO [2021-11-06 18:10:18,969]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:18,981]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:22,537]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/272/tmp/lofreq2_call_parallelyffp42dv/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "INFO [2021-11-06 18:10:18,969]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:18,981]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:22,537]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/272/tmp/lofreq2_call_parallelyffp42dv/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:10:22", "plugin": "core", "name": "end_epoch", "raw_value": "1636222222.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:18", "plugin": "core", "name": "start_epoch", "raw_value": "1636222218.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call", "tool_version": "2.1.5+galaxy1", "test_index": 2, "time_seconds": 47.669750452041626, "inputs": {"reads": {"src": "hda", "id": "4cf226020c69133e"}, "reference_source|ref": {"src": "hda", "id": "5096f05886795ab7"}, "reference_source|ref_selector": "history", "call_control|source_qual|use_src_qual|def_nm_q": "40", "call_control|source_qual|use_src_qual|ign_vcf": {"src": "hda", "id": "bdcc0545a6427556"}, "call_control|source_qual|use_src_qual|src_qual": "--src-qual", "call_control|set_call_options": "yes"}, "job": {"model_class": "Job", "id": "d494a7fab362f196", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:10:59.179449", "create_time": "2021-11-06T18:10:28.991583", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-rmxzh", "command_line": "ln -s '/galaxy/server/database/objects/6/9/d/dataset_69da1607-5eef-40f9-a497-81c5caef109f.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  ln -s '/galaxy/server/database/objects/0/9/5/dataset_0950a632-cc05-4357-b414-ec98cb95479a.dat' reads.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/b/c/8/metadata_bc819c29-71c6-4658-b7f5-72bc15776690.dat' reads.bam.bai && ln -s '/galaxy/server/database/objects/8/4/e/dataset_84e6e558-c654-4771-b302-0b41d315a602.dat' ign0.vcf &&   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref 'reference.fa' --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf 'ign0.vcf' --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2>&1  || (tool_exit_code=$? && cat \"$TMPDIR/lofreq2_call_parallel*/*.log\" 1>&2 && exit $tool_exit_code)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}", "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": \"false\"}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 353, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}", "variant_types": "\"\"", "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "4cf226020c69133e", "src": "hda", "uuid": "0950a632-cc05-4357-b414-ec98cb95479a"}, "ref": {"id": "5096f05886795ab7", "src": "hda", "uuid": "69da1607-5eef-40f9-a497-81c5caef109f"}, "call_control|source_qual|ign_vcf": {"id": "bdcc0545a6427556", "src": "hda", "uuid": "84e6e558-c654-4771-b302-0b41d315a602"}}, "outputs": {"variants": {"id": "fd0dac7577936e22", "src": "hda", "uuid": "b80b99da-e48f-4a34-aa69-c54e36840b31"}}, "tool_stdout": "INFO [2021-11-06 18:10:52,990]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:53,001]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:56,790]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/282/tmp/lofreq2_call_parallelyi08bcgt/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "INFO [2021-11-06 18:10:52,990]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2021-11-06 18:10:53,001]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:10:56,790]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/282/tmp/lofreq2_call_parallelyi08bcgt/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:10:56", "plugin": "core", "name": "end_epoch", "raw_value": "1636222256.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:52", "plugin": "core", "name": "start_epoch", "raw_value": "1636222252.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call", "tool_version": "2.1.5+galaxy1", "test_index": 3, "time_seconds": 51.309476137161255, "inputs": {"reads": {"src": "hda", "id": "4cf226020c69133e"}, "reference_source|ref": {"src": "hda", "id": "5096f05886795ab7"}, "reference_source|ref_selector": "history", "filter_control|filter_type": "set_all_off"}, "job": {"model_class": "Job", "id": "54e96dfda3eaea2f", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:03.935867", "create_time": "2021-11-06T18:10:40.215011", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-q7zbb", "command_line": "ln -s '/galaxy/server/database/objects/6/9/d/dataset_69da1607-5eef-40f9-a497-81c5caef109f.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  ln -s '/galaxy/server/database/objects/0/9/5/dataset_0950a632-cc05-4357-b414-ec98cb95479a.dat' reads.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/b/c/8/metadata_bc819c29-71c6-4658-b7f5-72bc15776690.dat' reads.bam.bai &&   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref 'reference.fa' --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2>&1  || (tool_exit_code=$? && cat \"$TMPDIR/lofreq2_call_parallel*/*.log\" 1>&2 && exit $tool_exit_code)  && ln -s variants.vcf variants.vcf.gz && gzip -df variants.vcf.gz", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}", "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}", "variant_types": "\"\"", "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "4cf226020c69133e", "src": "hda", "uuid": "0950a632-cc05-4357-b414-ec98cb95479a"}, "ref": {"id": "5096f05886795ab7", "src": "hda", "uuid": "69da1607-5eef-40f9-a497-81c5caef109f"}}, "outputs": {"variants": {"id": "55eb754238aa5e33", "src": "hda", "uuid": "c0128f7f-69a5-40fa-8b33-db0a96bdff45"}}, "tool_stdout": "INFO [2021-11-06 18:10:59,256]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2021-11-06 18:10:59,269]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:11:02,858]: Copying concatenated vcf file to final destination\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "INFO [2021-11-06 18:10:59,256]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2021-11-06 18:10:59,269]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2021-11-06 18:11:02,858]: Copying concatenated vcf file to final destination\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:11:02", "plugin": "core", "name": "end_epoch", "raw_value": "1636222262.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:59", "plugin": "core", "name": "start_epoch", "raw_value": "1636222259.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call", "tool_version": "2.1.5+galaxy1", "test_index": 4, "time_seconds": 39.31274771690369, "inputs": {"reads": {"src": "hda", "id": "35a32d7a747e14e4"}, "reference_source|ref": {"src": "hda", "id": "5096f05886795ab7"}, "reference_source|ref_selector": "history", "variant_types": "--call-indels --only-indels", "filter_control|filter_type": "set_all_off"}, "job": {"model_class": "Job", "id": "0ca2b47b7c8a643a", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:03.925199", "create_time": "2021-11-06T18:10:43.654280", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-v5ghz", "command_line": "ln -s '/galaxy/server/database/objects/6/9/d/dataset_69da1607-5eef-40f9-a497-81c5caef109f.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  ln -s '/galaxy/server/database/objects/0/b/3/dataset_0b328452-0d1c-4f26-8078-ebdb05d8cf6f.dat' reads.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/2/5/2/metadata_252e4343-725a-4ea4-a45e-5f0317aa8cd8.dat' reads.bam.bai &&   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref 'reference.fa' --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2>&1  || (tool_exit_code=$? && cat \"$TMPDIR/lofreq2_call_parallel*/*.log\" 1>&2 && exit $tool_exit_code)  && ln -s variants.vcf variants.vcf.gz && gzip -df variants.vcf.gz", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}", "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}", "variant_types": "\"--call-indels --only-indels\"", "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "35a32d7a747e14e4", "src": "hda", "uuid": "0b328452-0d1c-4f26-8078-ebdb05d8cf6f"}, "ref": {"id": "5096f05886795ab7", "src": "hda", "uuid": "69da1607-5eef-40f9-a497-81c5caef109f"}}, "outputs": {"variants": {"id": "9565fad70567d9e3", "src": "hda", "uuid": "bfa703a1-0b98-4ba5-b797-2cce13805d5b"}}, "tool_stdout": "INFO [2021-11-06 18:10:56,500]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2021-11-06 18:10:56,514]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2021-11-06 18:11:02,057]: Copying concatenated vcf file to final destination\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "INFO [2021-11-06 18:10:56,500]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2021-11-06 18:10:56,514]: Adding 3 commands to mp-pool\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2021-11-06 18:11:02,057]: Copying concatenated vcf file to final destination\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "6 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "6.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:11:02", "plugin": "core", "name": "end_epoch", "raw_value": "1636222262.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:10:56", "plugin": "core", "name": "start_epoch", "raw_value": "1636222256.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter", "tool_version": "2.1.5+galaxy0", "test_index": 0, "time_seconds": 29.853546857833862, "inputs": {"invcf": {"src": "hda", "id": "40eb804dc8dc67b8"}, "filter_by_type|qual|snvqual_filter|snvqual_thresh": "38", "filter_by_type|qual|snvqual_filter|snvqual": "min-phred", "filter_by_type|qual|indelqual_filter|indelqual_thresh": "20", "filter_by_type|qual|indelqual_filter|indelqual": "min-phred"}, "job": {"model_class": "Job", "id": "c2c382cb8793a9d5", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:02.198930", "create_time": "2021-11-06T18:11:42.303696", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-c9j4b", "command_line": "lofreq filter -i /galaxy/server/database/objects/6/0/3/dataset_603c4b39-6a60-42ca-84ac-f80d4c02ed4e.dat --no-defaults --verbose   -Q 38 -K 20 -v 10 -V 0 -a 0.0 -A 0.0 -b fdr -c 0.001   -o filtered.vcf", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "flag_or_drop": "\"\"", "sb": "{\"sb_filter\": {\"__current_case__\": 2, \"sb_alpha\": \"0.001\", \"sb_compound\": \"true\", \"sb_indels\": \"false\", \"sb_mtc\": \"fdr\", \"strand_bias\": \"mtc\"}}", "af": "{\"af_max\": \"0.0\", \"af_min\": \"0.0\"}", "coverage": "{\"cov_max\": \"0\", \"cov_min\": \"10\"}", "filter_by_type": "{\"__current_case__\": 0, \"keep_only\": \"\", \"qual\": {\"indelqual_filter\": {\"__current_case__\": 1, \"indelqual\": \"min-phred\", \"indelqual_thresh\": \"20\"}, \"snvqual_filter\": {\"__current_case__\": 1, \"snvqual\": \"min-phred\", \"snvqual_thresh\": \"38\"}}}"}, "inputs": {"invcf": {"id": "40eb804dc8dc67b8", "src": "hda", "uuid": "603c4b39-6a60-42ca-84ac-f80d4c02ed4e"}}, "outputs": {"outvcf": {"id": "dc0ed3379fd418f5", "src": "hda", "uuid": "2baa8af0-8f02-4872-9e73-b4a99449df99"}}, "tool_stdout": "", "tool_stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "job_stdout": "", "job_stderr": "", "stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:59", "plugin": "core", "name": "end_epoch", "raw_value": "1636222319.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:59", "plugin": "core", "name": "start_epoch", "raw_value": "1636222319.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter", "tool_version": "2.1.5+galaxy0", "test_index": 1, "time_seconds": 25.273001432418823, "inputs": {"invcf": {"src": "hda", "id": "40eb804dc8dc67b8"}, "filter_by_type|qual|snvqual_filter|snvqual_alpha": "0.01", "filter_by_type|qual|snvqual_filter|snvqual_mtc": "bonf", "filter_by_type|qual|snvqual_filter|snvqual_ntests": "66", "filter_by_type|qual|snvqual_filter|snvqual": "mtc", "filter_by_type|keep_only": "--only-snvs"}, "job": {"model_class": "Job", "id": "61aca3e2d76bfab8", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:59.994608", "create_time": "2021-11-06T18:11:46.225575", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-j85rl", "command_line": "lofreq filter -i /galaxy/server/database/objects/6/0/3/dataset_603c4b39-6a60-42ca-84ac-f80d4c02ed4e.dat --no-defaults --verbose  --only-snvs -q bonf -r 0.01 -s 66 -v 10 -V 0 -a 0.0 -A 0.0 -b fdr -c 0.001   -o filtered.vcf", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "flag_or_drop": "\"\"", "sb": "{\"sb_filter\": {\"__current_case__\": 2, \"sb_alpha\": \"0.001\", \"sb_compound\": \"true\", \"sb_indels\": \"false\", \"sb_mtc\": \"fdr\", \"strand_bias\": \"mtc\"}}", "af": "{\"af_max\": \"0.0\", \"af_min\": \"0.0\"}", "coverage": "{\"cov_max\": \"0\", \"cov_min\": \"10\"}", "filter_by_type": "{\"__current_case__\": 1, \"keep_only\": \"--only-snvs\", \"qual\": {\"snvqual_filter\": {\"__current_case__\": 2, \"snvqual\": \"mtc\", \"snvqual_alpha\": \"0.01\", \"snvqual_mtc\": \"bonf\", \"snvqual_ntests\": \"66\"}}}"}, "inputs": {"invcf": {"id": "40eb804dc8dc67b8", "src": "hda", "uuid": "603c4b39-6a60-42ca-84ac-f80d4c02ed4e"}}, "outputs": {"outvcf": {"id": "5fa319ffe1eeafc5", "src": "hda", "uuid": "50ec0a0f-596d-4de9-ab08-adc523448108"}}, "tool_stdout": "", "tool_stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "job_stdout": "", "job_stderr": "", "stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:56", "plugin": "core", "name": "end_epoch", "raw_value": "1636222316.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:56", "plugin": "core", "name": "start_epoch", "raw_value": "1636222316.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter", "tool_version": "2.1.5+galaxy0", "test_index": 2, "time_seconds": 26.47445774078369, "inputs": {"invcf": {"src": "hda", "id": "40eb804dc8dc67b8"}, "filter_by_type|qual|snvqual_filter|snvqual_thresh": "38", "filter_by_type|qual|snvqual_filter|snvqual": "min-phred", "filter_by_type|qual|indelqual_filter|indelqual_thresh": "20", "filter_by_type|qual|indelqual_filter|indelqual": "min-phred", "flag_or_drop": "--print-all"}, "job": {"model_class": "Job", "id": "d0ce1d96168e4a11", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:12:04.419291", "create_time": "2021-11-06T18:11:50.924329", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-pptvq", "command_line": "lofreq filter -i /galaxy/server/database/objects/6/0/3/dataset_603c4b39-6a60-42ca-84ac-f80d4c02ed4e.dat --no-defaults --verbose --print-all  -Q 38 -K 20 -v 10 -V 0 -a 0.0 -A 0.0 -b fdr -c 0.001   -o filtered.vcf", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "flag_or_drop": "\"--print-all\"", "sb": "{\"sb_filter\": {\"__current_case__\": 2, \"sb_alpha\": \"0.001\", \"sb_compound\": \"true\", \"sb_indels\": \"false\", \"sb_mtc\": \"fdr\", \"strand_bias\": \"mtc\"}}", "af": "{\"af_max\": \"0.0\", \"af_min\": \"0.0\"}", "coverage": "{\"cov_max\": \"0\", \"cov_min\": \"10\"}", "filter_by_type": "{\"__current_case__\": 0, \"keep_only\": \"\", \"qual\": {\"indelqual_filter\": {\"__current_case__\": 1, \"indelqual\": \"min-phred\", \"indelqual_thresh\": \"20\"}, \"snvqual_filter\": {\"__current_case__\": 1, \"snvqual\": \"min-phred\", \"snvqual_thresh\": \"38\"}}}"}, "inputs": {"invcf": {"id": "40eb804dc8dc67b8", "src": "hda", "uuid": "603c4b39-6a60-42ca-84ac-f80d4c02ed4e"}}, "outputs": {"outvcf": {"id": "1620b6f7324e3461", "src": "hda", "uuid": "81f296cf-abde-4edf-96cc-4f23ba08bcdf"}}, "tool_stdout": "", "tool_stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "job_stdout": "", "job_stderr": "", "stderr": "Skipping default settings\nAt least one type of multiple testing correction requested. Doing first pass of vcf\nMTC application completed\nSuccessful exit.\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:12:02", "plugin": "core", "name": "end_epoch", "raw_value": "1636222322.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:12:02", "plugin": "core", "name": "start_epoch", "raw_value": "1636222322.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual", "tool_version": "2.1.5+galaxy0", "test_index": 0, "time_seconds": 33.89847922325134, "inputs": {"reads": {"src": "hda", "id": "418509ab4418e25f"}, "strategy|insertions": "20", "strategy|deletions": "30", "strategy|selector": "uniform"}, "job": {"model_class": "Job", "id": "c8277d816e54d7b1", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:37.622322", "create_time": "2021-11-06T18:11:20.743832", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-d6828", "command_line": "lofreq indelqual --uniform 20,30 -o output.bam /galaxy/server/database/objects/b/9/8/dataset_b98b56a1-7340-49c3-87f2-0990ed01d587.dat", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strategy": "{\"__current_case__\": 0, \"deletions\": \"30\", \"insertions\": \"20\", \"selector\": \"uniform\"}"}, "inputs": {"reads": {"id": "418509ab4418e25f", "src": "hda", "uuid": "b98b56a1-7340-49c3-87f2-0990ed01d587"}}, "outputs": {"output": {"id": "3510e8638278bcbf", "src": "hda", "uuid": "a0b7a6be-073c-4edf-833c-8353292d5fc8"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:36", "plugin": "core", "name": "end_epoch", "raw_value": "1636222296.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:36", "plugin": "core", "name": "start_epoch", "raw_value": "1636222296.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual", "tool_version": "2.1.5+galaxy0", "test_index": 1, "time_seconds": 28.03244948387146, "inputs": {"reads": {"src": "hda", "id": "418509ab4418e25f"}, "strategy|reference_source|ref": {"src": "hda", "id": "f34b64fd05229347"}, "strategy|reference_source|ref_selector": "history", "strategy|selector": "dindel"}, "job": {"model_class": "Job", "id": "be6da315f90cfa2c", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:32.223916", "create_time": "2021-11-06T18:11:22.157620", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-cj2bl", "command_line": "ln -s '/galaxy/server/database/objects/8/8/f/dataset_88f03def-3132-49ff-a7f6-9dbc09a749b3.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq indelqual --dindel --ref reference.fa -o output.bam /galaxy/server/database/objects/b/9/8/dataset_b98b56a1-7340-49c3-87f2-0990ed01d587.dat", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strategy": "{\"__current_case__\": 1, \"reference_source\": {\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 368, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}, \"selector\": \"dindel\"}"}, "inputs": {"reads": {"id": "418509ab4418e25f", "src": "hda", "uuid": "b98b56a1-7340-49c3-87f2-0990ed01d587"}, "strategy|ref": {"id": "f34b64fd05229347", "src": "hda", "uuid": "88f03def-3132-49ff-a7f6-9dbc09a749b3"}}, "outputs": {"output": {"id": "d2611a37af638fd7", "src": "hda", "uuid": "0abaa3ef-b1f4-44e2-866f-c503bb3b005a"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:28", "plugin": "core", "name": "end_epoch", "raw_value": "1636222288.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:28", "plugin": "core", "name": "start_epoch", "raw_value": "1636222288.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual", "tool_version": "2.1.5+galaxy0", "test_index": 2, "time_seconds": 34.395676374435425, "inputs": {"reads": {"src": "hda", "id": "418509ab4418e25f"}, "strategy|insertions": "20", "strategy|selector": "uniform"}, "job": {"model_class": "Job", "id": "e442ba01b4ba6e36", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:38.660595", "create_time": "2021-11-06T18:11:22.825609", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-cxmvp", "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/b/9/8/dataset_b98b56a1-7340-49c3-87f2-0990ed01d587.dat", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"}, "inputs": {"reads": {"id": "418509ab4418e25f", "src": "hda", "uuid": "b98b56a1-7340-49c3-87f2-0990ed01d587"}}, "outputs": {"output": {"id": "13ed80b359e510c3", "src": "hda", "uuid": "e5782f06-23e3-4c63-8bfb-d6ad5118fa8d"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:37", "plugin": "core", "name": "end_epoch", "raw_value": "1636222297.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:37", "plugin": "core", "name": "start_epoch", "raw_value": "1636222297.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi", "tool_version": "2.1.5+galaxy0", "test_index": 0, "time_seconds": 39.60901427268982, "inputs": {"reads": {"src": "hda", "id": "4cf226020c69133e"}, "reference_source|ref": {"src": "hda", "id": "5096f05886795ab7"}, "reference_source|ref_selector": "history"}, "job": {"model_class": "Job", "id": "9e3ed10277966b93", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:03.952100", "create_time": "2021-11-06T18:10:47.569385", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-6sq28", "command_line": "ln -s '/galaxy/server/database/objects/6/9/d/dataset_69da1607-5eef-40f9-a497-81c5caef109f.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq viterbi --ref 'reference.fa'  --defqual 2 --out tmp.bam '/galaxy/server/database/objects/0/9/5/dataset_0950a632-cc05-4357-b414-ec98cb95479a.dat' &&  samtools sort --no-PG -T \"${TMPDIR:-.}\" -@ ${GALAXY_SLOTS:-1} -O BAM -o '/galaxy/server/database/objects/5/a/a/dataset_5aaf2b3d-bc0a-4636-88a6-7364382438ff.dat' tmp.bam", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv_options": "{\"bq2_handling\": {\"__current_case__\": 0, \"defqual\": \"2\", \"replace_bq2\": \"keep\"}, \"keepflags\": \"false\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "4cf226020c69133e", "src": "hda", "uuid": "0950a632-cc05-4357-b414-ec98cb95479a"}, "ref": {"id": "5096f05886795ab7", "src": "hda", "uuid": "69da1607-5eef-40f9-a497-81c5caef109f"}}, "outputs": {"realigned": {"id": "9ebcc16a1741f9b3", "src": "hda", "uuid": "5aaf2b3d-bc0a-4636-88a6-7364382438ff"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:01", "plugin": "core", "name": "end_epoch", "raw_value": "1636222261.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:01", "plugin": "core", "name": "start_epoch", "raw_value": "1636222261.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi", "tool_version": "2.1.5+galaxy0", "test_index": 1, "time_seconds": 35.36408448219299, "inputs": {"reads": {"src": "hda", "id": "418509ab4418e25f"}, "reference_source|ref": {"src": "hda", "id": "f34b64fd05229347"}, "reference_source|ref_selector": "history", "adv_options|keepflags": true}, "job": {"model_class": "Job", "id": "545924d6a1c02b0b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:11:34.353736", "create_time": "2021-11-06T18:11:11.403682", "galaxy_version": "21.05", "command_version": "2.1.5\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-crc7b", "command_line": "ln -s '/galaxy/server/database/objects/8/8/f/dataset_88f03def-3132-49ff-a7f6-9dbc09a749b3.dat' reference.fa && lofreq faidx reference.fa 2>&1 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" >&2 &&  lofreq viterbi --ref 'reference.fa' --keepflags --defqual 2 --out tmp.bam '/galaxy/server/database/objects/b/9/8/dataset_b98b56a1-7340-49c3-87f2-0990ed01d587.dat' &&  samtools sort --no-PG -T \"${TMPDIR:-.}\" -@ ${GALAXY_SLOTS:-1} -O BAM -o '/galaxy/server/database/objects/9/a/a/dataset_9aa51aa9-eab1-4d77-95c5-fb290e18eeb8.dat' tmp.bam", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv_options": "{\"bq2_handling\": {\"__current_case__\": 0, \"defqual\": \"2\", \"replace_bq2\": \"keep\"}, \"keepflags\": \"true\"}", "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 368, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"}, "inputs": {"reads": {"id": "418509ab4418e25f", "src": "hda", "uuid": "b98b56a1-7340-49c3-87f2-0990ed01d587"}, "ref": {"id": "f34b64fd05229347", "src": "hda", "uuid": "88f03def-3132-49ff-a7f6-9dbc09a749b3"}}, "outputs": {"realigned": {"id": "5e907aaf92206aee", "src": "hda", "uuid": "9aa51aa9-eab1-4d77-95c5-fb290e18eeb8"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:11:31", "plugin": "core", "name": "end_epoch", "raw_value": "1636222291.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:11:31", "plugin": "core", "name": "start_epoch", "raw_value": "1636222291.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 0, "time_seconds": 20.040120840072632, "inputs": {"readFile": {"src": "hda", "id": "8bd1c93f35109715"}, "paf": {"src": "hda", "id": "5f3146a20b0e9365"}}, "job": {"model_class": "Job", "id": "5399cb72d486a69b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:09:10.573495", "create_time": "2021-11-06T18:08:59.459376", "galaxy_version": "21.05", "command_version": "0.3-r179\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-crmmm", "command_line": "miniasm -f '/galaxy/server/database/objects/3/1/9/dataset_319ce599-8e32-4532-8294-962b45765662.dat' -m '100' -i '0.05' -s '1000' -c '3' -o '1000' -h '1000' -I '0.08' -g '1000' -d '50000' -e '4' -n '3' -F '0.8' '/galaxy/server/database/objects/4/0/0/dataset_4003029d-369c-4ffb-bdfe-135385c66d17.dat' > '/galaxy/server/database/objects/1/b/9/dataset_1b9c4891-c76c-459e-97e1-801b55ef36a9.dat'", "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.8\", \"maxBubDist\": \"50000\", \"maxGapDiff\": \"1000\", \"minUtgSize\": \"4\", \"nRounds\": \"3\"}", "overlapping": "{\"intThres\": \"0.08\", \"maxHang\": \"1000\", \"minOvlp\": \"1000\"}", "preselection": "{\"minCov\": \"3\", \"minIden\": \"0.05\", \"minMatch\": \"100\", \"minSpan\": \"1000\"}"}, "inputs": {"readFile": {"id": "8bd1c93f35109715", "src": "hda", "uuid": "319ce599-8e32-4532-8294-962b45765662"}, "paf": {"id": "5f3146a20b0e9365", "src": "hda", "uuid": "4003029d-369c-4ffb-bdfe-135385c66d17"}}, "outputs": {"gfa": {"id": "9da6469cf3c496c7", "src": "hda", "uuid": "1b9c4891-c76c-459e-97e1-801b55ef36a9"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.207*1.00] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.227*1.00] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.232*1.00] 161122 hits remain after cut\n[M::ma_hit_flt::0.235*1.00] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.244*1.00] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.248*1.00] 152071 hits remain after cut\n[M::ma_hit_contained::0.253*1.00] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/3/1/9/dataset_319ce599-8e32-4532-8294-962b45765662.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/4/0/0/dataset_4003029d-369c-4ffb-bdfe-135385c66d17.dat\n[M::main] Real time: 0.268 sec; CPU: 0.267 sec\n", "stderr": "\n[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.207*1.00] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.227*1.00] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.232*1.00] 161122 hits remain after cut\n[M::ma_hit_flt::0.235*1.00] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.244*1.00] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.248*1.00] 152071 hits remain after cut\n[M::ma_hit_contained::0.253*1.00] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/3/1/9/dataset_319ce599-8e32-4532-8294-962b45765662.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/4/0/0/dataset_4003029d-369c-4ffb-bdfe-135385c66d17.dat\n[M::main] Real time: 0.268 sec; CPU: 0.267 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 18:09:09", "plugin": "core", "name": "end_epoch", "raw_value": "1636222149.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:09:08", "plugin": "core", "name": "start_epoch", "raw_value": "1636222148.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 1, "time_seconds": 20.054401636123657, "inputs": {"readFile": {"src": "hda", "id": "c94bdeadfbbe6cf7"}, "paf": {"src": "hda", "id": "b2fe6d64f8a30bed"}, "preselection|minMatch": "99", "preselection|minIden": "0.04", "preselection|minSpan": "999", "preselection|minCov": "2", "overlapping|minOvlp": "999", "overlapping|maxHang": "999", "overlapping|intThres": "0.7", "graph|maxGapDiff": "999", "graph|maxBubDist": "45000", "graph|minUtgSize": "3", "graph|nRounds": "2", "graph|finalDropRatio": "0.7"}, "job": {"model_class": "Job", "id": "5c0b618e184a924b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T18:09:30.538780", "create_time": "2021-11-06T18:09:21.746870", "galaxy_version": "21.05", "command_version": "0.3-r179\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "1787f5936be7ca45", "external_id": "gxy-td46n", "command_line": "miniasm -f '/galaxy/server/database/objects/2/0/5/dataset_2056ef4d-d67c-4d57-877c-cedd3616a996.dat' -m '99' -i '0.04' -s '999' -c '2' -o '999' -h '999' -I '0.7' -g '999' -d '45000' -e '3' -n '2' -F '0.7' '/galaxy/server/database/objects/9/f/3/dataset_9f33f81d-d830-4287-93a3-2c59a1e272d3.dat' > '/galaxy/server/database/objects/d/0/9/dataset_d0936db9-8db7-4d9e-9f1d-9c1d7e21aad6.dat'", "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.7\", \"maxBubDist\": \"45000\", \"maxGapDiff\": \"999\", \"minUtgSize\": \"3\", \"nRounds\": \"2\"}", "overlapping": "{\"intThres\": \"0.7\", \"maxHang\": \"999\", \"minOvlp\": \"999\"}", "preselection": "{\"minCov\": \"2\", \"minIden\": \"0.04\", \"minMatch\": \"99\", \"minSpan\": \"999\"}"}, "inputs": {"readFile": {"id": "c94bdeadfbbe6cf7", "src": "hda", "uuid": "2056ef4d-d67c-4d57-877c-cedd3616a996"}, "paf": {"id": "b2fe6d64f8a30bed", "src": "hda", "uuid": "9f33f81d-d830-4287-93a3-2c59a1e272d3"}}, "outputs": {"gfa": {"id": "20f9fe45119b8d47", "src": "hda", "uuid": "d0936db9-8db7-4d9e-9f1d-9c1d7e21aad6"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.240*1.00] read 100000 hits; stored 187766 hits and 12068 sequences (111355211 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.261*1.00] 10122 query sequences remain after sub\n[M::ma_hit_cut::0.265*1.00] 171862 hits remain after cut\n[M::ma_hit_flt::0.268*1.00] 165533 hits remain after filtering; crude coverage after filtering: 11.51\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.278*1.00] 9994 query sequences remain after sub\n[M::ma_hit_cut::0.281*1.00] 163595 hits remain after cut\n[M::ma_hit_contained::0.288*1.00] 1772 sequences and 10061 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 9758 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4694 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 484 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 282 tips\n[M::asg_pop_bubble] popped 173 bubbles and trimmed 6 tips\n[M::main] ===> Step 4.3: cutting short overlaps (2 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 26 asymmetric arcs\n[M::asg_arc_del_short] removed 38 short overlaps\n[M::asg_cut_tip] cut 53 tips\n[M::asg_pop_bubble] popped 8 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 2 asymmetric arcs\n[M::asg_arc_del_short] removed 2 short overlaps\n[M::asg_cut_tip] cut 2 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/2/0/5/dataset_2056ef4d-d67c-4d57-877c-cedd3616a996.dat -m 99 -i 0.04 -s 999 -c 2 -o 999 -h 999 -I 0.7 -g 999 -d 45000 -e 3 -n 2 -F 0.7 /galaxy/server/database/objects/9/f/3/dataset_9f33f81d-d830-4287-93a3-2c59a1e272d3.dat\n[M::main] Real time: 0.310 sec; CPU: 0.306 sec\n", "stderr": "\n[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.240*1.00] read 100000 hits; stored 187766 hits and 12068 sequences (111355211 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.261*1.00] 10122 query sequences remain after sub\n[M::ma_hit_cut::0.265*1.00] 171862 hits remain after cut\n[M::ma_hit_flt::0.268*1.00] 165533 hits remain after filtering; crude coverage after filtering: 11.51\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.278*1.00] 9994 query sequences remain after sub\n[M::ma_hit_cut::0.281*1.00] 163595 hits remain after cut\n[M::ma_hit_contained::0.288*1.00] 1772 sequences and 10061 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 9758 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4694 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 484 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 282 tips\n[M::asg_pop_bubble] popped 173 bubbles and trimmed 6 tips\n[M::main] ===> Step 4.3: cutting short overlaps (2 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 26 asymmetric arcs\n[M::asg_arc_del_short] removed 38 short overlaps\n[M::asg_cut_tip] cut 53 tips\n[M::asg_pop_bubble] popped 8 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 2 asymmetric arcs\n[M::asg_arc_del_short] removed 2 short overlaps\n[M::asg_cut_tip] cut 2 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/2/0/5/dataset_2056ef4d-d67c-4d57-877c-cedd3616a996.dat -m 99 -i 0.04 -s 999 -c 2 -o 999 -h 999 -I 0.7 -g 999 -d 45000 -e 3 -n 2 -F 0.7 /galaxy/server/database/objects/9/f/3/dataset_9f33f81d-d830-4287-93a3-2c59a1e272d3.dat\n[M::main] Real time: 0.310 sec; CPU: 0.306 sec\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 18:09:28", "plugin": "core", "name": "end_epoch", "raw_value": "1636222168.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 18:09:28", "plugin": "core", "name": "start_epoch", "raw_value": "1636222168.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 0, "time_seconds": 35.38818073272705, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "9d6de28f6c18cda0"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "67995c650c211786"}, "fastq_input|analysis_type_selector": "sr", "fastq_input|fastq_input_selector": "single"}, "job": {"model_class": "Job", "id": "29df294e24930a90", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:31:29.935767", "create_time": "2021-11-06T16:31:11.045397", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-wqxcf", "command_line": "ln -f -s '/galaxy/server/database/objects/6/9/7/dataset_697a5b1b-9135-492b-a190-102ada5a3a7c.dat' reference.fa && minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/e/8/6/dataset_e862f12b-f52f-406d-b748-b602b5caafc3.dat' -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o '/galaxy/server/database/objects/e/3/2/dataset_e32c35de-a0d2-449c-9b97-9b793ec8e445.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 116, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 115, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "9d6de28f6c18cda0", "src": "hda", "uuid": "697a5b1b-9135-492b-a190-102ada5a3a7c"}, "fastq_input1": {"id": "67995c650c211786", "src": "hda", "uuid": "e862f12b-f52f-406d-b748-b602b5caafc3"}}, "outputs": {"alignment_output": {"id": "7221a99692ef4a1b", "src": "hda", "uuid": "e32c35de-a0d2-449c-9b97-9b793ec8e445"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.006*0.53] collected minimizers\n[M::mm_idx_gen::0.008*0.73] sorted minimizers\n[M::main::0.008*0.73] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.008*0.73] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.008*0.74] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.015*0.74] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/e/8/6/dataset_e862f12b-f52f-406d-b748-b602b5caafc3.dat\n[M::main] Real time: 0.017 sec; CPU: 0.012 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\n[M::mm_idx_gen::0.006*0.53] collected minimizers\n[M::mm_idx_gen::0.008*0.73] sorted minimizers\n[M::main::0.008*0.73] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.008*0.73] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.008*0.74] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.015*0.74] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/e/8/6/dataset_e862f12b-f52f-406d-b748-b602b5caafc3.dat\n[M::main] Real time: 0.017 sec; CPU: 0.012 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:31:28", "plugin": "core", "name": "end_epoch", "raw_value": "1636216288.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:31:28", "plugin": "core", "name": "start_epoch", "raw_value": "1636216288.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ogp_je4o.sam v. /tmp/history_bam_converted_to_sam_717h50kz.sam )\n--- local_file\n+++ history_data\n@@ -1,171 +1,171 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_19.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t*\t0\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\t*\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:18422:19051/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t*\t0\t0\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t*\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t*\t0\t0\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\t*\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:200\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:18842:24844/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\t*\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t*\t0\t0\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\t*\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:200\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5983:21093/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1102:7765:18353/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t*\t0\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\t*\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t*\t0\t0\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\t*\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:142\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:14060:21273/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S156M15S\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTACTGTCTCTTATACAC\t*\tNM:i:1\tms:i:302\tAS:i:302\tnn:i:0\ttp:A:P\tcm:i:22\ts1:i:150\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:14528:12993/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGAT\t*\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:17657:20856/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t90S161M\t*\t0\t0\tAAAGCGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTAT\t*\tNM:i:1\tms:i:312\tAS:i:312\tnn:i:0\ttp:A:P\tcm:i:22\ts1:i:150\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16480,+,90M161S,60,2;\n-M01368:8:000000000-A3GHV:1:1103:25519:6301/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t18S184M49S\t*\t0\t0\tAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGCATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATTTCGT\t*\tNM:i:2\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:21\ts1:i:157\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1103:6074:6549/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t108S143M\t*\t0\t0\tTAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTG\t*\tNM:i:1\tms:i:276\tAS:i:276\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16462,+,108M143S,60,1;\n-M01368:8:000000000-A3GHV:1:1104:11572:8264/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1104:12288:20635/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\t*\tNM:i:3\tms:i:262\tAS:i:262\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:109\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1104:13832:4398/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t7S132M112S\t*\t0\t0\tCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGACAAAAAAAAACACACAACAACCAACACCCAGTAGACTAGTGCGTC\t*\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1110:15519:10008/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t12\t67M184H\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:124\tAS:i:124\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0149\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,67S184M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1110:16700:6843/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t12\t25H67M159H\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:124\tAS:i:124\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0149\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,92S159M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:16531/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t5\t59M192H\t*\t0\t0\tGGTTCCTACTTCAAGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACA\t*\tNM:i:2\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:31\ts2:i:0\tde:f:0.0339\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,67S184M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:8665:25542/1\t2048\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701/1\t2064\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:27103:7153/1\t2064\tgi|251831106|ref|NC_012920.1|\t16508\t12\t7H62M182H\t*\t0\t0\tCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:114\tAS:i:114\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0161\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,69S182M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233/1\t2048\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t*\t0\t0\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794/1\t2064\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t*\t0\t0\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:17564:15723/1\t2064\tgi|251831106|ref|NC_012920.1|\t16512\t12\t58M193H\t*\t0\t0\tTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:106\tAS:i:106\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0172\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,58S193M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t57M194H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:18714:24788/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t57M194H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490/1\t2048\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t*\t0\t0\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050/1\t2064\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t*\t0\t0\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:8763:7859/1\t2064\tgi|251831106|ref|NC_012920.1|\t16519\t19\t51M200H\t*\t0\t0\tGCATAAAGCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:100\tAS:i:100\tnn:i:0\ttp:A:P\tcm:i:4\ts1:i:38\ts2:i:0\tde:f:0.0196\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,51S200M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1113:5741:16959/1\t2064\tgi|251831106|ref|NC_012920.1|\t16519\t11\t51M200H\t*\t0\t0\tTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:92\tAS:i:92\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0196\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,51S200M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:13575:19255/1\t2064\tgi|251831106|ref|NC_012920.1|\t16520\t11\t50M201H\t*\t0\t0\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:16350:22621/1\t2064\tgi|251831106|ref|NC_012920.1|\t16520\t11\t50M201H\t*\t0\t0\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272/1\t2064\tgi|251831106|ref|NC_012920.1|\t16522\t11\t48M203H\t*\t0\t0\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145/1\t2048\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t*\t0\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258/1\t2048\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t5H43M203H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:19224:11655/1\t2048\tgi|251831106|ref|NC_012920.1|\t16530\t11\t40M211H\t*\t0\t0\tAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:80\tAS:i:80\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,40S186M25S,60,2;\trl:i:0\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 1, "time_seconds": 30.038772106170654, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "c621dd9bf91d4641"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "c921042567aea7b1"}, "fastq_input|analysis_type_selector": "sr", "fastq_input|fastq_input_selector": "single", "io_options|output_format": "CRAM"}, "job": {"model_class": "Job", "id": "1afa5eef1eeb7c53", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:31:44.260868", "create_time": "2021-11-06T16:31:24.946319", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-vbbj4", "command_line": "ln -f -s '/galaxy/server/database/objects/0/3/3/dataset_033cd0f6-0fff-413d-997f-65d2423b507c.dat' reference.fa && minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/9/d/c/dataset_9dc136cf-9948-46d2-a60b-b5cca25388cd.dat' -a | samtools sort -T \"${TMPDIR:-.}\" -@${GALAXY_SLOTS:-2} -O CRAM  --reference reference.fa --output-fmt-option no_ref -o '/galaxy/server/database/objects/4/8/f/dataset_48f2e4d7-fb02-4fe0-b6f2-62a17f25f7cb.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"CRAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "c621dd9bf91d4641", "src": "hda", "uuid": "033cd0f6-0fff-413d-997f-65d2423b507c"}, "fastq_input1": {"id": "c921042567aea7b1", "src": "hda", "uuid": "9dc136cf-9948-46d2-a60b-b5cca25388cd"}}, "outputs": {"alignment_output": {"id": "2c50ccbcb47ff15b", "src": "hda", "uuid": "48f2e4d7-fb02-4fe0-b6f2-62a17f25f7cb"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.003*0.73] collected minimizers\n[M::mm_idx_gen::0.005*0.60] sorted minimizers\n[M::main::0.005*0.60] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*0.60] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*0.62] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.009*1.02] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/9/d/c/dataset_9dc136cf-9948-46d2-a60b-b5cca25388cd.dat\n[M::main] Real time: 0.010 sec; CPU: 0.010 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\n[M::mm_idx_gen::0.003*0.73] collected minimizers\n[M::mm_idx_gen::0.005*0.60] sorted minimizers\n[M::main::0.005*0.60] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*0.60] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*0.62] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.009*1.02] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/9/d/c/dataset_9dc136cf-9948-46d2-a60b-b5cca25388cd.dat\n[M::main] Real time: 0.010 sec; CPU: 0.010 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:31:42", "plugin": "core", "name": "end_epoch", "raw_value": "1636216302.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:31:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216302.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 2, "time_seconds": 45.827744483947754, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "237fcb767ce57fb8"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "c2e6af9424c294ad"}, "fastq_input|fastq_input2": {"src": "hda", "id": "72a62f78ff35bb17"}, "fastq_input|fastq_input_selector": "paired"}, "job": {"model_class": "Job", "id": "97567e568d518623", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:32:05.201400", "create_time": "2021-11-06T16:31:39.303314", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-xgb44", "command_line": "ln -f -s '/galaxy/server/database/objects/c/9/a/dataset_c9a13927-1b07-4eb5-89d6-e14eaebc9227.dat' reference.fa && minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat' '/galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat' -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o '/galaxy/server/database/objects/c/b/c/dataset_cbc54fd7-bf58-4b73-b1b4-87e7fbafe55e.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 1, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "237fcb767ce57fb8", "src": "hda", "uuid": "c9a13927-1b07-4eb5-89d6-e14eaebc9227"}, "fastq_input1": {"id": "c2e6af9424c294ad", "src": "hda", "uuid": "7d155ba7-eb3a-416e-84a8-b6ecb2450ab1"}, "fastq_input2": {"id": "72a62f78ff35bb17", "src": "hda", "uuid": "81958fc7-c771-4533-8395-691f95e583b2"}}, "outputs": {"alignment_output": {"id": "722f48e736c6a3a8", "src": "hda", "uuid": "cbc54fd7-bf58-4b73-b1b4-87e7fbafe55e"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.003*0.89] collected minimizers\n[M::mm_idx_gen::0.005*0.99] sorted minimizers\n[M::main::0.005*0.99] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*0.99] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*0.99] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.019*1.35] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.021 sec; CPU: 0.026 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\n[M::mm_idx_gen::0.003*0.89] collected minimizers\n[M::mm_idx_gen::0.005*0.99] sorted minimizers\n[M::main::0.005*0.99] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*0.99] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*0.99] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.019*1.35] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.021 sec; CPU: 0.026 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:32:03", "plugin": "core", "name": "end_epoch", "raw_value": "1636216323.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:32:03", "plugin": "core", "name": "start_epoch", "raw_value": "1636216323.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_mfr8d20n.sam v. /tmp/history_bam_converted_to_sam_giakik68.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_12.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_13.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1>11111@11111A111A100000000////011110//>>/12@1@22B/////1@>21/>>/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t>A@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@<1>@FFFGHHHHFHEFGDABFFGG/@DCE<CG1<GF0/DD000=<DHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#>AABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA<@HFDG0HHGGHGBDFGFG<DDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11>>ABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA<.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF<GGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 3, "time_seconds": 44.67655086517334, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "237fcb767ce57fb8"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "4da082dc282c1659"}, "fastq_input|fastq_input2": {"src": "hda", "id": "72a62f78ff35bb17"}, "fastq_input|fastq_input_selector": "paired"}, "job": {"model_class": "Job", "id": "9277034ac98a58f3", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:32:08.464025", "create_time": "2021-11-06T16:31:50.372690", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-xd6ns", "command_line": "ln -f -s '/galaxy/server/database/objects/c/9/a/dataset_c9a13927-1b07-4eb5-89d6-e14eaebc9227.dat' reference.fa && minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/b/a/b/dataset_bab8f4d8-cb66-4cef-8d0e-3c18fd703bdd.dat' '/galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat' -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o '/galaxy/server/database/objects/0/c/9/dataset_0c92eeab-f2b9-4e28-b842-a153677feb39.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 1, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 132, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "237fcb767ce57fb8", "src": "hda", "uuid": "c9a13927-1b07-4eb5-89d6-e14eaebc9227"}, "fastq_input1": {"id": "4da082dc282c1659", "src": "hda", "uuid": "bab8f4d8-cb66-4cef-8d0e-3c18fd703bdd"}, "fastq_input2": {"id": "72a62f78ff35bb17", "src": "hda", "uuid": "81958fc7-c771-4533-8395-691f95e583b2"}}, "outputs": {"alignment_output": {"id": "2db3d6ec8382e531", "src": "hda", "uuid": "0c92eeab-f2b9-4e28-b842-a153677feb39"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.003*1.02] collected minimizers\n[M::mm_idx_gen::0.004*0.94] sorted minimizers\n[M::main::0.004*0.94] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*0.94] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*0.95] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.017*1.30] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/b/a/b/dataset_bab8f4d8-cb66-4cef-8d0e-3c18fd703bdd.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.018 sec; CPU: 0.023 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\n[M::mm_idx_gen::0.003*1.02] collected minimizers\n[M::mm_idx_gen::0.004*0.94] sorted minimizers\n[M::main::0.004*0.94] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*0.94] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*0.95] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.017*1.30] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/b/a/b/dataset_bab8f4d8-cb66-4cef-8d0e-3c18fd703bdd.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.018 sec; CPU: 0.023 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:32:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216326.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:32:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636216326.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ef3k6us6.sam v. /tmp/history_bam_converted_to_sam_yuxvhhoo.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_12.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_13.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1>11111@11111A111A100000000////011110//>>/12@1@22B/////1@>21/>>/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t>A@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@<1>@FFFGHHHHFHEFGDABFFGG/@DCE<CG1<GF0/DD000=<DHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#>AABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA<@HFDG0HHGGHGBDFGFG<DDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11>>ABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA<.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF<GGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 4, "time_seconds": 40.9049391746521, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "237fcb767ce57fb8"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hdca", "id": "1787f5936be7ca45"}, "fastq_input|fastq_input_selector": "paired_collection"}, "job": {"model_class": "Job", "id": "32c2a1210f75c550", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:32:10.844743", "create_time": "2021-11-06T16:31:58.491968", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-fvnfn", "command_line": "ln -f -s '/galaxy/server/database/objects/c/9/a/dataset_c9a13927-1b07-4eb5-89d6-e14eaebc9227.dat' reference.fa && minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat' '/galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat' -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o '/galaxy/server/database/objects/b/8/a/dataset_b8ac6e6e-a43a-471d-aede-c8ca48b20986.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 2, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "237fcb767ce57fb8", "src": "hda", "uuid": "c9a13927-1b07-4eb5-89d6-e14eaebc9227"}, "fastq_input11": {"id": "c2e6af9424c294ad", "src": "hda", "uuid": "7d155ba7-eb3a-416e-84a8-b6ecb2450ab1"}, "fastq_input12": {"id": "72a62f78ff35bb17", "src": "hda", "uuid": "81958fc7-c771-4533-8395-691f95e583b2"}}, "outputs": {"alignment_output": {"id": "98a0dc79ab1042aa", "src": "hda", "uuid": "b8ac6e6e-a43a-471d-aede-c8ca48b20986"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.004*0.93] collected minimizers\n[M::mm_idx_gen::0.006*0.94] sorted minimizers\n[M::main::0.006*0.94] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*0.94] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*0.94] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.020*1.47] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.022 sec; CPU: 0.030 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stderr": "\n[M::mm_idx_gen::0.004*0.93] collected minimizers\n[M::mm_idx_gen::0.006*0.94] sorted minimizers\n[M::main::0.006*0.94] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*0.94] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*0.94] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.020*1.47] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/7/d/1/dataset_7d155ba7-eb3a-416e-84a8-b6ecb2450ab1.dat /galaxy/server/database/objects/8/1/9/dataset_81958fc7-c771-4533-8395-691f95e583b2.dat\n[M::main] Real time: 0.022 sec; CPU: 0.030 sec; Peak RSS: 0.004 GB\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:32:08", "plugin": "core", "name": "end_epoch", "raw_value": "1636216328.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:32:08", "plugin": "core", "name": "start_epoch", "raw_value": "1636216328.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "output_problems": ["Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ikuc1pzo.sam v. /tmp/history_bam_converted_to_sam_0e47_cbb.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_16.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_17.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1>11111@11111A111A100000000////011110//>>/12@1@22B/////1@>21/>>/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/<@EFHEHH1GGHFFFHG1>=FGHFHGF.GE//-<BB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t>A@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@<1>@FFFGHHHHFHEFGDABFFGG/@DCE<CG1<GF0/DD000=<DHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#>AABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA<@HFDG0HHGGHGBDFGFG<DDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11>>ABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA<.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF<GGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 5, "time_seconds": 13.626928091049194, "inputs": {"reference_source|ref_file": "bwa-mem-mt-genome", "reference_source|reference_source_selector": "cached", "fastq_input|fastq_input1": {"src": "hda", "id": "0c25e32c406146e5"}, "fastq_input|analysis_type_selector": "sr", "fastq_input|fastq_input_selector": "single"}, "execution_problem": "parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: sacCer1,oryCun1,tetNig1,caeJap3,hg19_rCRS_pUC18_phiX174,Tcacao_1.0,ce10,galGal2canon,geoFor1,felCat5,monDom1,calJac3canon,panTro1canon,tupBel1,Amel_4.5,petMar1,droPer1,susScr1,echTel1,eschColi_K12,hg17,droEre2,triCas2,canFam1,hg38canon,lMaj5,sorAra1,hg19chrM,mm7canon,ailMel1,CpipJ1,cb3full,hg19,fr2,burkPseu_K96243,panTro2,droAna2,oryLat1,droVir2,caeJap2,AaegL1,Hydra_JCVI,oryza_sativa_japonica_nipponbare_IRGSP4.0,caePb1,venter1,susScr2,speTri2,eschColi_O157H7_EC4115,hg19chrX,mm7,mm8,Homo_sapiens_nuHg19_mtrCRS,strPur2,Sscrofa9.58,droMoj3,PhumU1,gasAcu1,caeRem4,criGri1,danRer10,ce5,xenTro1,caeRem3,apiMel3,braFlo1,micMur1,anoCar2,oviAri1,droMoj1,monDom5,gadMor1,droSim1,droAna3,papHam1,monDom4,hg38,caeJap1,melUnd1,galGal4,galGal3,susScr3,danRer7,taeGut1canon,Araly1,eschColi_CFT073,panTro1,calJac1,nomLeu2,droGri2,dm2,eschColi_O157H7,galGal2,hg19female,rn4,bosTauMd3,panTro3canon,baciSubt,dipOrd1,calJac3,aplCal1,Arabidopsis_thaliana_TAIR10,burkPseu_668,cavPor3,burkPseu_1106A,Xanthomonas_oryzae_KACC10331,rn5,canFam2,tetNig2canon,apiMel1,equCab1,mm9canon,danRer6,nomLeu3,otoGar1,myoLuc2,taeGut2,dp3,pseuAeru_PAO1,rheMac3,oryCun2,tarSyr1,IscaW1,vicPac1,oryLat2canon,vicPac2,Xanthomonas_oryzae_MAFF_311018,anoGam1,felCat4,phiX,apiMel2,eriEur1,mm9female,Homo_sapiens_AK1,Zea_mays_B73_RefGen_v2,mm10,otoGar3,droVir3,dm3,hg17canon,felCat4canon,strPur3,droSec1,borEut13,Tcas_3.0,ce2,bosTau2,burkPseu_1710B,ce3,ce9,mm9,priPac1,melGal1,dasNov3,hg18canon,Schizosaccharomyces_pombe_1.1,fr1,Bombyx_mori_p50T_2.0,droYak2,dasNov1,Arabidopsis_thaliana_TAIR9,galGal3canon,xenTro2,danRer2,danRer4,droWil1,Ptrichocarpa_156,rn4canon,bordBron,nomLeu1,eschColi_K12_DH10B,panTro4,Xanthomonas_oryzae_PXO99A,eschColi_O157H7_EDL933,pUC18,caeRem1,sacCer3,tetNig2,hg19canon,droYak1,anoCar1,mm8canon,cb3canon,oryLat2,caePb3,ci2canon,Spur_v2.6,pseuAeru_UCBPP_PA14,rheMac2,droVir1,allMis1,ornAna1,strePneu_R6,ce4,droAna1,caeJap4,ce7,danRer5,sarHar1,pseuAeru_PA7,bosTau5,panTro2canon,danRer3,loxAfr3,dm6,felCat3,cerSim1,tetNig1canon,taeGut1,apiMel4,caePb2,ce6,bosTau3,xenTro3,canFam3,eschColi_APEC_O1,hg18nohaps,droGri1,papAnu2,hg38female,latCha1,eschColi_K12_W3110,panTro3full,equCab2,ci2full,rn6,hg18chr21,ente638,felCat8,chrPic1,musFur1,bosTau8,hetGla1,sacCer2,caeRem2,rn3canon,rn3,dp4,27835,bosTau6,bosTau7,droEre1,hg18,hg_g1k_v37,ponAbe2,ce8,droMoj2,turTru2,gorGor3,saiBol1,eschColi_O157H7_TW14359,panPan1,choHof1,bosTau4,AgamP3,loxAfr1,equCab2chrM,aptMan1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 6, "time_seconds": 7.33215069770813, "inputs": {"reference_source|ref_file": "bwa-mem-mt-genome", "reference_source|reference_source_selector": "cached", "fastq_input|fastq_input1": {"src": "hda", "id": "f483ce4235ea2b21"}, "fastq_input|analysis_type_selector": "sr", "fastq_input|fastq_input_selector": "single", "mapping_options|min_occ_floor": "1000", "alignment_options|A": "2", "alignment_options|B": "8", "alignment_options|O": "12", "alignment_options|O2": "32", "alignment_options|E": "2", "alignment_options|E2": "1", "alignment_options|z": "400", "alignment_options|s": "40"}, "execution_problem": "parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: sacCer1,oryCun1,tetNig1,caeJap3,hg19_rCRS_pUC18_phiX174,Tcacao_1.0,ce10,galGal2canon,geoFor1,felCat5,monDom1,calJac3canon,panTro1canon,tupBel1,Amel_4.5,petMar1,droPer1,susScr1,echTel1,eschColi_K12,hg17,droEre2,triCas2,canFam1,hg38canon,lMaj5,sorAra1,hg19chrM,mm7canon,ailMel1,CpipJ1,cb3full,hg19,fr2,burkPseu_K96243,panTro2,droAna2,oryLat1,droVir2,caeJap2,AaegL1,Hydra_JCVI,oryza_sativa_japonica_nipponbare_IRGSP4.0,caePb1,venter1,susScr2,speTri2,eschColi_O157H7_EC4115,hg19chrX,mm7,mm8,Homo_sapiens_nuHg19_mtrCRS,strPur2,Sscrofa9.58,droMoj3,PhumU1,gasAcu1,caeRem4,criGri1,danRer10,ce5,xenTro1,caeRem3,apiMel3,braFlo1,micMur1,anoCar2,oviAri1,droMoj1,monDom5,gadMor1,droSim1,droAna3,papHam1,monDom4,hg38,caeJap1,melUnd1,galGal4,galGal3,susScr3,danRer7,taeGut1canon,Araly1,eschColi_CFT073,panTro1,calJac1,nomLeu2,droGri2,dm2,eschColi_O157H7,galGal2,hg19female,rn4,bosTauMd3,panTro3canon,baciSubt,dipOrd1,calJac3,aplCal1,Arabidopsis_thaliana_TAIR10,burkPseu_668,cavPor3,burkPseu_1106A,Xanthomonas_oryzae_KACC10331,rn5,canFam2,tetNig2canon,apiMel1,equCab1,mm9canon,danRer6,nomLeu3,otoGar1,myoLuc2,taeGut2,dp3,pseuAeru_PAO1,rheMac3,oryCun2,tarSyr1,IscaW1,vicPac1,oryLat2canon,vicPac2,Xanthomonas_oryzae_MAFF_311018,anoGam1,felCat4,phiX,apiMel2,eriEur1,mm9female,Homo_sapiens_AK1,Zea_mays_B73_RefGen_v2,mm10,otoGar3,droVir3,dm3,hg17canon,felCat4canon,strPur3,droSec1,borEut13,Tcas_3.0,ce2,bosTau2,burkPseu_1710B,ce3,ce9,mm9,priPac1,melGal1,dasNov3,hg18canon,Schizosaccharomyces_pombe_1.1,fr1,Bombyx_mori_p50T_2.0,droYak2,dasNov1,Arabidopsis_thaliana_TAIR9,galGal3canon,xenTro2,danRer2,danRer4,droWil1,Ptrichocarpa_156,rn4canon,bordBron,nomLeu1,eschColi_K12_DH10B,panTro4,Xanthomonas_oryzae_PXO99A,eschColi_O157H7_EDL933,pUC18,caeRem1,sacCer3,tetNig2,hg19canon,droYak1,anoCar1,mm8canon,cb3canon,oryLat2,caePb3,ci2canon,Spur_v2.6,pseuAeru_UCBPP_PA14,rheMac2,droVir1,allMis1,ornAna1,strePneu_R6,ce4,droAna1,caeJap4,ce7,danRer5,sarHar1,pseuAeru_PA7,bosTau5,panTro2canon,danRer3,loxAfr3,dm6,felCat3,cerSim1,tetNig1canon,taeGut1,apiMel4,caePb2,ce6,bosTau3,xenTro3,canFam3,eschColi_APEC_O1,hg18nohaps,droGri1,papAnu2,hg38female,latCha1,eschColi_K12_W3110,panTro3full,equCab2,ci2full,rn6,hg18chr21,ente638,felCat8,chrPic1,musFur1,bosTau8,hetGla1,sacCer2,caeRem2,rn3canon,rn3,dp4,27835,bosTau6,bosTau7,droEre1,hg18,hg_g1k_v37,ponAbe2,ce8,droMoj2,turTru2,gorGor3,saiBol1,eschColi_O157H7_TW14359,panPan1,choHof1,bosTau4,AgamP3,loxAfr1,equCab2chrM,aptMan1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 7, "time_seconds": 22.11847448348999, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "c23bd4fcde83cc2f"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "c23bd4fcde83cc2f"}, "fastq_input|analysis_type_selector": "ava-ont", "fastq_input|fastq_input_selector": "single", "io_options|output_format": "paf"}, "job": {"model_class": "Job", "id": "01c915ca5c1c3e45", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:32:27.359008", "create_time": "2021-11-06T16:32:18.392433", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-gkvrb", "command_line": "ln -f -s '/galaxy/server/database/objects/f/9/2/dataset_f92ad9d0-edf6-4833-8c91-76d765417e05.dat' reference.fa && minimap2 -x ava-ont           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/f/9/2/dataset_f92ad9d0-edf6-4833-8c91-76d765417e05.dat' > '/galaxy/server/database/objects/2/d/8/dataset_2d8378dc-0b62-48c6-86e0-50f35cf67f4d.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"paf\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"ava-ont\", \"fastq_input1\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "c23bd4fcde83cc2f", "src": "hda", "uuid": "f92ad9d0-edf6-4833-8c91-76d765417e05"}, "fastq_input1": {"id": "c23bd4fcde83cc2f", "src": "hda", "uuid": "f92ad9d0-edf6-4833-8c91-76d765417e05"}}, "outputs": {"alignment_output": {"id": "9d98b420e4139675", "src": "hda", "uuid": "2d8378dc-0b62-48c6-86e0-50f35cf67f4d"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.019*0.95] collected minimizers\n[M::mm_idx_gen::0.034*1.37] sorted minimizers\n[M::main::0.034*1.37] loaded/built the index for 25 target sequence(s)\n[M::mm_mapopt_update::0.037*1.34] mid_occ = 3\n[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25\n[M::mm_idx_stat::0.039*1.31] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935\n[M::worker_pipeline::0.057*1.44] mapped 25 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x ava-ont -t 2 reference.fa /galaxy/server/database/objects/f/9/2/dataset_f92ad9d0-edf6-4833-8c91-76d765417e05.dat\n[M::main] Real time: 0.062 sec; CPU: 0.086 sec; Peak RSS: 0.009 GB\n", "stderr": "\n[M::mm_idx_gen::0.019*0.95] collected minimizers\n[M::mm_idx_gen::0.034*1.37] sorted minimizers\n[M::main::0.034*1.37] loaded/built the index for 25 target sequence(s)\n[M::mm_mapopt_update::0.037*1.34] mid_occ = 3\n[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25\n[M::mm_idx_stat::0.039*1.31] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935\n[M::worker_pipeline::0.057*1.44] mapped 25 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x ava-ont -t 2 reference.fa /galaxy/server/database/objects/f/9/2/dataset_f92ad9d0-edf6-4833-8c91-76d765417e05.dat\n[M::main] Real time: 0.062 sec; CPU: 0.086 sec; Peak RSS: 0.009 GB\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:32:25", "plugin": "core", "name": "end_epoch", "raw_value": "1636216345.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:32:25", "plugin": "core", "name": "start_epoch", "raw_value": "1636216345.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4", "test_index": 8, "time_seconds": 25.08681845664978, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "836b6da0f122d1f4"}, "reference_source|reference_source_selector": "history", "fastq_input|fastq_input1": {"src": "hda", "id": "836b6da0f122d1f4"}, "fastq_input|analysis_type_selector": "self-homology", "fastq_input|fastq_input_selector": "single"}, "job": {"model_class": "Job", "id": "e2f65feceb867ce5", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:32:30.541880", "create_time": "2021-11-06T16:32:18.415349", "galaxy_version": "21.05", "command_version": "2.17-r941\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "history_id": "1787f5936be7ca45", "external_id": "gxy-25rvs", "command_line": "ln -f -s '/galaxy/server/database/objects/8/6/e/dataset_86e94785-7b0c-4b81-b539-b359e420e0cc.dat' reference.fa && minimap2 -DP -k19 -w19 -m200           -t ${GALAXY_SLOTS:-4} reference.fa '/galaxy/server/database/objects/8/6/e/dataset_86e94785-7b0c-4b81-b539-b359e420e0cc.dat' -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o '/galaxy/server/database/objects/a/d/c/dataset_adc56ca4-b8a6-4b00-83d7-619a165771ef.dat'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}", "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}", "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}", "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}", "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"self-homology\", \"fastq_input1\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"ref_file": {"id": "836b6da0f122d1f4", "src": "hda", "uuid": "86e94785-7b0c-4b81-b539-b359e420e0cc"}, "fastq_input1": {"id": "836b6da0f122d1f4", "src": "hda", "uuid": "86e94785-7b0c-4b81-b539-b359e420e0cc"}}, "outputs": {"alignment_output": {"id": "ebfa3242477517e3", "src": "hda", "uuid": "adc56ca4-b8a6-4b00-83d7-619a165771ef"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "[M::mm_idx_gen::0.005*0.92] collected minimizers\n[M::mm_idx_gen::0.006*1.07] sorted minimizers\n[M::main::0.006*1.07] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.07] mid_occ = 9\n[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.06] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057\n[M::worker_pipeline::0.048*1.00] mapped 1 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -DP -k19 -w19 -m200 -t 2 -a reference.fa /galaxy/server/database/objects/8/6/e/dataset_86e94785-7b0c-4b81-b539-b359e420e0cc.dat\n[M::main] Real time: 0.049 sec; CPU: 0.048 sec; Peak RSS: 0.010 GB\n", "stderr": "\n[M::mm_idx_gen::0.005*0.92] collected minimizers\n[M::mm_idx_gen::0.006*1.07] sorted minimizers\n[M::main::0.006*1.07] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.07] mid_occ = 9\n[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.06] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057\n[M::worker_pipeline::0.048*1.00] mapped 1 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -DP -k19 -w19 -m200 -t 2 -a reference.fa /galaxy/server/database/objects/8/6/e/dataset_86e94785-7b0c-4b81-b539-b359e420e0cc.dat\n[M::main] Real time: 0.049 sec; CPU: 0.048 sec; Peak RSS: 0.010 GB\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:32:27", "plugin": "core", "name": "end_epoch", "raw_value": "1636216347.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:32:27", "plugin": "core", "name": "start_epoch", "raw_value": "1636216347.0000000"}, {"title": "Memory Allocated (MB)", "value": "16000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 0, "time_seconds": 1839.0532944202423, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "cbe745c57831d853"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "839f59c5c9908f25"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "a44dcd7f183ef4b9", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:08:13.212293", "create_time": "2021-11-06T16:37:54.641879", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "1787f5936be7ca45", "external_id": "gxy-7mf8w", "command_line": "ln -s '/galaxy/server/database/objects/4/e/e/dataset_4ee5d545-dd66-46c7-ae45-28d450654a82.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/1/7/5/dataset_17561f95-9f0e-42c7-b0d9-e4226b29b749.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": \"false\"}", "rotation": "{\"no_rotate\": \"false\", \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": \"false\", \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": \"true\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 261, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"fastq_input1": {"id": "cbe745c57831d853", "src": "hda", "uuid": "4ee5d545-dd66-46c7-ae45-28d450654a82"}, "fastq_input2": {"id": "839f59c5c9908f25", "src": "hda", "uuid": "17561f95-9f0e-42c7-b0d9-e4226b29b749"}}, "outputs": {"assembly_graph": {"id": "c6ab71544e13157c", "src": "hda", "uuid": "2ef92be2-784a-4ba7-9438-525799b9c12b"}, "assembly": {"id": "92b55ba05eadba60", "src": "hda", "uuid": "cfa84763-2c08-4a66-bbb4-8a791a7afcac"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 1, "time_seconds": 1838.2652750015259, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "cbe745c57831d853"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "839f59c5c9908f25"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "c9d4d85322aaddfd"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "3479424295b16197", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:08:13.292903", "create_time": "2021-11-06T16:38:08.052974", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "1787f5936be7ca45", "external_id": "gxy-l4csb", "command_line": "ln -s '/galaxy/server/database/objects/4/e/e/dataset_4ee5d545-dd66-46c7-ae45-28d450654a82.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/1/7/5/dataset_17561f95-9f0e-42c7-b0d9-e4226b29b749.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/b/8/b/dataset_b8bf8757-dbc4-4b15-8bc3-b03c1ea6db43.dat' 'lr.fasta' && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": \"false\"}", "rotation": "{\"no_rotate\": \"false\", \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": \"false\", \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": \"true\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 261, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"fastq_input1": {"id": "cbe745c57831d853", "src": "hda", "uuid": "4ee5d545-dd66-46c7-ae45-28d450654a82"}, "fastq_input2": {"id": "839f59c5c9908f25", "src": "hda", "uuid": "17561f95-9f0e-42c7-b0d9-e4226b29b749"}, "long": {"id": "c9d4d85322aaddfd", "src": "hda", "uuid": "b8bf8757-dbc4-4b15-8bc3-b03c1ea6db43"}}, "outputs": {"assembly_graph": {"id": "d18bb8ce78f8aa0f", "src": "hda", "uuid": "1ebad855-d372-4b0f-afb0-dd6a9f48d704"}, "assembly": {"id": "ed7862913fdecf4d", "src": "hda", "uuid": "a68cb60a-1a79-4850-96d4-8d3eb97e1cc9"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 2, "time_seconds": 1823.6869497299194, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "96cce2867ef007c1"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": true, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "394ab384f1820751", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:08:13.348668", "create_time": "2021-11-06T16:38:09.233518", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "1787f5936be7ca45", "external_id": "gxy-p27dt", "command_line": "ln -s '/galaxy/server/database/objects/4/e/e/dataset_4ee5d545-dd66-46c7-ae45-28d450654a82.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/1/7/5/dataset_17561f95-9f0e-42c7-b0d9-e4226b29b749.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --no_pilon --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": \"true\"}", "rotation": "{\"no_rotate\": \"false\", \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": \"false\", \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": \"true\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 4, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}"}, "inputs": {"fastq_input11": {"id": "cbe745c57831d853", "src": "hda", "uuid": "4ee5d545-dd66-46c7-ae45-28d450654a82"}, "fastq_input12": {"id": "839f59c5c9908f25", "src": "hda", "uuid": "17561f95-9f0e-42c7-b0d9-e4226b29b749"}}, "outputs": {"assembly_graph": {"id": "05909f52733e7170", "src": "hda", "uuid": "fb0de757-0198-4b99-a6bc-a1ccc1ec104c"}, "assembly": {"id": "b5c0d305544124e1", "src": "hda", "uuid": "25a28162-35f1-404f-b8ec-fa2ce2f4bc41"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 3, "time_seconds": 1817.01145195961, "inputs": {"paired_unpaired|fastq_input_selector": "none", "long": {"src": "hda", "id": "5c0b618e184a924b"}, "min_anchor_seg_len": "10", "spades|kmers": "21,23"}, "job": {"model_class": "Job", "id": "3cd73b50c4046c51", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:08:19.050009", "create_time": "2021-11-06T16:38:14.101790", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "1787f5936be7ca45", "external_id": "gxy-7cjzn", "command_line": "ln -s '/galaxy/server/database/objects/1/3/2/dataset_13295920-52ea-44d4-88ed-3c08647a718b.dat' 'lr.fasta' && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_anchor_seg_len '10'  --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmers '21,23' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": \"false\"}", "rotation": "{\"no_rotate\": \"false\", \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"21,23\", \"largest_component\": \"false\", \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": \"false\"}", "min_anchor_seg_len": "\"10\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 3, \"fastq_input_selector\": \"none\"}"}, "inputs": {"long": {"id": "5c0b618e184a924b", "src": "hda", "uuid": "13295920-52ea-44d4-88ed-3c08647a718b"}}, "outputs": {"assembly_graph": {"id": "d4fa4671d25e09ee", "src": "hda", "uuid": "1168ed05-ffde-4a68-98a4-d017e17b71b8"}, "assembly": {"id": "4eed6a244ee2e569", "src": "hda", "uuid": "f0a2152e-b140-448a-83c0-d5a93fb2c9a7"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_FPKM_count/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_FPKM_count", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 35.631815671920776, "inputs": {"input": {"src": "hda", "id": "991b6c3f40d2445f"}, "refgene": {"src": "hda", "id": "5ab2c870ffb8dd13"}}, "job": {"model_class": "Job", "id": "664feb9da6ac81ab", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:01.778651", "create_time": "2021-11-06T16:27:42.114217", "galaxy_version": "21.05", "command_version": "FPKM_count.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_FPKM_count/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-qfpzw", "command_line": "ln -sf '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' 'local_input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/6/9/b/metadata_69be87ae-f774-47ca-8306-5e276722245b.dat' 'local_input.bam.bai' && FPKM_count.py -i 'local_input.bam' -o output -r '/galaxy/server/database/objects/1/d/6/dataset_1d67e52b-304c-4f41-ab2f-48ac84d83256.dat'          --single-read=\"1\"", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "singleread": "\"1\"", "onlyexonic": "\"false\"", "multihits_type": "{\"__current_case__\": 1, \"multihits_type_selector\": \"use_multihits\"}", "strand_type": "{\"__current_case__\": 2, \"strand_specific\": \"none\"}"}, "inputs": {"input": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "refgene": {"id": "5ab2c870ffb8dd13", "src": "hda", "uuid": "1d67e52b-304c-4f41-ab2f-48ac84d83256"}}, "outputs": {"outputxls": {"id": "f0cbce81d1cf0b1d", "src": "hda", "uuid": "0b7aadcb-acab-4149-8022-927668048cb0"}}, "tool_stdout": "", "tool_stderr": "Extract exon regions from  /galaxy/server/database/objects/1/d/6/dataset_1d67e52b-304c-4f41-ab2f-48ac84d83256.dat...\nCounting total fragment ...  Done\nTotal fragment = 20.0                \nTotal exonic fragment = 2.0                 \n 1 transcripts finished\r 2 transcripts finished\r 3 transcripts finished\r 4 transcripts finished\r 5 transcripts finished\r 6 transcripts finished\r 7 transcripts finished\r", "job_stdout": "", "job_stderr": "", "stderr": "Extract exon regions from  /galaxy/server/database/objects/1/d/6/dataset_1d67e52b-304c-4f41-ab2f-48ac84d83256.dat...\nCounting total fragment ...  Done\nTotal fragment = 20.0                \nTotal exonic fragment = 2.0                 \n 1 transcripts finished\r 2 transcripts finished\r 3 transcripts finished\r 4 transcripts finished\r 5 transcripts finished\r 6 transcripts finished\r 7 transcripts finished\r", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:27:58", "plugin": "core", "name": "end_epoch", "raw_value": "1636216078.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:27:58", "plugin": "core", "name": "start_epoch", "raw_value": "1636216078.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RNA_fragment_size/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RNA_fragment_size", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 33.561370849609375, "inputs": {"input": {"src": "hda", "id": "8bae6d60febbfc76"}, "refgene": {"src": "hda", "id": "4316a2c5f65d11b5"}}, "job": {"model_class": "Job", "id": "eb857a0b248a99d3", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:42.818301", "create_time": "2021-11-06T16:28:25.815678", "galaxy_version": "21.05", "command_version": "RNA_fragment_size.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RNA_fragment_size/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-p78rz", "command_line": "ln -sf '/galaxy/server/database/objects/0/9/1/dataset_091e5d25-a753-4d86-b9c1-7333002a964f.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/4/7/e/metadata_47ebb14b-d91a-4702-976a-c43f1b2eed91.dat' 'input.bam.bai' && RNA_fragment_size.py -i 'input.bam' --refgene='/galaxy/server/database/objects/2/6/0/dataset_26051300-e495-4b87-845a-067fb18ab458.dat' --mapq=30 --frag-num=3 > '/galaxy/server/database/objects/1/d/1/dataset_1d12b5f5-394f-4296-aae4-368badcccf20.dat'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fragnum": "\"3\"", "mapq": "\"30\""}, "inputs": {"refgene": {"id": "4316a2c5f65d11b5", "src": "hda", "uuid": "26051300-e495-4b87-845a-067fb18ab458"}, "input": {"id": "8bae6d60febbfc76", "src": "hda", "uuid": "091e5d25-a753-4d86-b9c1-7333002a964f"}}, "outputs": {"output": {"id": "af8b01ba2ee10eef", "src": "hda", "uuid": "1d12b5f5-394f-4296-aae4-368badcccf20"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:28:41", "plugin": "core", "name": "end_epoch", "raw_value": "1636216121.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:41", "plugin": "core", "name": "start_epoch", "raw_value": "1636216121.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RPKM_saturation/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RPKM_saturation", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 32.11099934577942, "inputs": {"input": {"src": "hda", "id": "78e8c1fcf543278c"}, "refgene": {"src": "hda", "id": "d5928a5ebea94d09"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "3ccb348964730ca5", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:37.163952", "create_time": "2021-11-06T16:28:21.391345", "galaxy_version": "21.05", "command_version": "RPKM_saturation.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RPKM_saturation/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-cp8zh", "command_line": "RPKM_saturation.py -i '/galaxy/server/database/objects/d/9/1/dataset_d91eb706-2743-43f3-86c2-82bdb6547bef.dat' -o output -r '/galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat'    -l 5 -u 100 -s 5 -c 0.01", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\"", "rpkmCutoff": "\"0.01\"", "percentileStep": "\"5\"", "percentileCeiling": "\"100\"", "percentileFloor": "\"5\"", "strand_type": "{\"__current_case__\": 2, \"strand_specific\": \"none\"}"}, "inputs": {"input": {"id": "78e8c1fcf543278c", "src": "hda", "uuid": "d91eb706-2743-43f3-86c2-82bdb6547bef"}, "refgene": {"id": "e8d21632f1374c05", "src": "hda", "uuid": "4506a441-4d49-4181-8b9b-1b7dafc1e578"}}, "outputs": {"outputxls": {"id": "9a747077355e8a1b", "src": "hda", "uuid": "6ce15ffa-ee90-4a79-9bd0-fee9819a3f0c"}, "outputrawxls": {"id": "8b87df6966178d7a", "src": "hda", "uuid": "e2f7d42d-870d-4e95-a5db-159ef8f1c08c"}, "outputr": {"id": "6c4811ce86f342c1", "src": "hda", "uuid": "a9b42619-f02a-49a5-a09a-bc15b07f3e88"}, "outputpdf": {"id": "11a63f00b8409534", "src": "hda", "uuid": "1390c9d1-debf-4522-b5b1-d10ede472a69"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Load BAM file ...  Done\nshuffling alignments ... Done\nsampling 5% (245) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 10% (491) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 15% (737) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 20% (983) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 25% (1229) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 30% (1474) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 35% (1720) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 40% (1966) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 45% (2212) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 50% (2458) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 55% (2703) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 60% (2949) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 65% (3195) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 70% (3441) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 75% (3687) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 80% (3932) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 85% (4178) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 90% (4424) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 95% (4670) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 100% (4916) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Load BAM file ...  Done\nshuffling alignments ... Done\nsampling 5% (245) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 10% (491) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 15% (737) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 20% (983) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 25% (1229) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 30% (1474) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 35% (1720) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 40% (1966) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 45% (2212) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 50% (2458) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 55% (2703) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 60% (2949) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 65% (3195) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 70% (3441) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 75% (3687) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 80% (3932) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 85% (4178) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 90% (4424) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 95% (4670) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\nsampling 100% (4916) fragments ...\nassign reads to transcripts in /galaxy/server/database/objects/4/5/0/dataset_4506a441-4d49-4181-8b9b-1b7dafc1e578.dat ...\n\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:28:33", "plugin": "core", "name": "end_epoch", "raw_value": "1636216113.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:33", "plugin": "core", "name": "start_epoch", "raw_value": "1636216113.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 44.84136700630188, "inputs": {"input": {"src": "hda", "id": "acbe01b842ef60cc"}, "chromsize": {"src": "hda", "id": "c2bc9477c44b084a"}}, "job": {"model_class": "Job", "id": "cb1ac832cbe7c715", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:49.964202", "create_time": "2021-11-06T16:30:20.913352", "galaxy_version": "21.05", "command_version": "bam2wig.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-zt84x", "command_line": "ln -sf '/galaxy/server/database/objects/b/4/5/dataset_b458512a-f2ec-4b64-8c89-cdab325ef718.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/8/f/f/metadata_8ffe6ee8-17a8-4049-bf4c-89501e0d79b3.dat' 'input.bam.bai' && bam2wig.py -i 'input.bam' -s '/galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat' -o outfile", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strand_type": "{\"__current_case__\": 2, \"strand_specific\": \"none\"}", "wigsum_type": "{\"__current_case__\": 1, \"wigsum_type_selector\": \"raw\"}", "multihits_type": "{\"__current_case__\": 1, \"multihits_type_selector\": \"use_multihits\"}"}, "inputs": {"input": {"id": "acbe01b842ef60cc", "src": "hda", "uuid": "b458512a-f2ec-4b64-8c89-cdab325ef718"}, "chromsize": {"id": "c2bc9477c44b084a", "src": "hda", "uuid": "a571db3e-80bc-41a5-bc1c-b0e9866c8217"}}, "outputs": {"output": {"id": "691feb2bfa984b54", "src": "hda", "uuid": "def491b9-3225-4bfd-857c-feb79637c631"}}, "tool_stdout": "Skip multi-hits:False\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "tool_stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "job_stdout": "", "job_stderr": "", "stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "stdout": "Skip multi-hits:False\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:48", "plugin": "core", "name": "end_epoch", "raw_value": "1636216248.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:48", "plugin": "core", "name": "start_epoch", "raw_value": "1636216248.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig", "tool_version": "2.6.4", "test_index": 1, "time_seconds": 36.12462615966797, "inputs": {"input": {"src": "hda", "id": "acbe01b842ef60cc"}, "chromsize": {"src": "hda", "id": "c2bc9477c44b084a"}, "multihits_type|mapq": "20", "multihits_type|multihits_type_selector": "skip_multihits"}, "job": {"model_class": "Job", "id": "4c978cd1523fec80", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:45.461967", "create_time": "2021-11-06T16:30:28.691967", "galaxy_version": "21.05", "command_version": "bam2wig.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-g82n6", "command_line": "ln -sf '/galaxy/server/database/objects/b/4/5/dataset_b458512a-f2ec-4b64-8c89-cdab325ef718.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/8/f/f/metadata_8ffe6ee8-17a8-4049-bf4c-89501e0d79b3.dat' 'input.bam.bai' && bam2wig.py -i 'input.bam' -s '/galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat' -o outfile       --skip-multi-hits --mapq=20", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strand_type": "{\"__current_case__\": 2, \"strand_specific\": \"none\"}", "wigsum_type": "{\"__current_case__\": 1, \"wigsum_type_selector\": \"raw\"}", "multihits_type": "{\"__current_case__\": 0, \"mapq\": \"20\", \"multihits_type_selector\": \"skip_multihits\"}"}, "inputs": {"input": {"id": "acbe01b842ef60cc", "src": "hda", "uuid": "b458512a-f2ec-4b64-8c89-cdab325ef718"}, "chromsize": {"id": "c2bc9477c44b084a", "src": "hda", "uuid": "a571db3e-80bc-41a5-bc1c-b0e9866c8217"}}, "outputs": {"output": {"id": "4a9aa08e12cce1a8", "src": "hda", "uuid": "b92c8c1e-79d9-4d24-ab2e-6138de440e5c"}}, "tool_stdout": "Skip multi-hits:True\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "tool_stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "job_stdout": "", "job_stderr": "", "stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "stdout": "Skip multi-hits:True\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:44", "plugin": "core", "name": "end_epoch", "raw_value": "1636216244.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:44", "plugin": "core", "name": "start_epoch", "raw_value": "1636216244.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig", "tool_version": "2.6.4", "test_index": 2, "time_seconds": 37.082677125930786, "inputs": {"input": {"src": "hda", "id": "acbe01b842ef60cc"}, "chromsize": {"src": "hda", "id": "c2bc9477c44b084a"}, "strand_type|pair_type": "sd", "strand_type|strand_specific": "pair"}, "job": {"model_class": "Job", "id": "b0cb459223ba31aa", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:47.781423", "create_time": "2021-11-06T16:30:36.315025", "galaxy_version": "21.05", "command_version": "bam2wig.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-hpxl5", "command_line": "ln -sf '/galaxy/server/database/objects/b/4/5/dataset_b458512a-f2ec-4b64-8c89-cdab325ef718.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/8/f/f/metadata_8ffe6ee8-17a8-4049-bf4c-89501e0d79b3.dat' 'input.bam.bai' && bam2wig.py -i 'input.bam' -s '/galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat' -o outfile  -d '1++,1--,2+-,2-+'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strand_type": "{\"__current_case__\": 0, \"pair_type\": \"sd\", \"strand_specific\": \"pair\"}", "wigsum_type": "{\"__current_case__\": 1, \"wigsum_type_selector\": \"raw\"}", "multihits_type": "{\"__current_case__\": 1, \"multihits_type_selector\": \"use_multihits\"}"}, "inputs": {"input": {"id": "acbe01b842ef60cc", "src": "hda", "uuid": "b458512a-f2ec-4b64-8c89-cdab325ef718"}, "chromsize": {"id": "c2bc9477c44b084a", "src": "hda", "uuid": "a571db3e-80bc-41a5-bc1c-b0e9866c8217"}}, "outputs": {"outputfwd": {"id": "fa5de1ba12c46442", "src": "hda", "uuid": "8c3ae7b1-dd99-4263-8944-80fc5201403c"}, "outputrv": {"id": "3adcbc9de299e807", "src": "hda", "uuid": "89a52ee4-c33f-49c9-b669-a8d4dd056d9c"}}, "tool_stdout": "Skip multi-hits:False\n", "tool_stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n/bin/sh: wigToBigWig: not found\n", "job_stdout": "", "job_stderr": "", "stderr": "No alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n/bin/sh: wigToBigWig: not found\n", "stdout": "Skip multi-hits:False\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:45", "plugin": "core", "name": "end_epoch", "raw_value": "1636216245.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:45", "plugin": "core", "name": "start_epoch", "raw_value": "1636216245.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig", "tool_version": "2.6.4", "test_index": 3, "time_seconds": 38.39813852310181, "inputs": {"input": {"src": "hda", "id": "acbe01b842ef60cc"}, "chromsize": {"src": "hda", "id": "c2bc9477c44b084a"}, "wigsum_type|totalwig": "100", "wigsum_type|wigsum_type_selector": "normalize"}, "job": {"model_class": "Job", "id": "30163e630f7aa293", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:54.421031", "create_time": "2021-11-06T16:30:38.619552", "galaxy_version": "21.05", "command_version": "bam2wig.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-tzrnw", "command_line": "ln -sf '/galaxy/server/database/objects/b/4/5/dataset_b458512a-f2ec-4b64-8c89-cdab325ef718.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/8/f/f/metadata_8ffe6ee8-17a8-4049-bf4c-89501e0d79b3.dat' 'input.bam.bai' && bam2wig.py -i 'input.bam' -s '/galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat' -o outfile    -t 100", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "strand_type": "{\"__current_case__\": 2, \"strand_specific\": \"none\"}", "wigsum_type": "{\"__current_case__\": 0, \"totalwig\": \"100\", \"wigsum_type_selector\": \"normalize\"}", "multihits_type": "{\"__current_case__\": 1, \"multihits_type_selector\": \"use_multihits\"}"}, "inputs": {"input": {"id": "acbe01b842ef60cc", "src": "hda", "uuid": "b458512a-f2ec-4b64-8c89-cdab325ef718"}, "chromsize": {"id": "c2bc9477c44b084a", "src": "hda", "uuid": "a571db3e-80bc-41a5-bc1c-b0e9866c8217"}}, "outputs": {"output": {"id": "6ee0eca471e514d4", "src": "hda", "uuid": "49277fe4-cb6d-4413-8baa-d9759c0bfbb3"}}, "tool_stdout": "Skip multi-hits:False\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "tool_stderr": "Calcualte wigsum ... \nNo alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n\n\ntotal wigsum is:1960.0\n\nNo alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "job_stdout": "", "job_stderr": "", "stderr": "Calcualte wigsum ... \nNo alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n\n\ntotal wigsum is:1960.0\n\nNo alignments for chr19_gl000208_random. skipped\nNo alignments for chr21_gl000210_random. skipped\nNo alignments for chr6_apd_hap1. skipped\nProcessing chr13 ...\nProcessing chr12 ...\nProcessing chr11 ...\nProcessing chr10 ...\nProcessing chr17 ...\nProcessing chr16 ...\nProcessing chr15 ...\nProcessing chr14 ...\nProcessing chr19 ...\nProcessing chr18 ...\nNo alignments for chr9_gl000198_random. skipped\nNo alignments for chrUn_gl000239. skipped\nNo alignments for chrUn_gl000238. skipped\nNo alignments for chrUn_gl000233. skipped\nNo alignments for chrUn_gl000232. skipped\nNo alignments for chrUn_gl000231. skipped\nNo alignments for chrUn_gl000230. skipped\nNo alignments for chrUn_gl000237. skipped\nNo alignments for chrUn_gl000236. skipped\nNo alignments for chrUn_gl000235. skipped\nNo alignments for chrUn_gl000234. skipped\nNo alignments for chr6_qbl_hap6. skipped\nNo alignments for chr11_gl000202_random. skipped\nNo alignments for chr17_gl000206_random. skipped\nNo alignments for chr6_cox_hap2. skipped\nNo alignments for chr4_gl000193_random. skipped\nNo alignments for chrUn_gl000248. skipped\nNo alignments for chrUn_gl000249. skipped\nNo alignments for chrUn_gl000246. skipped\nNo alignments for chrUn_gl000247. skipped\nNo alignments for chrUn_gl000244. skipped\nNo alignments for chrUn_gl000245. skipped\nNo alignments for chrUn_gl000242. skipped\nNo alignments for chrUn_gl000243. skipped\nNo alignments for chrUn_gl000240. skipped\nNo alignments for chrUn_gl000241. skipped\nNo alignments for chr17_gl000204_random. skipped\nNo alignments for chr17_ctg5_hap1. skipped\nNo alignments for chr17_gl000205_random. skipped\nNo alignments for chr9_gl000199_random. skipped\nNo alignments for chr9_gl000201_random. skipped\nProcessing chr8 ...\nNo alignments for chr6_ssto_hap7. skipped\nNo alignments for chr8_gl000197_random. skipped\nNo alignments for chr6_dbb_hap3. skipped\nNo alignments for chr7_gl000195_random. skipped\nNo alignments for chr1_gl000191_random. skipped\nNo alignments for chr4_ctg9_hap1. skipped\nProcessing chr3 ...\nNo alignments for chrUn_gl000229. skipped\nProcessing chr1 ...\nNo alignments for chr17_gl000203_random. skipped\nNo alignments for chr4_gl000194_random. skipped\nProcessing chrY ...\nProcessing chrX ...\nNo alignments for chr9_gl000200_random. skipped\nProcessing chr9 ...\nProcessing chrM ...\nNo alignments for chr8_gl000196_random. skipped\nNo alignments for chr6_mann_hap4. skipped\nNo alignments for chrUn_gl000211. skipped\nNo alignments for chrUn_gl000213. skipped\nNo alignments for chrUn_gl000212. skipped\nNo alignments for chrUn_gl000215. skipped\nNo alignments for chrUn_gl000214. skipped\nNo alignments for chrUn_gl000217. skipped\nNo alignments for chrUn_gl000216. skipped\nNo alignments for chrUn_gl000219. skipped\nNo alignments for chrUn_gl000218. skipped\nNo alignments for chr19_gl000209_random. skipped\nProcessing chr22 ...\nProcessing chr20 ...\nProcessing chr21 ...\nNo alignments for chr6_mcf_hap5. skipped\nProcessing chr7 ...\nProcessing chr6 ...\nProcessing chr5 ...\nProcessing chr4 ...\nNo alignments for chrUn_gl000228. skipped\nProcessing chr2 ...\nNo alignments for chr1_gl000192_random. skipped\nNo alignments for chrUn_gl000224. skipped\nNo alignments for chrUn_gl000225. skipped\nNo alignments for chrUn_gl000226. skipped\nNo alignments for chrUn_gl000227. skipped\nNo alignments for chrUn_gl000220. skipped\nNo alignments for chrUn_gl000221. skipped\nNo alignments for chrUn_gl000222. skipped\nNo alignments for chrUn_gl000223. skipped\nNo alignments for chr18_gl000207_random. skipped\n/bin/sh: wigToBigWig: not found\n", "stdout": "Skip multi-hits:False\nRun wigToBigWig outfile.wig /galaxy/server/database/objects/a/5/7/dataset_a571db3e-80bc-41a5-bc1c-b0e9866c8217.dat outfile.bw \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:30:52", "plugin": "core", "name": "end_epoch", "raw_value": "1636216252.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:51", "plugin": "core", "name": "start_epoch", "raw_value": "1636216251.0000000"}, {"title": "Memory Allocated (MB)", "value": "4000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4000.0000000"}, {"title": "Cores Allocated", "value": "2", "plugin": "core", "name": "galaxy_slots", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam_stat/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam_stat", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 29.004313230514526, "inputs": {"input": {"src": "hda", "id": "01c915ca5c1c3e45"}}, "job": {"model_class": "Job", "id": "827a280cdc88d053", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:31:14.504765", "create_time": "2021-11-06T16:30:57.229201", "galaxy_version": "21.05", "command_version": "bam_stat.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam_stat/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-w7zj6", "command_line": "bam_stat.py -i '/galaxy/server/database/objects/9/b/a/dataset_9bacfb5c-3875-48bf-9222-23677ca6c683.dat' -q 30 > '/galaxy/server/database/objects/3/d/4/dataset_3d4dafe4-3f01-42b7-8308-ca5ddd42faec.dat'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"30\""}, "inputs": {"input": {"id": "01c915ca5c1c3e45", "src": "hda", "uuid": "9bacfb5c-3875-48bf-9222-23677ca6c683"}}, "outputs": {"output": {"id": "abddc02f4ba2d399", "src": "hda", "uuid": "3d4dafe4-3f01-42b7-8308-ca5ddd42faec"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Load BAM file ...  Done\n", "stderr": "\nLoad BAM file ...  Done\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:31:12", "plugin": "core", "name": "end_epoch", "raw_value": "1636216272.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:31:12", "plugin": "core", "name": "start_epoch", "raw_value": "1636216272.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 67.35847878456116, "inputs": {"input": {"src": "hda", "id": "bf53f2b3b519c246"}}, "job": {"model_class": "Job", "id": "39e4cd38192b3890", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:27:27.314513", "create_time": "2021-11-06T16:26:35.690426", "galaxy_version": "21.05", "command_version": "clipping_profile.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-65tm2", "command_line": "clipping_profile.py -i '/galaxy/server/database/objects/3/f/9/dataset_3f9d2e86-60e1-4ec1-a2e2-1147437ca01c.dat' -o output -q 30 -s \"SE\"", "params": {"mapq": "\"30\"", "layout": "\"SE\"", "rscript_output": "\"false\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "bf53f2b3b519c246", "src": "hda", "uuid": "3f9d2e86-60e1-4ec1-a2e2-1147437ca01c"}}, "outputs": {"outputpdf": {"id": "6ae61e89b267a56f", "src": "hda", "uuid": "645a46b1-45df-4e83-bfa6-40ac0a64909c"}, "outputxls": {"id": "feb2597817bee7cc", "src": "hda", "uuid": "ac1025aa-6023-48fb-9ce2-2aea056ae2d9"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "job_stdout": "", "job_stderr": "", "stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "end_epoch", "raw_value": "1636216043.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "start_epoch", "raw_value": "1636216043.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile", "tool_version": "2.6.4", "test_index": 1, "time_seconds": 39.88871622085571, "inputs": {"input": {"src": "hda", "id": "991b6c3f40d2445f"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "f93ce7c32b4571a0", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:05.089914", "create_time": "2021-11-06T16:27:42.088877", "galaxy_version": "21.05", "command_version": "clipping_profile.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-fsjph", "command_line": "clipping_profile.py -i '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' -o output -q 30 -s \"SE\"", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "layout": "\"SE\"", "mapq": "\"30\""}, "inputs": {"input": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}}, "outputs": {"outputxls": {"id": "cc67a52a51e65235", "src": "hda", "uuid": "262f4818-f351-4407-95e5-17bad40bde6d"}, "outputpdf": {"id": "6bb35af07dcc3505", "src": "hda", "uuid": "16e55359-56e4-4814-9441-fc92850d3dfb"}, "outputr": {"id": "95e815d87da3cad9", "src": "hda", "uuid": "3cc2c59d-42bf-41df-9d62-eefefb06cbb7"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "job_stdout": "", "job_stderr": "", "stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:28:02", "plugin": "core", "name": "end_epoch", "raw_value": "1636216082.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:01", "plugin": "core", "name": "start_epoch", "raw_value": "1636216081.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_deletion_profile/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_deletion_profile", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 32.60207748413086, "inputs": {"input": {"src": "hda", "id": "0053f539b08e5312"}, "readlength": "101", "rscript_output": true}, "job": {"model_class": "Job", "id": "95e815d87da3cad9", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:33.871547", "create_time": "2021-11-06T16:28:11.395975", "galaxy_version": "21.05", "command_version": "deletion_profile.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_deletion_profile/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-2g9tm", "command_line": "deletion_profile.py -i '/galaxy/server/database/objects/5/f/8/dataset_5f8fcd7e-5d6b-4926-b945-72334a350fea.dat' -o output -l 101 -n 1000000 -q 30", "params": {"readlength": "\"101\"", "readnum": "\"1000000\"", "mapq": "\"30\"", "rscript_output": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"auto\""}, "inputs": {"input": {"id": "0053f539b08e5312", "src": "hda", "uuid": "5f8fcd7e-5d6b-4926-b945-72334a350fea"}}, "outputs": {"outputpdf": {"id": "27773182f43dc3f1", "src": "hda", "uuid": "41916156-d2ff-43c8-936f-2f9cb3f649e0"}, "outputxls": {"id": "b55050e835a88d64", "src": "hda", "uuid": "c9526a57-a7f4-42f9-ba36-13b92137dfec"}, "outputr": {"id": "fe73444cf31f1ab2", "src": "hda", "uuid": "1cd31565-c8f9-4b18-b526-6208ef6d7fba"}}, "tool_stdout": "null device \n          1 \n\n\n", "tool_stderr": "Process BAM file ...  Total reads used: 0\n", "job_stdout": "", "job_stderr": "", "stderr": "Process BAM file ...  Total reads used: 0\n", "stdout": "null device \n          1 \n\n\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:28:31", "plugin": "core", "name": "end_epoch", "raw_value": "1636216111.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:30", "plugin": "core", "name": "start_epoch", "raw_value": "1636216110.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage", "tool_version": "2.6.4.3", "test_index": 0, "time_seconds": 41.40793061256409, "inputs": {"batch_mode|input": {"src": "hda", "id": "991b6c3f40d2445f"}, "batch_mode|batch_mode_selector": "batch", "refgene": {"src": "hda", "id": "5ab2c870ffb8dd13"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "e678437fc65d68ad", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:08.746512", "create_time": "2021-11-06T16:27:52.198669", "galaxy_version": "21.05", "command_version": "geneBody_coverage.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3", "history_id": "1787f5936be7ca45", "external_id": "gxy-zb8z2", "command_line": "ln -sf '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/6/9/b/metadata_69be87ae-f774-47ca-8306-5e276722245b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam.bai' && geneBody_coverage.py -i 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam' -r '/galaxy/server/database/objects/1/4/a/dataset_14a4bb16-923f-45eb-b220-d4c570b0714f.dat' --minimum_length 100 -o output", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "minimum_length": "\"100\"", "batch_mode": "{\"__current_case__\": 0, \"batch_mode_selector\": \"batch\", \"input\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}}"}, "inputs": {"input": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "refgene": {"id": "2a86d880fbd752a1", "src": "hda", "uuid": "14a4bb16-923f-45eb-b220-d4c570b0714f"}}, "outputs": {"outputcurvespdf": {"id": "54828318e4f601aa", "src": "hda", "uuid": "621799e8-68b3-48d1-b474-2b9af3304240"}, "outputr": {"id": "3ccb348964730ca5", "src": "hda", "uuid": "8814ce24-2d29-45bd-8a1c-a684be31a90b"}, "outputtxt": {"id": "eb857a0b248a99d3", "src": "hda", "uuid": "da4454d8-38a7-438a-a966-ae9493b9ef94"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "@ 2021-11-06 16:28:05: Read BED file (reference gene model) ...\n@ 2021-11-06 16:28:05: Total 7 transcripts loaded\n@ 2021-11-06 16:28:05: Get BAM file(s) ...\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam\n@ 2021-11-06 16:28:05: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...\n\n\n\n\tSample\tSkewness\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam\t3.366683083597443\n@ 2021-11-06 16:28:06: Running R script ...\n", "job_stdout": "", "job_stderr": "", "stderr": "@ 2021-11-06 16:28:05: Read BED file (reference gene model) ...\n@ 2021-11-06 16:28:05: Total 7 transcripts loaded\n@ 2021-11-06 16:28:05: Get BAM file(s) ...\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam\n@ 2021-11-06 16:28:05: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...\n\n\n\n\tSample\tSkewness\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam\t3.366683083597443\n@ 2021-11-06 16:28:06: Running R script ...\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:28:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216086.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:05", "plugin": "core", "name": "start_epoch", "raw_value": "1636216085.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage", "tool_version": "2.6.4.3", "test_index": 1, "time_seconds": 43.3041775226593, "inputs": {"batch_mode|inputs": [{"src": "hda", "id": "991b6c3f40d2445f"}, {"src": "hda", "id": "991b6c3f40d2445f"}, {"src": "hda", "id": "991b6c3f40d2445f"}], "batch_mode|batch_mode_selector": "merge", "refgene": {"src": "hda", "id": "5ab2c870ffb8dd13"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "8e453889a31e3c8d", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:10.546798", "create_time": "2021-11-06T16:27:52.219428", "galaxy_version": "21.05", "command_version": "geneBody_coverage.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3", "history_id": "1787f5936be7ca45", "external_id": "gxy-xpxhv", "command_line": "ln -sf '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/6/9/b/metadata_69be87ae-f774-47ca-8306-5e276722245b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam.bai' && echo 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam' >> 'input_list.txt' &&  ln -sf '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/6/9/b/metadata_69be87ae-f774-47ca-8306-5e276722245b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam.bai' && echo 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam' >> 'input_list.txt' &&  ln -sf '/galaxy/server/database/objects/b/0/c/dataset_b0ce7c89-255e-4c29-98d8-d727239d792b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/6/9/b/metadata_69be87ae-f774-47ca-8306-5e276722245b.dat' 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam.bai' && echo 'pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam' >> 'input_list.txt' && geneBody_coverage.py -i 'input_list.txt' -r '/galaxy/server/database/objects/1/4/a/dataset_14a4bb16-923f-45eb-b220-d4c570b0714f.dat' --minimum_length 100 -o output", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "minimum_length": "\"100\"", "batch_mode": "{\"__current_case__\": 1, \"batch_mode_selector\": \"merge\", \"inputs\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}, {\"id\": 23, \"src\": \"hda\"}, {\"id\": 23, \"src\": \"hda\"}]}}"}, "inputs": {"inputs": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "inputs1": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "inputs2": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "inputs3": {"id": "991b6c3f40d2445f", "src": "hda", "uuid": "b0ce7c89-255e-4c29-98d8-d727239d792b"}, "refgene": {"id": "2a86d880fbd752a1", "src": "hda", "uuid": "14a4bb16-923f-45eb-b220-d4c570b0714f"}}, "outputs": {"outputcurvespdf": {"id": "b851952a91408170", "src": "hda", "uuid": "eb30cf13-49fe-47b5-9748-f2e77fbc4187"}, "outputheatmappdf": {"id": "f9a5b40767fcd5b2", "src": "hda", "uuid": "8c2377d8-545d-40a8-b7c9-266b2e85fe40"}, "outputr": {"id": "e47136b11c77f43c", "src": "hda", "uuid": "39e1c77a-588c-4415-a23b-3532e19cc217"}, "outputtxt": {"id": "377d14dfcfcff666", "src": "hda", "uuid": "aa29904b-7804-403e-9c25-304bef09b23f"}}, "tool_stdout": "null device \n          1 \nnull device \n          1 \n", "tool_stderr": "@ 2021-11-06 16:28:07: Read BED file (reference gene model) ...\n@ 2021-11-06 16:28:07: Total 7 transcripts loaded\n@ 2021-11-06 16:28:07: Get BAM file(s) ...\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam ...\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam ...\n\n\n\n\tSample\tSkewness\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam\t3.366683083597443\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam.1\t3.366683083597443\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam.2\t3.366683083597443\n@ 2021-11-06 16:28:07: Running R script ...\n", "job_stdout": "", "job_stderr": "", "stderr": "@ 2021-11-06 16:28:07: Read BED file (reference gene model) ...\n@ 2021-11-06 16:28:07: Total 7 transcripts loaded\n@ 2021-11-06 16:28:07: Get BAM file(s) ...\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam\n\tpairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam ...\n@ 2021-11-06 16:28:07: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam ...\n\n\n\n\tSample\tSkewness\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam\t3.366683083597443\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam.1\t3.366683083597443\n\tpairend_strandspecific_51mer_hg19_chr1_1_100000_bam.2\t3.366683083597443\n@ 2021-11-06 16:28:07: Running R script ...\n", "stdout": "null device \n          1 \nnull device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:28:07", "plugin": "core", "name": "end_epoch", "raw_value": "1636216087.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:07", "plugin": "core", "name": "start_epoch", "raw_value": "1636216087.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage2/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage2", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 67.7236647605896, "inputs": {"input": {"src": "hda", "id": "96cce2867ef007c1"}, "refgene": {"src": "hda", "id": "39da411d5e0199a6"}}, "job": {"model_class": "Job", "id": "c119bba4f7dab745", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:27:27.343741", "create_time": "2021-11-06T16:26:41.585399", "galaxy_version": "21.05", "command_version": "geneBody_coverage2.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage2/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-2hxvl", "command_line": "geneBody_coverage2.py -i '/galaxy/server/database/objects/9/2/a/dataset_92a7ec99-d6ac-4380-8834-ca48fc8d9074.dat' -r '/galaxy/server/database/objects/b/1/9/dataset_b19cbd7c-1445-413f-b7c6-c408cc3dff22.dat' -o output", "params": {"chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bigwig\""}, "inputs": {"input": {"id": "96cce2867ef007c1", "src": "hda", "uuid": "92a7ec99-d6ac-4380-8834-ca48fc8d9074"}, "refgene": {"id": "86a0139a99ddbee5", "src": "hda", "uuid": "b19cbd7c-1445-413f-b7c6-c408cc3dff22"}}, "outputs": {"outputpdf": {"id": "02435337ae141c11", "src": "hda", "uuid": "a5beff01-1644-4f3b-9bd4-0faa22989805"}, "outputtxt": {"id": "f4dd52bf5602e1ba", "src": "hda", "uuid": "78494a4b-d54a-4fe8-9034-3931c8e3e996"}, "outputr": {"id": "f93ce7c32b4571a0", "src": "hda", "uuid": "17549834-0a9b-4cf5-9cc3-f1570f0e7e3a"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "calculating coverage over gene body ...\n  1 genes finished\r  2 genes finished\r  5 genes finished\r  6 genes finished\r  7 genes finished\r", "job_stdout": "", "job_stderr": "", "stderr": "calculating coverage over gene body ...\n  1 genes finished\r  2 genes finished\r  5 genes finished\r  6 genes finished\r  7 genes finished\r", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:27:25", "plugin": "core", "name": "end_epoch", "raw_value": "1636216045.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "start_epoch", "raw_value": "1636216043.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_infer_experiment/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_infer_experiment", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 37.678301095962524, "inputs": {"input": {"src": "hda", "id": "8bae6d60febbfc76"}, "refgene": {"src": "hda", "id": "4316a2c5f65d11b5"}}, "job": {"model_class": "Job", "id": "f9a5b40767fcd5b2", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:28:49.221009", "create_time": "2021-11-06T16:28:30.771737", "galaxy_version": "21.05", "command_version": "infer_experiment.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_infer_experiment/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-hsl7s", "command_line": "infer_experiment.py -i '/galaxy/server/database/objects/0/9/1/dataset_091e5d25-a753-4d86-b9c1-7333002a964f.dat' -r '/galaxy/server/database/objects/b/5/6/dataset_b56d5dc7-351e-4704-afa0-fef7644a2228.dat' --sample-size 200000 --mapq 30 > '/galaxy/server/database/objects/0/c/f/dataset_0cfb2b29-894b-4c84-b1d8-20f25d0400df.dat'", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"30\"", "sample_size": "\"200000\""}, "inputs": {"refgene": {"id": "fe1b49810a8a442c", "src": "hda", "uuid": "b56d5dc7-351e-4704-afa0-fef7644a2228"}, "input": {"id": "8bae6d60febbfc76", "src": "hda", "uuid": "091e5d25-a753-4d86-b9c1-7333002a964f"}}, "outputs": {"output": {"id": "04791e0106b826a9", "src": "hda", "uuid": "0cfb2b29-894b-4c84-b1d8-20f25d0400df"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Reading reference gene model /galaxy/server/database/objects/b/5/6/dataset_b56d5dc7-351e-4704-afa0-fef7644a2228.dat ... Done\nLoading SAM/BAM file ...  Finished\nTotal 30 usable reads were sampled\n", "stderr": "\nReading reference gene model /galaxy/server/database/objects/b/5/6/dataset_b56d5dc7-351e-4704-afa0-fef7644a2228.dat ... Done\nLoading SAM/BAM file ...  Finished\nTotal 30 usable reads were sampled\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:28:47", "plugin": "core", "name": "end_epoch", "raw_value": "1636216127.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:28:47", "plugin": "core", "name": "start_epoch", "raw_value": "1636216127.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_inner_distance/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_inner_distance", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 39.81280326843262, "inputs": {"input": {"src": "hda", "id": "4c978cd1523fec80"}, "refgene": {"src": "hda", "id": "b0cb459223ba31aa"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "af8b01ba2ee10eef", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:51.631104", "create_time": "2021-11-06T16:29:29.261992", "galaxy_version": "21.05", "command_version": "inner_distance.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_inner_distance/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-7bg6h", "command_line": "inner_distance.py -i '/galaxy/server/database/objects/a/3/1/dataset_a31a1872-efa4-4a5d-a4d3-8753af13abe3.dat' -o output -r '/galaxy/server/database/objects/3/9/4/dataset_394c4b72-87fb-409e-b43c-54e5e68a17b4.dat' --sample-size 200000 --lower-bound -250 --upper-bound 250 --step 5 --mapq 30", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\"", "step": "\"5\"", "upperBound": "\"250\"", "lowerBound": "\"-250\"", "sample_size": "\"200000\""}, "inputs": {"input": {"id": "4c978cd1523fec80", "src": "hda", "uuid": "a31a1872-efa4-4a5d-a4d3-8753af13abe3"}, "refgene": {"id": "0569b576aeb0f997", "src": "hda", "uuid": "394c4b72-87fb-409e-b43c-54e5e68a17b4"}}, "outputs": {"outputpdf": {"id": "3a94a0bf8f958eec", "src": "hda", "uuid": "25bb1a0b-24d5-4b71-bd69-b06513d17c3f"}, "outputtxt": {"id": "d05ab3be813223f7", "src": "hda", "uuid": "c6d8b0f3-c91a-4fc6-85a3-83aa741abb0e"}, "outputfreqtxt": {"id": "809f5d3c757416b9", "src": "hda", "uuid": "88e289b3-e7e8-4a1f-ba14-afc3f7ccfee5"}, "outputr": {"id": "ed2920e3d1db22b1", "src": "hda", "uuid": "a0876bd3-8426-4e75-95f5-0da81d571242"}}, "tool_stdout": "Name\tMean\tMedian\tsd\noutput\t96.4736842105263\t67\t87.858705014265\nnull device \n          1 \n", "tool_stderr": "Get exon regions from /galaxy/server/database/objects/3/9/4/dataset_394c4b72-87fb-409e-b43c-54e5e68a17b4.dat ...\nLoad BAM file ...  Done\nTotal read pairs  used 20\n", "job_stdout": "", "job_stderr": "", "stderr": "Get exon regions from /galaxy/server/database/objects/3/9/4/dataset_394c4b72-87fb-409e-b43c-54e5e68a17b4.dat ...\nLoad BAM file ...  Done\nTotal read pairs  used 20\n", "stdout": "Name\tMean\tMedian\tsd\noutput\t96.4736842105263\t67\t87.858705014265\nnull device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:29:50", "plugin": "core", "name": "end_epoch", "raw_value": "1636216190.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:49", "plugin": "core", "name": "start_epoch", "raw_value": "1636216189.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_insertion_profile/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_insertion_profile", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 23.311914682388306, "inputs": {"input": {"src": "hda", "id": "8684113bc6cb3cdf"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "e8cf047cbccb74c3", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:15.432695", "create_time": "2021-11-06T16:30:05.474916", "galaxy_version": "21.05", "command_version": "insertion_profile.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_insertion_profile/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-2qgdb", "command_line": "insertion_profile.py -i '/galaxy/server/database/objects/5/2/e/dataset_52e9e4a8-8e89-47c3-ad9a-55291ec04574.dat' -o output -q 30 -s \"SE\"", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "layout": "\"SE\"", "mapq": "\"30\""}, "inputs": {"input": {"id": "8684113bc6cb3cdf", "src": "hda", "uuid": "52e9e4a8-8e89-47c3-ad9a-55291ec04574"}}, "outputs": {"outputpdf": {"id": "13655c2cfffdc6a3", "src": "hda", "uuid": "0da8491c-ddef-4c71-b0bc-28c1054f5f65"}, "outputxls": {"id": "106eae5fccd24b5e", "src": "hda", "uuid": "ce944e5c-7cff-4c6b-953b-959301eedb16"}, "outputr": {"id": "8f1d3ff9bda18a32", "src": "hda", "uuid": "0ea1f85d-c1a2-438c-9f53-e43235ac94a5"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "job_stdout": "", "job_stderr": "", "stderr": "Load BAM file ...  Done\nTotoal reads used: 40\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:30:13", "plugin": "core", "name": "end_epoch", "raw_value": "1636216213.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:12", "plugin": "core", "name": "start_epoch", "raw_value": "1636216212.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_annotation/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_annotation", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 71.8674008846283, "inputs": {"input": {"src": "hda", "id": "f76890f9c0b16a9f"}, "refgene": {"src": "hda", "id": "3ca564b21e27d1be"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "1f333ebf3e58ce3e", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:45.725403", "create_time": "2021-11-06T16:28:47.317655", "galaxy_version": "21.05", "command_version": "junction_annotation.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_annotation/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-hvsgs", "command_line": "junction_annotation.py --input-file '/galaxy/server/database/objects/6/a/f/dataset_6afc75cd-7488-4ff7-b72a-214d30dddf58.dat' --refgene '/galaxy/server/database/objects/5/d/1/dataset_5d1f493c-de8f-4506-9043-89955b71e5dd.dat' --out-prefix output --min-intron 50 --mapq 30", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\"", "min_intron": "\"50\""}, "inputs": {"input": {"id": "f76890f9c0b16a9f", "src": "hda", "uuid": "6afc75cd-7488-4ff7-b72a-214d30dddf58"}, "refgene": {"id": "3ca564b21e27d1be", "src": "hda", "uuid": "5d1f493c-de8f-4506-9043-89955b71e5dd"}}, "outputs": {"outputjpdf": {"id": "b3a03ba568de94c0", "src": "hda", "uuid": "041c2e43-bc71-440b-a434-a4ec0bedd1c7"}, "outputxls": {"id": "e8cf047cbccb74c3", "src": "hda", "uuid": "f80ba18b-f013-496f-b518-dba40320f3a7"}, "outputpdf": {"id": "b697f35c76e18373", "src": "hda", "uuid": "8b4c7a0b-a2a4-4c07-8c08-8fa4ff1090a1"}, "outputr": {"id": "f89205e12a1261dd", "src": "hda", "uuid": "a837d246-78e3-454b-a9b5-e4f41f10a23e"}}, "tool_stdout": "null device \n          1 \nnull device \n          1 \ntotal = 4\n", "tool_stderr": "Reading reference bed file:  /galaxy/server/database/objects/5/d/1/dataset_5d1f493c-de8f-4506-9043-89955b71e5dd.dat  ...  Done\nLoad BAM file ...  Done\n\n===================================================================\nTotal splicing  Events:\t4\nKnown Splicing Events:\t1\nPartial Novel Splicing Events:\t1\nNovel Splicing Events:\t1\n\nTotal splicing  Junctions:\t3\nKnown Splicing Junctions:\t1\nPartial Novel Splicing Junctions:\t1\nNovel Splicing Junctions:\t1\n\n===================================================================\n", "job_stdout": "", "job_stderr": "", "stderr": "Reading reference bed file:  /galaxy/server/database/objects/5/d/1/dataset_5d1f493c-de8f-4506-9043-89955b71e5dd.dat  ...  Done\nLoad BAM file ...  Done\n\n===================================================================\nTotal splicing  Events:\t4\nKnown Splicing Events:\t1\nPartial Novel Splicing Events:\t1\nNovel Splicing Events:\t1\n\nTotal splicing  Junctions:\t3\nKnown Splicing Junctions:\t1\nPartial Novel Splicing Junctions:\t1\nNovel Splicing Junctions:\t1\n\n===================================================================\n", "stdout": "null device \n          1 \nnull device \n          1 \ntotal = 4\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:29:43", "plugin": "core", "name": "end_epoch", "raw_value": "1636216183.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:41", "plugin": "core", "name": "start_epoch", "raw_value": "1636216181.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_saturation/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_saturation", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 33.85914611816406, "inputs": {"input": {"src": "hda", "id": "01c915ca5c1c3e45"}, "refgene": {"src": "hda", "id": "e2f65feceb867ce5"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "099e44803f573755", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:31:23.436972", "create_time": "2021-11-06T16:31:07.092180", "galaxy_version": "21.05", "command_version": "junction_saturation.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_saturation/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-8s7n6", "command_line": "junction_saturation.py --input-file '/galaxy/server/database/objects/9/b/a/dataset_9bacfb5c-3875-48bf-9222-23677ca6c683.dat' --refgene '/galaxy/server/database/objects/5/4/c/dataset_54c80037-7fca-48f0-a9a9-2678025b333a.dat' --out-prefix output --min-intron 50 --min-coverage 1 --mapq 30", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "percentiles_type": "{\"__current_case__\": 1, \"percentiles_type_selector\": \"default\"}", "mapq": "\"30\"", "min_coverage": "\"1\"", "min_intron": "\"50\""}, "inputs": {"input": {"id": "01c915ca5c1c3e45", "src": "hda", "uuid": "9bacfb5c-3875-48bf-9222-23677ca6c683"}, "refgene": {"id": "6c68aa16000aeb50", "src": "hda", "uuid": "54c80037-7fca-48f0-a9a9-2678025b333a"}}, "outputs": {"outputpdf": {"id": "cb6b4b9245a70b27", "src": "hda", "uuid": "de14c909-bbbb-43fd-9566-d391e3498304"}, "outputr": {"id": "6f71b1660c287d7b", "src": "hda", "uuid": "7e0a41dd-3e35-4a3c-9a13-3d46c9045a73"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "reading reference bed file:  /galaxy/server/database/objects/5/4/c/dataset_54c80037-7fca-48f0-a9a9-2678025b333a.dat  ...  Done! Total 14 known splicing junctions.\nLoad BAM file ...  Done\nshuffling alignments ... Done\nsampling 5% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 10% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 15% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 20% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 25% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 30% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 35% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 40% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 45% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 50% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 55% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 60% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 65% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 70% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 75% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 80% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 85% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 90% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 95% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 100% (3) splicing reads. 3 splicing junctions. 1 known splicing junctions. 2 novel splicing junctions.\n", "job_stdout": "", "job_stderr": "", "stderr": "reading reference bed file:  /galaxy/server/database/objects/5/4/c/dataset_54c80037-7fca-48f0-a9a9-2678025b333a.dat  ...  Done! Total 14 known splicing junctions.\nLoad BAM file ...  Done\nshuffling alignments ... Done\nsampling 5% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 10% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 15% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 20% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 25% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 30% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.\nsampling 35% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 40% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 45% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 50% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 55% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 60% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 65% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.\nsampling 70% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 75% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 80% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 85% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 90% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 95% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.\nsampling 100% (3) splicing reads. 3 splicing junctions. 1 known splicing junctions. 2 novel splicing junctions.\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:31:21", "plugin": "core", "name": "end_epoch", "raw_value": "1636216281.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:31:20", "plugin": "core", "name": "start_epoch", "raw_value": "1636216280.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_mismatch_profile/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_mismatch_profile", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 27.487778186798096, "inputs": {"input": {"src": "hda", "id": "64d89b8ce9d63c0a"}, "readlength": "101", "rscript_output": true}, "job": {"model_class": "Job", "id": "4316a2c5f65d11b5", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:16.019037", "create_time": "2021-11-06T16:29:02.237920", "galaxy_version": "21.05", "command_version": "mismatch_profile.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_mismatch_profile/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-bxmhx", "command_line": "mismatch_profile.py -i '/galaxy/server/database/objects/3/c/e/dataset_3ce978a2-ec62-467b-9d5e-9d0723f7e244.dat' -o output -l 101 -n 1000000 -q 30", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\"", "readnum": "\"1000000\"", "readlength": "\"101\""}, "inputs": {"input": {"id": "64d89b8ce9d63c0a", "src": "hda", "uuid": "3ce978a2-ec62-467b-9d5e-9d0723f7e244"}}, "outputs": {"outputr": {"id": "cb1ac832cbe7c715", "src": "hda", "uuid": "4d4d85cb-afc5-477d-90f1-4c07da5e29d9"}, "outputxls": {"id": "d17101022365ec2c", "src": "hda", "uuid": "0d4e5f40-4db0-42dc-b433-9b2878770166"}, "outputpdf": {"id": "5c6a2d59370beb42", "src": "hda", "uuid": "3d494922-3abc-4bed-8b81-17fa1f90f1d9"}}, "tool_stdout": "\n\n", "tool_stderr": "Process BAM file ...  No mismatches found\n", "job_stdout": "", "job_stderr": "", "stderr": "Process BAM file ...  No mismatches found\n", "stdout": "\n\n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:29:13", "plugin": "core", "name": "end_epoch", "raw_value": "1636216153.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:13", "plugin": "core", "name": "start_epoch", "raw_value": "1636216153.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_GC/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_GC", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 31.324187994003296, "inputs": {"input": {"src": "hda", "id": "01c915ca5c1c3e45"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "60055e9782591094", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:31:18.981257", "create_time": "2021-11-06T16:31:01.906746", "galaxy_version": "21.05", "command_version": "read_GC.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_GC/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-bmkbb", "command_line": "read_GC.py --input-file '/galaxy/server/database/objects/9/b/a/dataset_9bacfb5c-3875-48bf-9222-23677ca6c683.dat' --out-prefix output --mapq 30", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\""}, "inputs": {"input": {"id": "01c915ca5c1c3e45", "src": "hda", "uuid": "9bacfb5c-3875-48bf-9222-23677ca6c683"}}, "outputs": {"outputpdf": {"id": "55d1609a417b9630", "src": "hda", "uuid": "44a4252a-df31-4069-b5d4-88b75cfa0f7b"}, "outputxls": {"id": "0e4174c31f8165a9", "src": "hda", "uuid": "ae125dc4-83fb-4e52-8730-c0cd54c0d0c1"}, "outputr": {"id": "7f700c2f4f674b3e", "src": "hda", "uuid": "90bbee3e-1b1d-4f9d-ab27-2080d4c50866"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Read BAM file ...  Done\nwriting GC content ...\nwriting R script ...\n", "job_stdout": "", "job_stderr": "", "stderr": "Read BAM file ...  Done\nwriting GC content ...\nwriting R script ...\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:31:15", "plugin": "core", "name": "end_epoch", "raw_value": "1636216275.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:31:14", "plugin": "core", "name": "start_epoch", "raw_value": "1636216274.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_NVC/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_NVC", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 65.26991391181946, "inputs": {"input": {"src": "hda", "id": "bf53f2b3b519c246"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "755d8488f1ed1976", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:27:25.254108", "create_time": "2021-11-06T16:26:35.676747", "galaxy_version": "21.05", "command_version": "read_NVC.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_NVC/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-gs77f", "command_line": "read_NVC.py --input-file '/galaxy/server/database/objects/3/f/9/dataset_3f9d2e86-60e1-4ec1-a2e2-1147437ca01c.dat' --out-prefix output  --mapq 30", "params": {"nx": "\"false\"", "mapq": "\"30\"", "rscript_output": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "bf53f2b3b519c246", "src": "hda", "uuid": "3f9d2e86-60e1-4ec1-a2e2-1147437ca01c"}}, "outputs": {"outputpdf": {"id": "c119bba4f7dab745", "src": "hda", "uuid": "03a3a934-7e85-441b-84f8-4a08fcd0a931"}, "outputxls": {"id": "69350b762ae1b1b6", "src": "hda", "uuid": "42e741fc-4ccc-4508-a32c-431bac0d18d0"}, "outputr": {"id": "17f00805d0696243", "src": "hda", "uuid": "a73db613-97d8-45e7-b122-dc519721ca74"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Read BAM file ...  Done\ngenerating data matrix ...\ngenerating R script  ...\n", "job_stdout": "", "job_stderr": "", "stderr": "Read BAM file ...  Done\ngenerating data matrix ...\ngenerating R script  ...\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:27:24", "plugin": "core", "name": "end_epoch", "raw_value": "1636216044.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "start_epoch", "raw_value": "1636216043.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_distribution/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_distribution", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 30.76915216445923, "inputs": {"input": {"src": "hda", "id": "64d89b8ce9d63c0a"}, "refgene": {"src": "hda", "id": "3ca564b21e27d1be"}}, "job": {"model_class": "Job", "id": "8bae6d60febbfc76", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:13.442719", "create_time": "2021-11-06T16:28:59.736805", "galaxy_version": "21.05", "command_version": "read_distribution.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_distribution/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-6x2pm", "command_line": "read_distribution.py -i '/galaxy/server/database/objects/3/c/e/dataset_3ce978a2-ec62-467b-9d5e-9d0723f7e244.dat' -r '/galaxy/server/database/objects/0/4/1/dataset_041d156d-b344-4c84-9b93-74aef5e34192.dat' > '/galaxy/server/database/objects/b/1/6/dataset_b1672fbd-3789-461f-9e2f-321bcfd9fb38.dat'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"refgene": {"id": "49a13376f2c8c45d", "src": "hda", "uuid": "041d156d-b344-4c84-9b93-74aef5e34192"}, "input": {"id": "64d89b8ce9d63c0a", "src": "hda", "uuid": "3ce978a2-ec62-467b-9d5e-9d0723f7e244"}}, "outputs": {"output": {"id": "16064de0b99578ad", "src": "hda", "uuid": "b1672fbd-3789-461f-9e2f-321bcfd9fb38"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "processing /galaxy/server/database/objects/0/4/1/dataset_041d156d-b344-4c84-9b93-74aef5e34192.dat ... Done\nprocessing /galaxy/server/database/objects/3/c/e/dataset_3ce978a2-ec62-467b-9d5e-9d0723f7e244.dat ... Finished\n\n", "stderr": "\nprocessing /galaxy/server/database/objects/0/4/1/dataset_041d156d-b344-4c84-9b93-74aef5e34192.dat ... Done\nprocessing /galaxy/server/database/objects/3/c/e/dataset_3ce978a2-ec62-467b-9d5e-9d0723f7e244.dat ... Finished\n\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:29:11", "plugin": "core", "name": "end_epoch", "raw_value": "1636216151.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:10", "plugin": "core", "name": "start_epoch", "raw_value": "1636216150.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_duplication/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_duplication", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 65.7353127002716, "inputs": {"input": {"src": "hda", "id": "bf53f2b3b519c246"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "84d0e9d59ae3a49b", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:27:25.259286", "create_time": "2021-11-06T16:26:35.677175", "galaxy_version": "21.05", "command_version": "read_duplication.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_duplication/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-j892z", "command_line": "read_duplication.py -i '/galaxy/server/database/objects/3/f/9/dataset_3f9d2e86-60e1-4ec1-a2e2-1147437ca01c.dat' -o output -u 500 -q 30", "params": {"upLimit": "\"500\"", "mapq": "\"30\"", "rscript_output": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "bf53f2b3b519c246", "src": "hda", "uuid": "3f9d2e86-60e1-4ec1-a2e2-1147437ca01c"}}, "outputs": {"outputpdf": {"id": "755d8488f1ed1976", "src": "hda", "uuid": "8e190d5a-f23f-41b9-8cb2-4fd634342d24"}, "outputxls": {"id": "84d0e9d59ae3a49b", "src": "hda", "uuid": "8e0626aa-b22b-400b-a8f1-bbd1b01cea67"}, "outputseqxls": {"id": "39e4cd38192b3890", "src": "hda", "uuid": "2973aab5-4bc5-47cf-a352-84eac666257c"}, "outputr": {"id": "fbd346e6c0572d3d", "src": "hda", "uuid": "ae61a523-f02f-45f4-b9ce-f0310bad9fd9"}}, "tool_stdout": "null device \n          1 \n", "tool_stderr": "Load BAM file ...  Done\nreport duplicte rate based on sequence ...\nreport duplicte rate based on mapping  ...\ngenerate R script ...\n", "job_stdout": "", "job_stderr": "", "stderr": "Load BAM file ...  Done\nreport duplicte rate based on sequence ...\nreport duplicte rate based on mapping  ...\ngenerate R script ...\n", "stdout": "null device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "end_epoch", "raw_value": "1636216043.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:27:23", "plugin": "core", "name": "start_epoch", "raw_value": "1636216043.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 26.85749626159668, "inputs": {"inputs": {"src": "hda", "id": "dfd6fff22d3d0170"}}, "job": {"model_class": "Job", "id": "04791e0106b826a9", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:43.728930", "create_time": "2021-11-06T16:29:31.152904", "galaxy_version": "21.05", "command_version": "read_hexamer.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-wgbwf", "command_line": "ln -sf '/galaxy/server/database/objects/a/0/d/dataset_a0d34a11-41d9-417e-8e8f-0dffe3fe2fb9.dat' \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq\" && read_hexamer.py -i 'pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq' > '/galaxy/server/database/objects/1/8/9/dataset_189212d7-430a-4441-948e-e507610a1197.dat'", "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "refgene": null, "refgenome": null}, "inputs": {"inputs": {"id": "dfd6fff22d3d0170", "src": "hda", "uuid": "a0d34a11-41d9-417e-8e8f-0dffe3fe2fb9"}}, "outputs": {"output": {"id": "099e44803f573755", "src": "hda", "uuid": "189212d7-430a-4441-948e-e507610a1197"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\n", "stderr": "\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:29:42", "plugin": "core", "name": "end_epoch", "raw_value": "1636216182.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216182.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer", "tool_version": "2.6.4", "test_index": 1, "time_seconds": 21.53171133995056, "inputs": {"inputs": {"src": "hda", "id": "29df294e24930a90"}}, "job": {"model_class": "Job", "id": "3ca564b21e27d1be", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:05.320152", "create_time": "2021-11-06T16:29:57.746512", "galaxy_version": "21.05", "command_version": "read_hexamer.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-2hfkl", "command_line": "gunzip -c '/galaxy/server/database/objects/a/b/2/dataset_ab2df753-9a38-497d-b6d3-26144db45d7f.dat' > \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq_gz\" && read_hexamer.py -i 'pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq_gz' > '/galaxy/server/database/objects/6/7/3/dataset_673fa35c-3378-4923-85f1-b153f0a79267.dat'", "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "refgene": null, "refgenome": null}, "inputs": {"inputs": {"id": "29df294e24930a90", "src": "hda", "uuid": "ab2df753-9a38-497d-b6d3-26144db45d7f"}}, "outputs": {"output": {"id": "672bd277937cd53f", "src": "hda", "uuid": "673fa35c-3378-4923-85f1-b153f0a79267"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq_gz file ... Done\n", "stderr": "\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq_gz file ... Done\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:04", "plugin": "core", "name": "end_epoch", "raw_value": "1636216204.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:04", "plugin": "core", "name": "start_epoch", "raw_value": "1636216204.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer", "tool_version": "2.6.4", "test_index": 2, "time_seconds": 24.148314952850342, "inputs": {"inputs": [{"src": "hda", "id": "78309b53d8e865dd"}, {"src": "hda", "id": "47b83f952ac694ea"}]}, "job": {"model_class": "Job", "id": "b697f35c76e18373", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:08.977504", "create_time": "2021-11-06T16:30:00.688687", "galaxy_version": "21.05", "command_version": "read_hexamer.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-7s8f2", "command_line": "ln -sf '/galaxy/server/database/objects/9/6/d/dataset_96d3bced-38dc-4826-90ff-0f3f24af66ec.dat' \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq\" &&    ln -sf '/galaxy/server/database/objects/9/9/2/dataset_992487db-401c-4814-bb4f-55e2af0f50eb.dat' \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R2_fastq\" && read_hexamer.py -i 'pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq,pairend_strandspecific_51mer_hg19_chr1_1-100000_R2_fastq' > '/galaxy/server/database/objects/e/6/e/dataset_e6e6b666-8b98-4454-9fa1-4368733ed180.dat'", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "refgene": null, "refgenome": null}, "inputs": {"inputs": {"id": "78309b53d8e865dd", "src": "hda", "uuid": "96d3bced-38dc-4826-90ff-0f3f24af66ec"}, "inputs1": {"id": "78309b53d8e865dd", "src": "hda", "uuid": "96d3bced-38dc-4826-90ff-0f3f24af66ec"}, "inputs2": {"id": "47b83f952ac694ea", "src": "hda", "uuid": "992487db-401c-4814-bb4f-55e2af0f50eb"}}, "outputs": {"output": {"id": "c8e21f68297fb366", "src": "hda", "uuid": "e6e6b666-8b98-4454-9fa1-4368733ed180"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R2_fastq file ... Done\n", "stderr": "\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R2_fastq file ... Done\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:06", "plugin": "core", "name": "end_epoch", "raw_value": "1636216206.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:06", "plugin": "core", "name": "start_epoch", "raw_value": "1636216206.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer", "tool_version": "2.6.4", "test_index": 3, "time_seconds": 24.72841191291809, "inputs": {"inputs": [{"src": "hda", "id": "78309b53d8e865dd"}, {"src": "hda", "id": "78309b53d8e865dd"}]}, "job": {"model_class": "Job", "id": "b3a03ba568de94c0", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:30:10.940095", "create_time": "2021-11-06T16:30:01.371615", "galaxy_version": "21.05", "command_version": "read_hexamer.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-58nzf", "command_line": "ln -sf '/galaxy/server/database/objects/9/6/d/dataset_96d3bced-38dc-4826-90ff-0f3f24af66ec.dat' \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq\" &&    ln -sf '/galaxy/server/database/objects/9/6/d/dataset_96d3bced-38dc-4826-90ff-0f3f24af66ec.dat' \"pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq.1\" && read_hexamer.py -i 'pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq,pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq.1' > '/galaxy/server/database/objects/8/f/1/dataset_8f1dbd21-5c86-4a94-ba33-9822f92d49bc.dat'", "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "refgene": null, "refgenome": null}, "inputs": {"inputs": {"id": "78309b53d8e865dd", "src": "hda", "uuid": "96d3bced-38dc-4826-90ff-0f3f24af66ec"}, "inputs1": {"id": "78309b53d8e865dd", "src": "hda", "uuid": "96d3bced-38dc-4826-90ff-0f3f24af66ec"}, "inputs2": {"id": "78309b53d8e865dd", "src": "hda", "uuid": "96d3bced-38dc-4826-90ff-0f3f24af66ec"}}, "outputs": {"output": {"id": "1afa5eef1eeb7c53", "src": "hda", "uuid": "8f1dbd21-5c86-4a94-ba33-9822f92d49bc"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq.1 file ... Done\n", "stderr": "\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done\nCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq.1 file ... Done\n", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:30:09", "plugin": "core", "name": "end_epoch", "raw_value": "1636216209.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:30:09", "plugin": "core", "name": "start_epoch", "raw_value": "1636216209.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_quality/2.6.4-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_quality", "tool_version": "2.6.4", "test_index": 0, "time_seconds": 31.186753273010254, "inputs": {"input": {"src": "hda", "id": "30163e630f7aa293"}, "rscript_output": true}, "job": {"model_class": "Job", "id": "fe1b49810a8a442c", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:44.676053", "create_time": "2021-11-06T16:29:30.136537", "galaxy_version": "21.05", "command_version": "read_quality.py 2.6.2\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_quality/2.6.4", "history_id": "1787f5936be7ca45", "external_id": "gxy-lhjlh", "command_line": "read_quality.py --input-file '/galaxy/server/database/objects/f/9/7/dataset_f977424c-1d14-4850-884e-7e6ba6627c85.dat' --out-prefix output -r 1000 --mapq 30", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "rscript_output": "\"true\"", "mapq": "\"30\"", "reduce": "\"1000\""}, "inputs": {"input": {"id": "30163e630f7aa293", "src": "hda", "uuid": "f977424c-1d14-4850-884e-7e6ba6627c85"}}, "outputs": {"outputheatpdf": {"id": "827a280cdc88d053", "src": "hda", "uuid": "17af1922-a8e8-41f0-8c6c-9565cc05e125"}, "outputboxpdf": {"id": "60055e9782591094", "src": "hda", "uuid": "bbb96800-fb89-4d34-ba7c-3824d9a76509"}, "outputr": {"id": "ed5927c0c13756fb", "src": "hda", "uuid": "cea7f66f-23c3-4eec-a907-d9dd44dc0b83"}}, "tool_stdout": "null device \n          1 \nnull device \n          1 \n", "tool_stderr": "Read BAM file ...  Done\n", "job_stdout": "", "job_stderr": "", "stderr": "Read BAM file ...  Done\n", "stdout": "null device \n          1 \nnull device \n          1 \n", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2021-11-06 16:29:43", "plugin": "core", "name": "end_epoch", "raw_value": "1636216183.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:42", "plugin": "core", "name": "start_epoch", "raw_value": "1636216182.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_tin/2.6.4.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_tin", "tool_version": "2.6.4.1", "test_index": 0, "time_seconds": 34.87101626396179, "inputs": {"input": {"src": "hda", "id": "64d89b8ce9d63c0a"}, "refgene": {"src": "hda", "id": "3ca564b21e27d1be"}}, "job": {"model_class": "Job", "id": "b55050e835a88d64", "state": "ok", "exit_code": 0, "update_time": "2021-11-06T16:29:12.387768", "create_time": "2021-11-06T16:28:55.171240", "galaxy_version": "21.05", "command_version": "tin.py 2.6.4\n", "tool_id": "toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_tin/2.6.4.1", "history_id": "1787f5936be7ca45", "external_id": "gxy-gpr7x", "command_line": "ln -sf '/galaxy/server/database/objects/3/c/e/dataset_3ce978a2-ec62-467b-9d5e-9d0723f7e244.dat' 'input.bam' && ln -sf '/galaxy/server/database/objects/_metadata_files/d/9/1/metadata_d91c33ca-2833-4e8a-9b2f-b58e5acc327c.dat' 'input.bam.bai' && tin.py -i 'input.bam' --refgene='/galaxy/server/database/objects/5/d/1/dataset_5d1f493c-de8f-4506-9043-89955b71e5dd.dat' --minCov=10 --sample-size=100", "params": {"__input_ext": "\"auto\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "subtractbackground": "\"false\"", "samplesize": "\"100\"", "minCov": "\"10\""}, "inputs": {"refgene": {"id": "3ca564b21e27d1be", "src": "hda", "uuid": "5d1f493c-de8f-4506-9043-89955b71e5dd"}, "input": {"id": "64d89b8ce9d63c0a", "src": "hda", "uuid": "3ce978a2-ec62-467b-9d5e-9d0723f7e244"}}, "outputs": {"outputxls": {"id": "d01f82de43b85f9b", "src": "hda", "uuid": "8b67a954-69a1-4b2a-b10c-d7de826dc099"}, "outputsummary": {"id": "96d2d51351f8309c", "src": "hda", "uuid": "88593a91-95c6-4b5b-85d2-9ba897a3626f"}}, "tool_stdout": "", "tool_stderr": "@ 2021-11-06 16:29:09: Get BAM file(s) ...\nTotal 1 BAM file(s):\n\tinput.bam\n@ 2021-11-06 16:29:09: Processing input.bam\n 2 transcripts finished\r", "job_stdout": "", "job_stderr": "", "stderr": "@ 2021-11-06 16:29:09: Get BAM file(s) ...\nTotal 1 BAM file(s):\n\tinput.bam\n@ 2021-11-06 16:29:09: Processing input.bam\n 2 transcripts finished\r", "stdout": "", "job_messages": [], "user_email": "alex@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2021-11-06 16:29:09", "plugin": "core", "name": "end_epoch", "raw_value": "1636216149.0000000"}, {"title": "Job Start Time", "value": "2021-11-06 16:29:09", "plugin": "core", "name": "start_epoch", "raw_value": "1636216149.0000000"}, {"title": "Memory Allocated (MB)", "value": "2000", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "2000.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 1835.048585653305, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e684b3b3cb2815d1"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "7b1422a8bcd01301"}}, "job": {"model_class": "Job", "id": "51200b6a84461021", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:38:48.430929", "create_time": "2021-11-06T17:08:43.170711", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-r5pwr", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/a/6/d/dataset_a6dc55a0-a431-40d8-b514-18899f53ee60.dat --pe1-2 fastq:/galaxy/server/database/objects/e/d/4/dataset_ed433eb0-6df7-46d8-ad99-68c12abb4cc6.dat && python '/galaxy/server/database/jobs_directory/000/239/configs/tmp4fvqdhua' < contigs.fasta > '/galaxy/server/database/objects/4/0/5/dataset_405934fd-d26a-48ae-9ee2-dee4464cbf07.dat' && python '/galaxy/server/database/jobs_directory/000/239/configs/tmp4fvqdhua' < scaffolds.fasta > '/galaxy/server/database/objects/d/6/d/dataset_d6dbdd07-a3aa-4c9c-a850-96087b368ba9.dat'", "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 279, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 280, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e684b3b3cb2815d1", "src": "hda", "uuid": "a6dc55a0-a431-40d8-b514-18899f53ee60"}, "libraries_0|files_0|rev_reads": {"id": "7b1422a8bcd01301", "src": "hda", "uuid": "ed433eb0-6df7-46d8-ad99-68c12abb4cc6"}}, "outputs": {"out_contig_stats": {"id": "bf4ed17d8307ad12", "src": "hda", "uuid": "405934fd-d26a-48ae-9ee2-dee4464cbf07"}, "out_scaffold_stats": {"id": "545924d6a1c02b0b", "src": "hda", "uuid": "d6dbdd07-a3aa-4c9c-a850-96087b368ba9"}, "out_contigs": {"id": "c8277d816e54d7b1", "src": "hda", "uuid": "62e5e2cf-f5a0-4220-ad34-bb0e68868bf1"}, "out_scaffolds": {"id": "be6da315f90cfa2c", "src": "hda", "uuid": "618b59de-bd80-43d7-8d38-0d7df9fae8b2"}, "out_log": {"id": "e442ba01b4ba6e36", "src": "hda", "uuid": "c5e246fc-fd92-4abf-a3a7-6c6f069404e7"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 1823.7218463420868, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "94ba215e7969be2c"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "d930addebd060a31"}}, "job": {"model_class": "Job", "id": "ddae137a64e7242f", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:38:37.219054", "create_time": "2021-11-06T17:08:30.311196", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-sspsd", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/7/3/c/dataset_73c5f626-325e-45b6-8bfd-e5f10a64f600.dat --pe1-2 fasta:/galaxy/server/database/objects/0/8/a/dataset_08a346e1-6ec6-4392-927e-c26a030e80a9.dat && python '/galaxy/server/database/jobs_directory/000/237/configs/tmp4twy6qim' < contigs.fasta > '/galaxy/server/database/objects/a/4/3/dataset_a43fc274-60d9-4137-83e9-de5ee55dc764.dat' && python '/galaxy/server/database/jobs_directory/000/237/configs/tmp4twy6qim' < scaffolds.fasta > '/galaxy/server/database/objects/b/9/8/dataset_b9871792-5218-4c37-8c4b-3be335c7e44a.dat'", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 273, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 276, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"true\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "94ba215e7969be2c", "src": "hda", "uuid": "73c5f626-325e-45b6-8bfd-e5f10a64f600"}, "libraries_0|files_0|rev_reads": {"id": "d930addebd060a31", "src": "hda", "uuid": "08a346e1-6ec6-4392-927e-c26a030e80a9"}}, "outputs": {"out_contig_stats": {"id": "97bd74cf06dbb780", "src": "hda", "uuid": "a43fc274-60d9-4137-83e9-de5ee55dc764"}, "out_scaffold_stats": {"id": "d494a7fab362f196", "src": "hda", "uuid": "b9871792-5218-4c37-8c4b-3be335c7e44a"}, "out_contigs": {"id": "54e96dfda3eaea2f", "src": "hda", "uuid": "e503b16e-4bde-496e-b2ac-dc4ddacabbe3"}, "out_scaffolds": {"id": "0ca2b47b7c8a643a", "src": "hda", "uuid": "20c333e0-801a-42cd-97b3-7aecd46b4d86"}, "out_log": {"id": "9e3ed10277966b93", "src": "hda", "uuid": "a9b52ff9-b23c-4906-aa3a-a84bf9bff095"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 1835.0432577133179, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "d60c2321399d278d"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "6c446da52e23b7c3"}}, "job": {"model_class": "Job", "id": "9dcc6cce4f0fd876", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:38:48.342245", "create_time": "2021-11-06T17:08:43.159671", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-zhdbv", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/e/9/0/dataset_e903181b-d6d5-4767-bf6e-c64f3aaf3702.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/c/e/8/dataset_ce8845d9-ccaa-45e7-8d06-0b9ad850b768.dat && python '/galaxy/server/database/jobs_directory/000/238/configs/tmplggmrcyu' < contigs.fasta > '/galaxy/server/database/objects/0/6/d/dataset_06d7078e-3bda-41b8-a23c-89119fda2295.dat' && python '/galaxy/server/database/jobs_directory/000/238/configs/tmplggmrcyu' < scaffolds.fasta > '/galaxy/server/database/objects/6/a/0/dataset_6a09bfaf-71ad-45ad-b580-70c24eeccafa.dat'", "params": {"__input_ext": "\"fastq.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 275, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 277, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "d60c2321399d278d", "src": "hda", "uuid": "e903181b-d6d5-4767-bf6e-c64f3aaf3702"}, "libraries_0|files_0|rev_reads": {"id": "6c446da52e23b7c3", "src": "hda", "uuid": "ce8845d9-ccaa-45e7-8d06-0b9ad850b768"}}, "outputs": {"out_contig_stats": {"id": "0109c3b829848cea", "src": "hda", "uuid": "06d7078e-3bda-41b8-a23c-89119fda2295"}, "out_scaffold_stats": {"id": "229481560a1a98bd", "src": "hda", "uuid": "6a09bfaf-71ad-45ad-b580-70c24eeccafa"}, "out_contigs": {"id": "34e6ca23acc12d16", "src": "hda", "uuid": "1fe0083e-0cda-467f-9f06-e2a22ef99bb0"}, "out_scaffolds": {"id": "239f606e9c7072d5", "src": "hda", "uuid": "caecbc51-a716-4992-a658-f322ea728804"}, "out_log": {"id": "523c040af3e4add7", "src": "hda", "uuid": "25d59902-49a2-43f7-9f44-0d2317d5b4b3"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 1829.218610048294, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e684b3b3cb2815d1"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "7b1422a8bcd01301"}}, "job": {"model_class": "Job", "id": "959e6a3724c683a5", "state": "error", "exit_code": null, "update_time": "2021-11-06T17:38:48.522538", "create_time": "2021-11-06T17:08:43.583207", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-m9lb6", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/a/6/d/dataset_a6dc55a0-a431-40d8-b514-18899f53ee60.dat --pe1-2 fastq:/galaxy/server/database/objects/e/d/4/dataset_ed433eb0-6df7-46d8-ad99-68c12abb4cc6.dat && python '/galaxy/server/database/jobs_directory/000/240/configs/tmpl9z4y3b5' < contigs.fasta > '/galaxy/server/database/objects/5/d/f/dataset_5dfe843d-0ae5-4c9d-b3d3-7058ee7c2110.dat' && python '/galaxy/server/database/jobs_directory/000/240/configs/tmpl9z4y3b5' < scaffolds.fasta > '/galaxy/server/database/objects/e/7/d/dataset_e7d76e67-74bc-4463-bbe5-fe6a58ac1ea8.dat'", "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 279, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 280, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": \"true\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e684b3b3cb2815d1", "src": "hda", "uuid": "a6dc55a0-a431-40d8-b514-18899f53ee60"}, "libraries_0|files_0|rev_reads": {"id": "7b1422a8bcd01301", "src": "hda", "uuid": "ed433eb0-6df7-46d8-ad99-68c12abb4cc6"}}, "outputs": {"out_contig_stats": {"id": "957467ec75e1a9a6", "src": "hda", "uuid": "5dfe843d-0ae5-4c9d-b3d3-7058ee7c2110"}, "out_scaffold_stats": {"id": "60cc4090da8bfe2e", "src": "hda", "uuid": "e7d76e67-74bc-4463-bbe5-fe6a58ac1ea8"}, "out_contigs": {"id": "3c492b11fcbebce3", "src": "hda", "uuid": "3720d338-4417-41d1-bbbe-abf637ef2eb5"}, "out_scaffolds": {"id": "8bc6362abe2c9ec8", "src": "hda", "uuid": "a3188006-9a44-40ee-8527-6c12a06f19e1"}, "out_log": {"id": "964d8f3af7e97b46", "src": "hda", "uuid": "f255bb57-06f5-4e9c-94ba-82593f754f6c"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 1813.12873005867, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "c2c382cb8793a9d5"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "61aca3e2d76bfab8"}}, "job": {"model_class": "Job", "id": "8ee705cb857d3836", "state": "error", "exit_code": null, "update_time": "2021-11-06T18:08:50.637644", "create_time": "2021-11-06T17:38:46.222399", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-f5nw7", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/d/4/7/dataset_d4771120-caa7-4ab2-a5f1-947901da3fcc.dat --pe1-2 fastq:/galaxy/server/database/objects/5/0/e/dataset_50ed89a1-1758-407f-9526-6d8d473359c9.dat && python '/galaxy/server/database/jobs_directory/000/243/configs/tmprqilyo8u' < contigs.fasta > '/galaxy/server/database/objects/c/4/4/dataset_c44f73d7-372b-4c39-9dd2-e117b1530e7d.dat' && python '/galaxy/server/database/jobs_directory/000/243/configs/tmprqilyo8u' < scaffolds.fasta > '/galaxy/server/database/objects/d/1/4/dataset_d14814f7-aa77-43ae-b222-73df60ecc2f9.dat'", "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 301, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 302, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"77\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "c2c382cb8793a9d5", "src": "hda", "uuid": "d4771120-caa7-4ab2-a5f1-947901da3fcc"}, "libraries_0|files_0|rev_reads": {"id": "61aca3e2d76bfab8", "src": "hda", "uuid": "50ed89a1-1758-407f-9526-6d8d473359c9"}}, "outputs": {"out_contig_stats": {"id": "d0ce1d96168e4a11", "src": "hda", "uuid": "c44f73d7-372b-4c39-9dd2-e117b1530e7d"}, "out_scaffold_stats": {"id": "6477623383820014", "src": "hda", "uuid": "d14814f7-aa77-43ae-b222-73df60ecc2f9"}, "out_contigs": {"id": "a50df6a2462c01af", "src": "hda", "uuid": "4c8f432a-cbe4-4afe-a2f9-89f4f7332299"}, "out_scaffolds": {"id": "0729f46fadf5ec9d", "src": "hda", "uuid": "8cb0d12e-9a32-43b2-b71d-041797e50abf"}, "out_log": {"id": "2432d46749da5b44", "src": "hda", "uuid": "81602ba4-81ff-4c1b-81ed-d303ad5ba6e2"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 1827.169514656067, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e07f42959faa78f8"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "83f02cd8c5fe4306"}, "contig_graph_out": true, "scaffold_graph_out": true}, "job": {"model_class": "Job", "id": "5682d895d8729cdb", "state": "error", "exit_code": null, "update_time": "2021-11-06T18:09:15.160759", "create_time": "2021-11-06T17:39:04.108489", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-cpp8k", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/5/f/d/dataset_5fda184c-84e1-491a-a914-2f5ec991564e.dat --pe1-2 fastq:/galaxy/server/database/objects/3/e/4/dataset_3e44eba1-1dbd-4e41-879d-92183351cfe0.dat && python '/galaxy/server/database/jobs_directory/000/250/configs/tmpea_cxm6t' < contigs.fasta > '/galaxy/server/database/objects/6/0/f/dataset_60f5b899-87fa-428c-a6b4-482f7c5425ab.dat' && python '/galaxy/server/database/jobs_directory/000/250/configs/tmpea_cxm6t' < scaffolds.fasta > '/galaxy/server/database/objects/a/0/1/dataset_a01236bb-16c6-49d9-bb1b-d73a08578ee1.dat'", "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"true\"", "contig_graph_out": "\"true\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 309, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e07f42959faa78f8", "src": "hda", "uuid": "5fda184c-84e1-491a-a914-2f5ec991564e"}, "libraries_0|files_0|rev_reads": {"id": "83f02cd8c5fe4306", "src": "hda", "uuid": "3e44eba1-1dbd-4e41-879d-92183351cfe0"}}, "outputs": {"out_contig_stats": {"id": "2c4fe8fd9d9012f0", "src": "hda", "uuid": "60f5b899-87fa-428c-a6b4-482f7c5425ab"}, "out_scaffold_stats": {"id": "be0373ad35cc53ef", "src": "hda", "uuid": "a01236bb-16c6-49d9-bb1b-d73a08578ee1"}, "out_contigs": {"id": "6beea5c6988f625c", "src": "hda", "uuid": "8bd934c6-4a0d-43ce-a2ab-7c8fc737692b"}, "out_scaffolds": {"id": "88385429b9f8bc0f", "src": "hda", "uuid": "994fac88-e598-4489-8cda-e8dea8633f83"}, "out_log": {"id": "4b86abe1c3fd4128", "src": "hda", "uuid": "43182fa3-4fbf-4090-8128-912c9e532ec3"}, "contig_graph": {"id": "af6e7707c86f8f72", "src": "hda", "uuid": "5d470fa5-80ba-4862-b837-2287729a936c"}, "scaffold_graph": {"id": "1089ad3c810e9b63", "src": "hda", "uuid": "38f1968e-4a0b-403f-aad3-ae2d99c2217c"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 1828.2770884037018, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e07f42959faa78f8"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "83f02cd8c5fe4306"}}, "job": {"model_class": "Job", "id": "3b16aca4a5c03425", "state": "error", "exit_code": null, "update_time": "2021-11-06T18:09:16.665781", "create_time": "2021-11-06T17:39:10.382612", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-dg52b", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/5/f/d/dataset_5fda184c-84e1-491a-a914-2f5ec991564e.dat --pe1-2 fastq:/galaxy/server/database/objects/3/e/4/dataset_3e44eba1-1dbd-4e41-879d-92183351cfe0.dat && python '/galaxy/server/database/jobs_directory/000/251/configs/tmpi_6xs9j5' < contigs.fasta > '/galaxy/server/database/objects/5/c/5/dataset_5c52834b-1f40-41e9-824d-a4dc0edd992c.dat' && python '/galaxy/server/database/jobs_directory/000/251/configs/tmpi_6xs9j5' < scaffolds.fasta > '/galaxy/server/database/objects/e/0/a/dataset_e0a08fc7-8223-4921-90d4-ef528fc2ec0f.dat'", "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 309, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e07f42959faa78f8", "src": "hda", "uuid": "5fda184c-84e1-491a-a914-2f5ec991564e"}, "libraries_0|files_0|rev_reads": {"id": "83f02cd8c5fe4306", "src": "hda", "uuid": "3e44eba1-1dbd-4e41-879d-92183351cfe0"}}, "outputs": {"out_contig_stats": {"id": "eb5ae4baa5a20b14", "src": "hda", "uuid": "5c52834b-1f40-41e9-824d-a4dc0edd992c"}, "out_scaffold_stats": {"id": "cd00a13f59a771f5", "src": "hda", "uuid": "e0a08fc7-8223-4921-90d4-ef528fc2ec0f"}, "out_contigs": {"id": "ba906ec358e6f27b", "src": "hda", "uuid": "c579723e-aa97-42d8-a61c-cfed72c383ed"}, "out_scaffolds": {"id": "635c0c5259644625", "src": "hda", "uuid": "524dba2d-d925-4177-a90c-b089b7394d73"}, "out_log": {"id": "1ca17e3b9691b697", "src": "hda", "uuid": "2db94bf9-f91a-4313-9dc6-da7dfe609c54"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 1828.1908550262451, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "107465466ebb2f33"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "c947a808fd32098b"}}, "job": {"model_class": "Job", "id": "5d676c3309aeaeb3", "state": "error", "exit_code": null, "update_time": "2021-11-06T18:09:16.739768", "create_time": "2021-11-06T17:39:10.603865", "galaxy_version": "21.05", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1787f5936be7ca45", "external_id": "gxy-cp5hl", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/5/5/1/dataset_5514c5da-62db-4d97-b9e2-75125ef4fa1f.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/b/d/f/dataset_bdf1b8db-88c5-4771-8915-f3811dc773da.dat && python '/galaxy/server/database/jobs_directory/000/252/configs/tmptk9q9cpo' < contigs.fasta > '/galaxy/server/database/objects/f/e/e/dataset_fee13b88-a239-4ecf-9e2e-2f1924ae3456.dat' && python '/galaxy/server/database/jobs_directory/000/252/configs/tmptk9q9cpo' < scaffolds.fasta > '/galaxy/server/database/objects/4/1/c/dataset_41c87990-c641-403a-8159-f64777943658.dat'", "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "\"false\"", "contig_graph_out": "\"false\"", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 310, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "\"false\"", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": \"false\", \"kmers\": \"33\"}", "careful": "\"false\"", "onlyassembler": "\"false\"", "sc": "\"false\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "107465466ebb2f33", "src": "hda", "uuid": "5514c5da-62db-4d97-b9e2-75125ef4fa1f"}, "libraries_0|files_0|rev_reads": {"id": "c947a808fd32098b", "src": "hda", "uuid": "bdf1b8db-88c5-4771-8915-f3811dc773da"}}, "outputs": {"out_contig_stats": {"id": "6c2464fcfc040a0c", "src": "hda", "uuid": "fee13b88-a239-4ecf-9e2e-2f1924ae3456"}, "out_scaffold_stats": {"id": "917ce72e7e8be8a4", "src": "hda", "uuid": "41c87990-c641-403a-8159-f64777943658"}, "out_contigs": {"id": "0a797370341f06e8", "src": "hda", "uuid": "40d8cb7f-d4fd-424b-8bf2-f0b5afd576cf"}, "out_scaffolds": {"id": "076c22d3274eb935", "src": "hda", "uuid": "e36f8ca7-b22e-4f0c-9acd-6ad1b57209dd"}, "out_log": {"id": "ef7d914c16dc839e", "src": "hda", "uuid": "6953a122-ebf6-412b-a793-f31fd149ad99"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "user_email": "alex@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}]}